{"version":3,"sources":["./src/app/pages/content-pages/coming-soon/coming-soon-page.component.ts","./src/app/pages/content-pages/coming-soon/coming-soon-page.component.html","./src/app/pages/content-pages/content-pages-routing.module.ts","./src/app/pages/content-pages/content-pages.module.ts","./src/app/pages/content-pages/error/error-page.component.ts","./src/app/pages/content-pages/error/error-page.component.html","./src/app/pages/content-pages/forgot-password/forgot-password-page.component.ts","./src/app/pages/content-pages/forgot-password/forgot-password-page.component.html","./src/app/pages/content-pages/lock-screen/lock-screen-page.component.ts","./src/app/pages/content-pages/lock-screen/lock-screen-page.component.html","./src/app/pages/content-pages/login/login-page.component.ts","./src/app/pages/content-pages/login/login-page.component.html","./src/app/pages/content-pages/maintenance/maintenance-page.component.ts","./src/app/pages/content-pages/maintenance/maintenance-page.component.html","./src/app/pages/content-pages/register/register-page.component.ts","./src/app/pages/content-pages/register/register-page.component.html","./src/app/shared/directives/must-match.validator.ts"],"names":[],"mappings":"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","file":"pages-content-pages-content-pages-module.js","sourcesContent":["import { Component, Input, OnDestroy, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { interval, Subject } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport * as moment from 'moment';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n    selector: 'app-coming-soon-page',\n    templateUrl: './coming-soon-page.component.html',\n    styleUrls: ['./coming-soon-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class ComingSoonPageComponent implements OnInit, OnDestroy {\n\n    pickDate = new Date().setMonth(new Date().getMonth() + 2);\n    datePipe = new DatePipe('en-US');\n    launchDate = this.datePipe.transform(this.pickDate, 'yyyy-MM-dd');\n\n    countdown: any;\n\n    private _unsubscribeAll: Subject<any>;\n\n    constructor(private cdr: ChangeDetectorRef) {\n        // Set the defaults\n        this.countdown = {\n            weeks: '',\n            days: '',\n            hours: '',\n            minutes: '',\n            seconds: ''\n        };\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    ngOnInit() {\n        const currDate = moment();\n        const launchDate = moment(this.launchDate);\n        let diff = launchDate.diff(currDate, 'seconds');\n        this.countdown = this.calculateRemainingTime(diff);\n\n        // Create a subscribable interval\n        const countDown = interval(1000)\n            .pipe(\n                map(value => {\n                    return diff = diff - 1;\n                }),\n                map(value => {\n                    return this.calculateRemainingTime(value);\n                })\n            );\n\n        // Subscribe to the countdown interval\n        countDown\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(value => {\n                this.countdown = value;\n                this.cdr.detectChanges();\n            });\n\n    }\n\n    ngOnDestroy(): void {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    private calculateRemainingTime(seconds): any {\n        const timeLeft = moment.duration(seconds, 'seconds');\n\n        return {\n            weeks: timeLeft.asWeeks().toFixed(0),\n            days: timeLeft.asDays().toFixed(0),\n            hours: timeLeft.hours(),\n            minutes: timeLeft.minutes(),\n            seconds: timeLeft.seconds()\n        };\n    }\n}\n","<!--Coming soon starts-->\n<section id=\"coming-soon\">\n  <div class=\"container-fluid\">\n    <div class=\"row auth-height full-height-vh\">\n      <div class=\"col-12 d-flex align-items-center justify-content-center\">\n        <div class=\"card card-coming-soon box-shadow-0 overflow-hidden\">\n          <div class=\"card-header text-center pt-4 pb-3\">\n            <img alt=\"avtar\" class=\"img-fluid\" src=\"assets/img/gallery/coming-soon.png\" width=\"200\">\n          </div>\n          <div id=\"clockFlat\" class=\"getting-started px-sm-2\">\n            <div class=\"clockCard d-inline-block text-center px-3 px-sm-4 py-3\">\n              <span>{{ countdown.days }}</span>\n              <br>\n              <p class=\"lead m-0\">Days</p>\n            </div>\n            <div class=\"clockCard d-inline-block text-center px-3 px-sm-4 py-3\">\n              <span>{{ countdown.hours }}</span>\n              <br>\n              <p class=\"lead m-0\">Hours</p>\n            </div>\n            <div class=\"clockCard d-inline-block text-center px-3 px-sm-4 py-3\">\n              <span>{{ countdown.minutes }}</span>\n              <br>\n              <p class=\"lead m-0\">Minutes</p>\n            </div>\n            <div class=\"clockCard d-inline-block text-center px-3 px-sm-4 py-3\">\n              <span>{{ countdown.seconds }}</span>\n              <br>\n              <p class=\"lead m-0\">Seconds</p>\n            </div>\n          </div>\n          <div class=\"card-content\">\n            <div class=\"card-body text-center pt-1\">\n              <h2 class=\"mb-4 mt-2\">We Are Launching Soon.</h2>\n              <div class=\"mx-4\">\n                <div class=\"input-group\">\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Email\" aria-describedby=\"coming-soon-subscribe\">\n                  <div class=\"input-group-append\">\n                    <button type=\"button\" class=\"btn btn-primary\" id=\"coming-soon-subscribe\">\n                      <i class=\"ft-log-in d-sm-none font-medium-2\"></i>\n                      <span class=\"d-none d-sm-block\">Subscribe</span>\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!--Coming soon ends-->\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ComingSoonPageComponent } from \"./coming-soon/coming-soon-page.component\";\nimport { ErrorPageComponent } from \"./error/error-page.component\";\nimport { ForgotPasswordPageComponent } from \"./forgot-password/forgot-password-page.component\";\nimport { LockScreenPageComponent } from \"./lock-screen/lock-screen-page.component\";\nimport { LoginPageComponent } from \"./login/login-page.component\";\nimport { MaintenancePageComponent } from \"./maintenance/maintenance-page.component\";\nimport { RegisterPageComponent } from \"./register/register-page.component\";\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: 'comingsoon',\n        component: ComingSoonPageComponent,\n        data: {\n          title: 'Coming Soon page'\n        }\n      },\n      {\n        path: 'error',\n        component: ErrorPageComponent,\n        data: {\n          title: 'Error Page'\n        }\n      },\n      {\n        path: 'forgotpassword',\n        component: ForgotPasswordPageComponent,\n        data: {\n          title: 'Forgot Password Page'\n        }\n      },   \n      \n      {\n        path: 'lockscreen',\n        component: LockScreenPageComponent,\n        data: {\n          title: 'Lock Screen page'\n        }\n      },   \n      {\n        path: 'login',\n        component: LoginPageComponent,\n        data: {\n          title: 'Login Page'\n        }\n      },\n      {\n        path: 'maintenance',\n        component: MaintenancePageComponent,\n        data: {\n          title: 'Maintenance Page'\n        }\n      },\n      {\n        path: 'register',\n        component: RegisterPageComponent,\n        data: {\n          title: 'Register Page'\n        }\n      }   \n      \n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ContentPagesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\nimport { ContentPagesRoutingModule } from \"./content-pages-routing.module\";\n\nimport { ComingSoonPageComponent } from \"./coming-soon/coming-soon-page.component\";\nimport { ErrorPageComponent } from \"./error/error-page.component\";\nimport { ForgotPasswordPageComponent } from \"./forgot-password/forgot-password-page.component\";\nimport { LockScreenPageComponent } from \"./lock-screen/lock-screen-page.component\";\nimport { LoginPageComponent } from \"./login/login-page.component\";\nimport { MaintenancePageComponent } from \"./maintenance/maintenance-page.component\";\nimport { RegisterPageComponent } from \"./register/register-page.component\";\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, \"./assets/i18n/\", \".json\");\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ContentPagesRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    TranslateModule.forChild({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      }\n    }),\n    NgxSpinnerModule\n  ],\n  declarations: [\n    ComingSoonPageComponent,\n    ErrorPageComponent,\n    ForgotPasswordPageComponent,\n    LockScreenPageComponent,\n    LoginPageComponent,\n    MaintenancePageComponent,\n    RegisterPageComponent\n  ]\n})\nexport class ContentPagesModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-error-page',\n    templateUrl: './error-page.component.html',\n    styleUrls: ['./error-page.component.scss']\n})\n\nexport class ErrorPageComponent {\n\n}","<!--Error page starts-->\n<section id=\"error\">\n  <div class=\"container-fluid\">\n    <div class=\"row auth-height full-height-vh\">\n      <div class=\"col-12 d-flex align-items-center justify-content-center\">\n        <div class=\"row\">\n          <div class=\"col-12 text-center\">\n            <img src=\"assets/img/gallery/error.png\" alt=\"\" class=\"img-fluid error-img mt-2\" height=\"300\" width=\"400\">\n            <h1 class=\"mt-4\">404 - Page Not Found!</h1>\n            <div class=\"w-75 error-text mx-auto mt-4\">\n              <p>The page you are looking for might have beel removed, had it's name changed, or is temporarily unavailable.</p>\n            </div>\n            <a [routerLink]=\"['/']\" class=\"btn btn-warning my-2\">Back To Home</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!--Error page ends-->\n","import { Component, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router, ActivatedRoute } from \"@angular/router\";\n\n@Component({\n    selector: 'app-forgot-password-page',\n    templateUrl: './forgot-password-page.component.html',\n    styleUrls: ['./forgot-password-page.component.scss']\n})\n\nexport class ForgotPasswordPageComponent {\n    @ViewChild('f') forogtPasswordForm: NgForm;\n\n    constructor(private router: Router,\n        private route: ActivatedRoute) { }\n\n    // On submit click, reset form fields\n    onSubmit() {\n        this.forogtPasswordForm.reset();\n    }\n\n    // On login link click\n    onLogin() {\n        this.router.navigate(['login'], { relativeTo: this.route.parent });\n    }\n\n    // On registration link click\n    onRegister() {\n        this.router.navigate(['register'], { relativeTo: this.route.parent });\n    }\n}\n","<!--Forgot Password Starts-->\n<section id=\"forgot-password\">\n  <div class=\"row auth-height full-height-vh m-0 d-flex align-items-center justify-content-center\">\n    <div class=\"col-md-7 col-12\">\n      <div class=\"card overflow-hidden\">\n        <div class=\"card-content\">\n          <div class=\"card-body auth-img\">\n            <div class=\"row m-0\">\n              <div class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center text-center auth-img-bg py-2\">\n                <img src=\"assets/img/gallery/forgot.png\" alt=\"\" class=\"img-fluid\" width=\"260\" height=\"230\">\n              </div>\n              <div class=\"col-lg-6 col-md-12 px-4 py-3\">\n                <h4 class=\"mb-2 card-title\">Recover Password</h4>\n                <p class=\"card-text mb-3\">Please enter your email address and we'll send you instructions on how to reset your password.</p>\n                <input type=\"email\" class=\"form-control mb-3\" placeholder=\"Email\">\n                <div class=\"d-flex flex-sm-row flex-column justify-content-between\">\n                  <a [routerLink]=\"['/pages/login']\" class=\"btn bg-light-primary mb-2 mb-sm-0\">Back To Login</a>\n                  <button class=\"btn btn-primary ml-sm-1\">Recover</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!--Forgot Password Ends-->\n","import { Component, ViewChild } from '@angular/core';\nimport { NgForm } from \"@angular/forms\";\n\n@Component({\n    selector: 'app-lock-screen-page',\n    templateUrl: './lock-screen-page.component.html',\n    styleUrls: ['./lock-screen-page.component.scss']\n})\n\nexport class LockScreenPageComponent {\n    @ViewChild('f') lockScreenForm: NgForm;\n\n    onSubmit() {\n        this.lockScreenForm.reset();\n    }\n}\n","<!--Lock Screen Starts-->\n<section id=\"lock-screen\">\n  <div class=\"row auth-height full-height-vh m-0\">\n    <div class=\"col-12 d-flex align-items-center justify-content-center\">\n      <div class=\"card overflow-hidden\">\n        <div class=\"card-content\">\n          <div class=\"card-body auth-img\">\n            <div class=\"row m-0\">\n              <div class=\"col-lg-6 d-lg-flex justify-content-center align-items-center d-none text-center auth-img-bg p-3\">\n                <img src=\"assets/img/gallery/lock.png\" alt=\"\" class=\"img-fluid\" height=\"230\" width=\"280\">\n              </div>\n              <div class=\"col-lg-6 col-md-12 py-3 px-4\">\n                <h4 class=\"card-title mb-3\">Your Session is Locked</h4>\n                <input type=\"email\" class=\"form-control mb-2\" placeholder=\"Email\">\n                <input type=\"password\" class=\"form-control mb-2\" placeholder=\"Password\">\n                <a href=\"javascript:;\">Are You Not John Doe ?</a>\n                <a [routerLink]=\"['/dashboard/dashboard1']\" class=\"btn btn-block btn-primary mt-2\">Unlock</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!--Lock Screen Ends-->\n","import { Component, ViewChild } from '@angular/core';\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { AuthService } from 'app/shared/auth/auth.service';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\n\nexport class LoginPageComponent {\n\n  loginFormSubmitted = false;\n  isLoginFailed = false;\n\n  loginForm = new FormGroup({\n    username: new FormControl('guest@apex.com', [Validators.required]),\n    password: new FormControl('Password', [Validators.required]),\n    rememberMe: new FormControl(true)\n  });\n\n\n  constructor(private router: Router, private authService: AuthService,\n    private spinner: NgxSpinnerService,\n    private route: ActivatedRoute) {\n  }\n\n  get lf() {\n    return this.loginForm.controls;\n  }\n\n  // On submit button click\n  onSubmit() {\n    this.loginFormSubmitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.spinner.show(undefined,\n      {\n        type: 'ball-triangle-path',\n        size: 'medium',\n        bdColor: 'rgba(0, 0, 0, 0.8)',\n        color: '#fff',\n        fullScreen: true\n      });\n\n    this.authService.signinUser(this.loginForm.value.username, this.loginForm.value.password)\n      .then((res) => {\n        this.spinner.hide();\n        this.router.navigate(['/dashboard/dashboard1']);\n      })\n      .catch((err) => {\n        this.isLoginFailed = true;\n        this.spinner.hide();\n        console.log('error: ' + err)\n      }\n      );\n  }\n\n}\n","<!--Login Page Starts-->\n<section id=\"login\">\n  <div class=\"row auth-height full-height-vh m-0\">\n    <div class=\"col-12 d-flex align-items-center justify-content-center\">\n      <div class=\"card overflow-hidden\">\n        <div class=\"card-content\">\n          <div class=\"card-body auth-img\">\n            <div class=\"row m-0\">\n              <div class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center auth-img-bg p-3\">\n                <img src=\"assets/img/gallery/login.png\" alt=\"\" class=\"img-fluid\" width=\"300\" height=\"230\">\n              </div>\n              <div class=\"col-lg-6 col-12 px-4 py-3\">\n                <h4 class=\"mb-2 card-title\">Login</h4>\n                <p>Welcome back, please login to your account.</p>\n                <ngb-alert type=\"light-danger\" class=\"mb-2\" *ngIf=\"isLoginFailed\" (close)=\"isLoginFailed = false\">\n                  <p class=\"mb-0\">Login failed!</p>\n                </ngb-alert>\n                <form [formGroup]=\"loginForm\">\n                  <div class=\"form-group\">\n                    <input type=\"text\" formControlName=\"username\" class=\"form-control\" placeholder=\"Username\"\n                      [ngClass]=\"{ 'is-invalid': loginFormSubmitted && lf.username.invalid, 'is-valid': loginFormSubmitted && !lf.username.invalid }\"\n                      required>\n                    <div *ngIf=\"loginFormSubmitted && (lf.username.invalid || lf.username.errors?.required)\"\n                      class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i> This is\n                      required</div>\n                  </div>\n                  <div class=\"form-group\">\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Old Password\"\n                      [ngClass]=\"{ 'is-invalid': loginFormSubmitted && lf.password.invalid, 'is-valid': loginFormSubmitted && !lf.password.invalid }\"\n                      required>\n                    <div *ngIf=\"loginFormSubmitted && (lf.password.invalid || lf.password.errors?.required)\"\n                      class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i> This is required\n                    </div>\n                  </div>\n                  <div class=\"d-sm-flex justify-content-between mb-3 font-small-2\">\n                    <div class=\"remember-me mb-2 mb-sm-0\">\n                      <div class=\"checkbox auth-checkbox\">\n                        <input type=\"checkbox\" formControlName=\"rememberMe\" class=\"form-control\" id=\"rememberMe\">\n                        <label for=\"rememberMe\"><span class=\"font-small-2 mb-3 font-weight-normal\">Remember Me</span></label>\n                      </div>\n                    </div>\n                    <a [routerLink]=\"['/pages/forgotpassword']\">Forgot Password?</a>\n                  </div>\n                  <div class=\"d-flex justify-content-between flex-sm-row flex-column\">\n                    <a [routerLink]=\"['/pages/register']\" class=\"btn bg-light-primary mb-2 mb-sm-0\">Register</a>\n                    <a  class=\"btn btn-primary\" (click)=\"onSubmit()\">Login</a>\n                  </div>\n                </form>\n                <hr>\n                <div class=\"d-flex justify-content-between align-items-center\">\n                  <h6 class=\"text-primary m-0\">Or Login With</h6>\n                  <ngx-spinner></ngx-spinner>\n                  <div class=\"login-options\">\n                    <a class=\"btn btn-sm btn-social-icon btn-facebook mr-1\"><span class=\"fa fa-facebook\"></span></a>\n                    <a class=\"btn btn-sm btn-social-icon btn-twitter mr-1\"><span class=\"fa fa-twitter\"></span></a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!--Login Page Ends-->\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-maintenance-page',\n    templateUrl: './maintenance-page.component.html',\n    styleUrls: ['./maintenance-page.component.scss']\n})\n\nexport class MaintenancePageComponent {\n\n}","<!--Under Maintenance Starts-->\n<section id=\"maintenance\">\n  <div class=\"container-fluid\">\n    <div class=\"row auth-height full-height-vh\">\n      <div class=\"col-12 d-flex align-items-center justify-content-center\">\n        <div class=\"row\">\n          <div class=\"col-12 text-center\">\n            <img src=\"assets/img/gallery/maintenance.png\" alt=\"\" class=\"img-fluid maintenance-img mt-2\" height=\"300\" width=\"300\">\n            <h1 class=\"mt-4\">Under Maintenance!</h1>\n            <div class=\"maintenance-text w-75 mx-auto mt-4\">\n              <p>Ice cream caramels lemon drops candy. Cake toffee topping cookie tart wafer gummies. Sweet gummi bears jujubes bonbon gingerbread apple pie marshmallow.</p>\n            </div>\n            <a [routerLink]=\"['/']\" class=\"btn btn-warning my-2\">Back To Home</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!--Under Maintenance Starts-->\n","import { Component, ViewChild, OnInit } from '@angular/core';\nimport { NgForm, FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\n\n// import custom validator to validate that password and confirm password fields match\nimport { MustMatch } from '../../../shared/directives/must-match.validator';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register-page',\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.scss']\n})\n\nexport class RegisterPageComponent implements OnInit {\n  registerFormSubmitted = false;\n  registerForm: FormGroup;\n  constructor(private formBuilder: FormBuilder, private router: Router) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', Validators.required],\n      acceptTerms: [false, Validators.requiredTrue]\n    }, {\n      validator: MustMatch('password', 'confirmPassword')\n    });\n  }\n\n  get rf() {\n    return this.registerForm.controls;\n  }\n\n\n  //  On submit click, reset field value\n  onSubmit() {\n    this.registerFormSubmitted = true;\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    this.router.navigate(['/pages/login']);\n  }\n}\n","<!--Registration Page Starts-->\n<section id=\"regestration\">\n  <div class=\"row auth-height full-height-vh m-0\">\n    <div class=\"col-12 d-flex align-items-center justify-content-center\">\n      <div class=\"card overflow-hidden\">\n        <div class=\"card-content\">\n          <div class=\"card-body auth-img\">\n            <div class=\"row m-0\">\n              <div\n                class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center text-center auth-img-bg py-2\">\n                <img src=\"assets/img/gallery/register.png\" alt=\"\" class=\"img-fluid\" width=\"350\" height=\"230\">\n              </div>\n              <div class=\"col-lg-6 col-md-12 px-4 py-3\">\n                <h4 class=\"card-title mb-2\">Create Account</h4>\n                <p>Fill the below form to create a new account.</p>\n\n                <form [formGroup]=\"registerForm\">\n                  <div class=\"form-group\">\n                    <input type=\"text\" formControlName=\"name\" class=\"form-control mb-2\" placeholder=\"Name\"\n                      [ngClass]=\"{ 'is-invalid': registerFormSubmitted && rf.name.invalid, 'is-valid': registerFormSubmitted && !rf.name.invalid }\"\n                      required>\n                    <div *ngIf=\"registerFormSubmitted && (rf.name.invalid || rf.name.errors?.required)\"\n                      class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i> Name is\n                      required</div>\n                  </div>\n                  <div class=\"form-group\">\n                    <input type=\"email\" formControlName=\"email\" class=\"form-control mb-2\" placeholder=\"Email\"\n                      [ngClass]=\"{ 'is-invalid': registerFormSubmitted && rf.email.invalid, 'is-valid': registerFormSubmitted && !rf.email.invalid }\"\n                      required>\n                    <div *ngIf=\"registerFormSubmitted && (rf.email.errors?.required)\"\n                      class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i> Email is\n                      required</div>\n                    <div *ngIf=\"registerFormSubmitted &&  rf.email.errors?.email\" class=\"help-block mt-1 text-danger\"> <i\n                        class=\"ft-alert-circle align-middle\"></i> Email must be a valid email address</div>\n                  </div>\n                  <div class=\"form-group\">\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control mb-2\" placeholder=\"Password\"\n                      [ngClass]=\"{ 'is-invalid': registerFormSubmitted && rf.password.invalid, 'is-valid': registerFormSubmitted && !rf.password.invalid }\"\n                      required>\n                    <div *ngIf=\"registerFormSubmitted && (rf.password.errors?.required)\"\n                      class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i> Password is\n                      required\n                    </div>\n                    <div *ngIf=\"registerFormSubmitted && (!rf.password.errors?.required && rf.password.errors?.minlength)\"\n                      class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i> Password must be\n                      at least 6 characters\n                    </div>\n                  </div>\n                  <div class=\"form-group\">\n                    <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control mb-2\"\n                      placeholder=\"Confirm Password\"\n                      [ngClass]=\"{ 'is-invalid': registerFormSubmitted && rf.confirmPassword.invalid, 'is-valid': registerFormSubmitted && !rf.confirmPassword.invalid }\"\n                      required>\n                    <div\n                      *ngIf=\"registerFormSubmitted && (rf.confirmPassword.errors?.required)\"\n                      class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i> Confirm Password is\n                      required\n                    </div>\n                    <div *ngIf=\"registerFormSubmitted && (rf.confirmPassword.errors?.mustMatch)\"\n                      class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i> Passwords must\n                      match\n                    </div>\n                  </div>\n                  <div class=\"form-group\">\n                  <div class=\"checkbox auth-checkbox  \">\n                    <input type=\"checkbox\" id=\"auth-login\" formControlName=\"acceptTerms\" class=\"form-control\">\n                    <label for=\"auth-login\"><span class=\"font-small-2 mb-3 font-weight-normal\">I accept the terms & conditions</span></label>\n                    <div *ngIf=\"registerFormSubmitted && (rf.acceptTerms.invalid || rf.acceptTerms.errors?.required)\"\n                      class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i> Accept Ts & Cs is required\n                    </div>\n                  </div>\n                  </div>\n                  <div class=\"d-flex justify-content-between flex-sm-row flex-column\">\n                    <a [routerLink]=\"['/pages/login']\" class=\"btn bg-light-primary mb-2 mb-sm-0\">Back To Login</a>\n                    <a class=\"btn btn-primary\" (click)=\"onSubmit()\">Register</a>\n                  </div>\n                </form>\n\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!--Registration Page Ends-->\n","import { FormGroup } from '@angular/forms';\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n            // return if another validator has already found an error on the matchingControl\n            return;\n        }\n\n        // set error on matchingControl if validation fails\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ mustMatch: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    }\n}\n"],"sourceRoot":"webpack:///"}
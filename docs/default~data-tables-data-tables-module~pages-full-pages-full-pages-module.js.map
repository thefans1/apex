{"version":3,"sources":["ng:/@swimlane/ngx-datatable/lib/services/scrollbar-helper.service.ts","ng:/@swimlane/ngx-datatable/lib/services/dimensions-helper.service.ts","ng:/@swimlane/ngx-datatable/lib/services/column-changes.service.ts","ng:/@swimlane/ngx-datatable/lib/components/footer/footer-template.directive.ts","ng:/@swimlane/ngx-datatable/lib/directives/visibility.directive.ts","ng:/@swimlane/ngx-datatable/lib/directives/draggable.directive.ts","ng:/@swimlane/ngx-datatable/lib/directives/resizeable.directive.ts","ng:/@swimlane/ngx-datatable/lib/directives/orderable.directive.ts","ng:/@swimlane/ngx-datatable/lib/directives/long-press.directive.ts","ng:/@swimlane/ngx-datatable/lib/components/body/scroller.component.ts","ng:/@swimlane/ngx-datatable/lib/components/body/body-group-header-template.directive.ts","ng:/@swimlane/ngx-datatable/lib/components/body/body-group-header.directive.ts","ng:/@swimlane/ngx-datatable/lib/utils/column-prop-getters.ts","ng:/@swimlane/ngx-datatable/lib/utils/tree.ts","ng:/@swimlane/ngx-datatable/lib/utils/camel-case.ts","ng:/@swimlane/ngx-datatable/lib/utils/id.ts","ng:/@swimlane/ngx-datatable/lib/utils/column-helper.ts","ng:/@swimlane/ngx-datatable/lib/types/column-mode.type.ts","ng:/@swimlane/ngx-datatable/lib/types/selection.type.ts","ng:/@swimlane/ngx-datatable/lib/types/sort.type.ts","ng:/@swimlane/ngx-datatable/lib/types/contextmenu.type.ts","ng:/@swimlane/ngx-datatable/lib/components/columns/column-header.directive.ts","ng:/@swimlane/ngx-datatable/lib/components/columns/column-cell.directive.ts","ng:/@swimlane/ngx-datatable/lib/components/columns/tree.directive.ts","ng:/@swimlane/ngx-datatable/lib/components/columns/column.directive.ts","ng:/@swimlane/ngx-datatable/lib/components/row-detail/row-detail-template.directive.ts","ng:/@swimlane/ngx-datatable/lib/components/row-detail/row-detail.directive.ts","ng:/@swimlane/ngx-datatable/lib/components/footer/footer.directive.ts","ng:/@swimlane/ngx-datatable/lib/utils/column.ts","ng:/@swimlane/ngx-datatable/lib/utils/row-height-cache.ts","ng:/@swimlane/ngx-datatable/lib/utils/prefixes.ts","ng:/@swimlane/ngx-datatable/lib/utils/translate.ts","ng:/@swimlane/ngx-datatable/lib/components/body/body.component.ts","ng:/@swimlane/ngx-datatable/lib/components/header/header.component.ts","ng:/@swimlane/ngx-datatable/lib/utils/throttle.ts","ng:/@swimlane/ngx-datatable/lib/utils/math.ts","ng:/@swimlane/ngx-datatable/lib/types/sort-direction.type.ts","ng:/@swimlane/ngx-datatable/lib/utils/sort.ts","ng:/@swimlane/ngx-datatable/lib/components/datatable.component.ts","ng:/@swimlane/ngx-datatable/lib/components/header/header-cell.component.ts","ng:/@swimlane/ngx-datatable/lib/components/footer/footer.component.ts","ng:/@swimlane/ngx-datatable/lib/components/footer/pager.component.ts","ng:/@swimlane/ngx-datatable/lib/components/body/progress-bar.component.ts","ng:/@swimlane/ngx-datatable/lib/utils/keys.ts","ng:/@swimlane/ngx-datatable/lib/components/body/body-row.component.ts","ng:/@swimlane/ngx-datatable/lib/components/body/body-row-wrapper.component.ts","ng:/@swimlane/ngx-datatable/lib/components/body/body-cell.component.ts","ng:/@swimlane/ngx-datatable/lib/utils/selection.ts","ng:/@swimlane/ngx-datatable/lib/components/body/selection.component.ts","ng:/@swimlane/ngx-datatable/lib/components/body/summary/summary-row.component.ts","ng:/@swimlane/ngx-datatable/lib/ngx-datatable.module.ts","ng:/@swimlane/ngx-datatable/lib/types/click.type.ts","ng:/@swimlane/ngx-datatable/lib/utils/elm-from-point.ts","ng:/@swimlane/ngx-datatable/public-api.ts","ng:/@swimlane/ngx-datatable/swimlane-ngx-datatable.ts"],"names":[],"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","file":"default~data-tables-data-tables-module~pages-full-pages-full-pages-module.js","sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\n@Injectable()\nexport class ScrollbarHelper {\n  width: number = this.getWidth();\n\n  constructor(@Inject(DOCUMENT) private document: any) {}\n\n  getWidth(): number {\n    const outer = this.document.createElement('div');\n    outer.style.visibility = 'hidden';\n    outer.style.width = '100px';\n    outer.style.msOverflowStyle = 'scrollbar';\n    this.document.body.appendChild(outer);\n\n    const widthNoScroll = outer.offsetWidth;\n    outer.style.overflow = 'scroll';\n\n    const inner = this.document.createElement('div');\n    inner.style.width = '100%';\n    outer.appendChild(inner);\n\n    const widthWithScroll = inner.offsetWidth;\n    outer.parentNode.removeChild(outer);\n\n    return widthNoScroll - widthWithScroll;\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\n\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\n@Injectable()\nexport class DimensionsHelper {\n  getDimensions(element: Element): ClientRect {\n    return element.getBoundingClientRect();\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * service to make DatatableComponent aware of changes to\n * input bindings of DataTableColumnDirective\n */\n@Injectable()\nexport class ColumnChangesService {\n  private columnInputChanges = new Subject<undefined>();\n\n  get columnInputChanges$(): Observable<undefined> {\n    return this.columnInputChanges.asObservable();\n  }\n\n  onInputChange(): void {\n    this.columnInputChanges.next();\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-footer-template]' })\nexport class DataTableFooterTemplateDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Directive, Output, EventEmitter, ElementRef, HostBinding, NgZone, OnInit, OnDestroy } from '@angular/core';\n\n/**\n * Visibility Observer Directive\n *\n * Usage:\n *\n * \t\t<div\n * \t\t\tvisibilityObserver\n * \t\t\t(visible)=\"onVisible($event)\">\n * \t\t</div>\n *\n */\n@Directive({ selector: '[visibilityObserver]' })\nexport class VisibilityDirective implements OnInit, OnDestroy {\n  @HostBinding('class.visible')\n  isVisible: boolean = false;\n\n  @Output() visible: EventEmitter<any> = new EventEmitter();\n\n  timeout: any;\n\n  constructor(private element: ElementRef, private zone: NgZone) {}\n\n  ngOnInit(): void {\n    this.runCheck();\n  }\n\n  ngOnDestroy(): void {\n    clearTimeout(this.timeout);\n  }\n\n  onVisibilityChange(): void {\n    // trigger zone recalc for columns\n    this.zone.run(() => {\n      this.isVisible = true;\n      this.visible.emit(true);\n    });\n  }\n\n  runCheck(): void {\n    const check = () => {\n      // https://davidwalsh.name/offsetheight-visibility\n      const { offsetHeight, offsetWidth } = this.element.nativeElement;\n\n      if (offsetHeight && offsetWidth) {\n        clearTimeout(this.timeout);\n        this.onVisibilityChange();\n      } else {\n        clearTimeout(this.timeout);\n        this.zone.runOutsideAngular(() => {\n          this.timeout = setTimeout(() => check(), 50);\n        });\n      }\n    };\n\n    this.timeout = setTimeout(() => check());\n  }\n}\n","import { Directive, ElementRef, Input, Output, EventEmitter, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Draggable Directive for Angular2\n *\n * Inspiration:\n *   https://github.com/AngularClass/angular2-examples/blob/master/rx-draggable/directives/draggable.ts\n *   http://stackoverflow.com/questions/35662530/how-to-implement-drag-and-drop-in-angular2\n *\n */\n@Directive({ selector: '[draggable]' })\nexport class DraggableDirective implements OnDestroy, OnChanges {\n  @Input() dragEventTarget: any;\n  @Input() dragModel: any;\n  @Input() dragX: boolean = true;\n  @Input() dragY: boolean = true;\n\n  @Output() dragStart: EventEmitter<any> = new EventEmitter();\n  @Output() dragging: EventEmitter<any> = new EventEmitter();\n  @Output() dragEnd: EventEmitter<any> = new EventEmitter();\n\n  element: HTMLElement;\n  isDragging: boolean = false;\n  subscription: Subscription;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['dragEventTarget'] && changes['dragEventTarget'].currentValue && this.dragModel.dragging) {\n      this.onMousedown(changes['dragEventTarget'].currentValue);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroySubscription();\n  }\n\n  onMouseup(event: MouseEvent): void {\n    if (!this.isDragging) return;\n\n    this.isDragging = false;\n    this.element.classList.remove('dragging');\n\n    if (this.subscription) {\n      this._destroySubscription();\n      this.dragEnd.emit({\n        event,\n        element: this.element,\n        model: this.dragModel\n      });\n    }\n  }\n\n  onMousedown(event: MouseEvent): void {\n    // we only want to drag the inner header text\n    const isDragElm = (<HTMLElement>event.target).classList.contains('draggable');\n\n    if (isDragElm && (this.dragX || this.dragY)) {\n      event.preventDefault();\n      this.isDragging = true;\n\n      const mouseDownPos = { x: event.clientX, y: event.clientY };\n\n      const mouseup = fromEvent(document, 'mouseup');\n      this.subscription = mouseup.subscribe((ev: MouseEvent) => this.onMouseup(ev));\n\n      const mouseMoveSub = fromEvent(document, 'mousemove')\n        .pipe(takeUntil(mouseup))\n        .subscribe((ev: MouseEvent) => this.move(ev, mouseDownPos));\n\n      this.subscription.add(mouseMoveSub);\n\n      this.dragStart.emit({\n        event,\n        element: this.element,\n        model: this.dragModel\n      });\n    }\n  }\n\n  move(event: MouseEvent, mouseDownPos: { x: number; y: number }): void {\n    if (!this.isDragging) return;\n\n    const x = event.clientX - mouseDownPos.x;\n    const y = event.clientY - mouseDownPos.y;\n\n    if (this.dragX) this.element.style.left = `${x}px`;\n    if (this.dragY) this.element.style.top = `${y}px`;\n\n    this.element.classList.add('dragging');\n\n    this.dragging.emit({\n      event,\n      element: this.element,\n      model: this.dragModel\n    });\n  }\n\n  private _destroySubscription(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = undefined;\n    }\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  AfterViewInit,\n  Renderer2\n} from '@angular/core';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Directive({\n  selector: '[resizeable]',\n  host: {\n    '[class.resizeable]': 'resizeEnabled'\n  }\n})\nexport class ResizeableDirective implements OnDestroy, AfterViewInit {\n  @Input() resizeEnabled: boolean = true;\n  @Input() minWidth: number;\n  @Input() maxWidth: number;\n\n  @Output() resize: EventEmitter<any> = new EventEmitter();\n\n  element: HTMLElement;\n  subscription: Subscription;\n  resizing: boolean = false;\n  private resizeHandle: HTMLElement;\n\n  constructor(element: ElementRef, private renderer: Renderer2) {\n    this.element = element.nativeElement;\n  }\n\n  ngAfterViewInit(): void {\n    const renderer2 = this.renderer;\n    this.resizeHandle = renderer2.createElement('span');\n    if (this.resizeEnabled) {\n      renderer2.addClass(this.resizeHandle, 'resize-handle');\n    } else {\n      renderer2.addClass(this.resizeHandle, 'resize-handle--not-resizable');\n    }\n    renderer2.appendChild(this.element, this.resizeHandle);\n  }\n\n  ngOnDestroy(): void {\n    this._destroySubscription();\n    if (this.renderer.destroyNode) {\n      this.renderer.destroyNode(this.resizeHandle);\n    } else if (this.resizeHandle) {\n      this.renderer.removeChild(this.renderer.parentNode(this.resizeHandle), this.resizeHandle);\n    }\n  }\n\n  onMouseup(): void {\n    this.resizing = false;\n\n    if (this.subscription && !this.subscription.closed) {\n      this._destroySubscription();\n      this.resize.emit(this.element.clientWidth);\n    }\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMousedown(event: MouseEvent): void {\n    const isHandle = (<HTMLElement>event.target).classList.contains('resize-handle');\n    const initialWidth = this.element.clientWidth;\n    const mouseDownScreenX = event.screenX;\n\n    if (isHandle) {\n      event.stopPropagation();\n      this.resizing = true;\n\n      const mouseup = fromEvent(document, 'mouseup');\n      this.subscription = mouseup.subscribe((ev: MouseEvent) => this.onMouseup());\n\n      const mouseMoveSub = fromEvent(document, 'mousemove')\n        .pipe(takeUntil(mouseup))\n        .subscribe((e: MouseEvent) => this.move(e, initialWidth, mouseDownScreenX));\n\n      this.subscription.add(mouseMoveSub);\n    }\n  }\n\n  move(event: MouseEvent, initialWidth: number, mouseDownScreenX: number): void {\n    const movementX = event.screenX - mouseDownScreenX;\n    const newWidth = initialWidth + movementX;\n\n    const overMinWidth = !this.minWidth || newWidth >= this.minWidth;\n    const underMaxWidth = !this.maxWidth || newWidth <= this.maxWidth;\n\n    if (overMinWidth && underMaxWidth) {\n      this.element.style.width = `${newWidth}px`;\n    }\n  }\n\n  private _destroySubscription() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = undefined;\n    }\n  }\n}\n","import {\n  Directive,\n  Output,\n  EventEmitter,\n  ContentChildren,\n  QueryList,\n  KeyValueDiffers,\n  AfterContentInit,\n  OnDestroy,\n  Inject\n} from '@angular/core';\nimport { DraggableDirective } from './draggable.directive';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({ selector: '[orderable]' })\nexport class OrderableDirective implements AfterContentInit, OnDestroy {\n  @Output() reorder: EventEmitter<any> = new EventEmitter();\n  @Output() targetChanged: EventEmitter<any> = new EventEmitter();\n\n  @ContentChildren(DraggableDirective, { descendants: true })\n  draggables: QueryList<DraggableDirective>;\n\n  positions: any;\n  differ: any;\n  lastDraggingIndex: number;\n\n  constructor(differs: KeyValueDiffers, @Inject(DOCUMENT) private document: any) {\n    this.differ = differs.find({}).create();\n  }\n\n  ngAfterContentInit(): void {\n    // HACK: Investigate Better Way\n    this.updateSubscriptions();\n    this.draggables.changes.subscribe(this.updateSubscriptions.bind(this));\n  }\n\n  ngOnDestroy(): void {\n    this.draggables.forEach(d => {\n      d.dragStart.unsubscribe();\n      d.dragging.unsubscribe();\n      d.dragEnd.unsubscribe();\n    });\n  }\n\n  updateSubscriptions(): void {\n    const diffs = this.differ.diff(this.createMapDiffs());\n\n    if (diffs) {\n      const subscribe = ({ currentValue, previousValue }: any) => {\n        unsubscribe({ previousValue });\n\n        if (currentValue) {\n          currentValue.dragStart.subscribe(this.onDragStart.bind(this));\n          currentValue.dragging.subscribe(this.onDragging.bind(this));\n          currentValue.dragEnd.subscribe(this.onDragEnd.bind(this));\n        }\n      };\n\n      const unsubscribe = ({ previousValue }: any) => {\n        if (previousValue) {\n          previousValue.dragStart.unsubscribe();\n          previousValue.dragging.unsubscribe();\n          previousValue.dragEnd.unsubscribe();\n        }\n      };\n\n      diffs.forEachAddedItem(subscribe);\n      // diffs.forEachChangedItem(subscribe.bind(this));\n      diffs.forEachRemovedItem(unsubscribe);\n    }\n  }\n\n  onDragStart(): void {\n    this.positions = {};\n\n    let i = 0;\n    for (const dragger of this.draggables.toArray()) {\n      const elm = dragger.element;\n      const left = parseInt(elm.offsetLeft.toString(), 0);\n      this.positions[dragger.dragModel.prop] = {\n        left,\n        right: left + parseInt(elm.offsetWidth.toString(), 0),\n        index: i++,\n        element: elm\n      };\n    }\n  }\n\n  onDragging({ element, model, event }: any): void {\n    const prevPos = this.positions[model.prop];\n    const target = this.isTarget(model, event);\n\n    if (target) {\n      if (this.lastDraggingIndex !== target.i) {\n        this.targetChanged.emit({\n          prevIndex: this.lastDraggingIndex,\n          newIndex: target.i,\n          initialIndex: prevPos.index\n        });\n        this.lastDraggingIndex = target.i;\n      }\n    } else if (this.lastDraggingIndex !== prevPos.index) {\n      this.targetChanged.emit({\n        prevIndex: this.lastDraggingIndex,\n        initialIndex: prevPos.index\n      });\n      this.lastDraggingIndex = prevPos.index;\n    }\n  }\n\n  onDragEnd({ element, model, event }: any): void {\n    const prevPos = this.positions[model.prop];\n\n    const target = this.isTarget(model, event);\n    if (target) {\n      this.reorder.emit({\n        prevIndex: prevPos.index,\n        newIndex: target.i,\n        model\n      });\n    }\n\n    this.lastDraggingIndex = undefined;\n    element.style.left = 'auto';\n  }\n\n  isTarget(model: any, event: any): any {\n    let i = 0;\n    const x = event.x || event.clientX;\n    const y = event.y || event.clientY;\n    const targets = this.document.elementsFromPoint(x, y);\n\n    for (const prop in this.positions) {\n      // current column position which throws event.\n      const pos = this.positions[prop];\n\n      // since we drag the inner span, we need to find it in the elements at the cursor\n      if (model.prop !== prop && targets.find((el: any) => el === pos.element)) {\n        return {\n          pos,\n          i\n        };\n      }\n\n      i++;\n    }\n  }\n\n  private createMapDiffs(): { [key: string]: DraggableDirective } {\n    return this.draggables.toArray().reduce((acc, curr) => {\n      acc[curr.dragModel.$$id] = curr;\n      return acc;\n    }, {});\n  }\n}\n","import { Directive, Input, Output, EventEmitter, HostBinding, HostListener, OnDestroy } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { MouseEvent } from '../events';\n\n@Directive({ selector: '[long-press]' })\nexport class LongPressDirective implements OnDestroy {\n  @Input() pressEnabled: boolean = true;\n  @Input() pressModel: any;\n  @Input() duration: number = 500;\n\n  @Output() longPressStart: EventEmitter<any> = new EventEmitter();\n  @Output() longPressing: EventEmitter<any> = new EventEmitter();\n  @Output() longPressEnd: EventEmitter<any> = new EventEmitter();\n\n  pressing: boolean;\n  isLongPressing: boolean;\n  timeout: any;\n  mouseX: number = 0;\n  mouseY: number = 0;\n\n  subscription: Subscription;\n\n  @HostBinding('class.press')\n  get press(): boolean {\n    return this.pressing;\n  }\n\n  @HostBinding('class.longpress')\n  get isLongPress(): boolean {\n    return this.isLongPressing;\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMouseDown(event: MouseEvent): void {\n    // don't do right/middle clicks\n    if (event.which !== 1 || !this.pressEnabled) return;\n\n    // don't start drag if its on resize handle\n    const target = <HTMLElement>event.target;\n    if (target.classList.contains('resize-handle')) return;\n\n    this.mouseX = event.clientX;\n    this.mouseY = event.clientY;\n\n    this.pressing = true;\n    this.isLongPressing = false;\n\n    const mouseup = fromEvent(document, 'mouseup');\n    this.subscription = mouseup.subscribe((ev: MouseEvent) => this.onMouseup());\n\n    this.timeout = setTimeout(() => {\n      this.isLongPressing = true;\n      this.longPressStart.emit({\n        event,\n        model: this.pressModel\n      });\n\n      this.subscription.add(\n        fromEvent(document, 'mousemove')\n          .pipe(takeUntil(mouseup))\n          .subscribe((mouseEvent: MouseEvent) => this.onMouseMove(mouseEvent))\n      );\n\n      this.loop(event);\n    }, this.duration);\n\n    this.loop(event);\n  }\n\n  onMouseMove(event: MouseEvent): void {\n    if (this.pressing && !this.isLongPressing) {\n      const xThres = Math.abs(event.clientX - this.mouseX) > 10;\n      const yThres = Math.abs(event.clientY - this.mouseY) > 10;\n\n      if (xThres || yThres) {\n        this.endPress();\n      }\n    }\n  }\n\n  loop(event: MouseEvent): void {\n    if (this.isLongPressing) {\n      this.timeout = setTimeout(() => {\n        this.longPressing.emit({\n          event,\n          model: this.pressModel\n        });\n        this.loop(event);\n      }, 50);\n    }\n  }\n\n  endPress(): void {\n    clearTimeout(this.timeout);\n    this.isLongPressing = false;\n    this.pressing = false;\n    this._destroySubscription();\n\n    this.longPressEnd.emit({\n      model: this.pressModel\n    });\n  }\n\n  onMouseup(): void {\n    this.endPress();\n  }\n\n  ngOnDestroy(): void {\n    this._destroySubscription();\n  }\n\n  private _destroySubscription(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = undefined;\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  Output,\n  EventEmitter,\n  Renderer2,\n  NgZone,\n  OnInit,\n  OnDestroy,\n  HostBinding,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { MouseEvent } from '../../events';\n\n@Component({\n  selector: 'datatable-scroller',\n  template: ` <ng-content></ng-content> `,\n  host: {\n    class: 'datatable-scroll'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ScrollerComponent implements OnInit, OnDestroy {\n  @Input() scrollbarV: boolean = false;\n  @Input() scrollbarH: boolean = false;\n\n  @HostBinding('style.height.px')\n  @Input()\n  scrollHeight: number;\n\n  @HostBinding('style.width.px')\n  @Input()\n  scrollWidth: number;\n\n  @Output() scroll: EventEmitter<any> = new EventEmitter();\n\n  scrollYPos: number = 0;\n  scrollXPos: number = 0;\n  prevScrollYPos: number = 0;\n  prevScrollXPos: number = 0;\n  element: any;\n  parentElement: any;\n  onScrollListener: any;\n\n  private _scrollEventListener: any = null;\n\n  constructor(private ngZone: NgZone, element: ElementRef, private renderer: Renderer2) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit(): void {\n    // manual bind so we don't always listen\n    if (this.scrollbarV || this.scrollbarH) {\n      const renderer = this.renderer;\n      this.parentElement = renderer.parentNode(renderer.parentNode(this.element));\n      this._scrollEventListener = this.onScrolled.bind(this);\n      this.parentElement.addEventListener('scroll', this._scrollEventListener);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._scrollEventListener) {\n      this.parentElement.removeEventListener('scroll', this._scrollEventListener);\n      this._scrollEventListener = null;\n    }\n  }\n\n  setOffset(offsetY: number): void {\n    if (this.parentElement) {\n      this.parentElement.scrollTop = offsetY;\n    }\n  }\n\n  onScrolled(event: MouseEvent): void {\n    const dom: Element = <Element>event.currentTarget;\n    requestAnimationFrame(() => {\n      this.scrollYPos = dom.scrollTop;\n      this.scrollXPos = dom.scrollLeft;\n      this.updateOffset();\n    });\n  }\n\n  updateOffset(): void {\n    let direction: string;\n    if (this.scrollYPos < this.prevScrollYPos) {\n      direction = 'down';\n    } else if (this.scrollYPos > this.prevScrollYPos) {\n      direction = 'up';\n    }\n\n    this.scroll.emit({\n      direction,\n      scrollYPos: this.scrollYPos,\n      scrollXPos: this.scrollXPos\n    });\n\n    this.prevScrollYPos = this.scrollYPos;\n    this.prevScrollXPos = this.scrollXPos;\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngx-datatable-group-header-template]'\n})\nexport class DatatableGroupHeaderTemplateDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Input, Output, EventEmitter, Directive, TemplateRef, ContentChild } from '@angular/core';\nimport { DatatableGroupHeaderTemplateDirective } from './body-group-header-template.directive';\n\n@Directive({ selector: 'ngx-datatable-group-header' })\nexport class DatatableGroupHeaderDirective {\n  /**\n   * Row height is required when virtual scroll is enabled.\n   */\n  @Input() rowHeight: number | ((group?: any, index?: number) => number) = 0;\n\n  @Input('template')\n  _templateInput: TemplateRef<any>;\n\n  @ContentChild(DatatableGroupHeaderTemplateDirective, { read: TemplateRef, static: true })\n  _templateQuery: TemplateRef<any>;\n\n  get template(): TemplateRef<any> {\n    return this._templateInput || this._templateQuery;\n  }\n\n  /**\n   * Track toggling of group visibility\n   */\n  @Output() toggle: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Toggle the expansion of a group\n   */\n  toggleExpandGroup(group: any): void {\n    this.toggle.emit({\n      type: 'group',\n      value: group\n    });\n  }\n\n  /**\n   * Expand all groups\n   */\n  expandAllGroups(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: true\n    });\n  }\n\n  /**\n   * Collapse all groups\n   */\n  collapseAllGroups(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: false\n    });\n  }\n}\n","import { TableColumnProp } from '../types/table-column.type';\n\n// maybe rename this file to prop-getters.ts\n\nexport type ValueGetter = (obj: any, prop: TableColumnProp) => any;\n\n/**\n * Always returns the empty string ''\n */\nexport function emptyStringGetter(): string {\n  return '';\n}\n\n/**\n * Returns the appropriate getter function for this kind of prop.\n * If prop == null, returns the emptyStringGetter.\n */\nexport function getterForProp(prop: TableColumnProp): ValueGetter {\n  if (prop == null) {\n    return emptyStringGetter;\n  }\n\n  if (typeof prop === 'number') {\n    return numericIndexGetter;\n  } else {\n    // deep or simple\n    if (prop.indexOf('.') !== -1) {\n      return deepValueGetter;\n    } else {\n      return shallowValueGetter;\n    }\n  }\n}\n\n/**\n * Returns the value at this numeric index.\n * @param row array of values\n * @param index numeric index\n * @returns any or '' if invalid index\n */\nexport function numericIndexGetter(row: any[], index: number): any {\n  if (row == null) {\n    return '';\n  }\n  // mimic behavior of deepValueGetter\n  if (!row || index == null) {\n    return row;\n  }\n\n  const value = row[index];\n  if (value == null) {\n    return '';\n  }\n  return value;\n}\n\n/**\n * Returns the value of a field.\n * (more efficient than deepValueGetter)\n * @param obj object containing the field\n * @param fieldName field name string\n */\nexport function shallowValueGetter(obj: any, fieldName: string): any {\n  if (obj == null) {\n    return '';\n  }\n  if (!obj || !fieldName) {\n    return obj;\n  }\n\n  const value = obj[fieldName];\n  if (value == null) {\n    return '';\n  }\n  return value;\n}\n\n/**\n * Returns a deep object given a string. zoo['animal.type']\n */\nexport function deepValueGetter(obj: any, path: string): any {\n  if (obj == null) {\n    return '';\n  }\n  if (!obj || !path) {\n    return obj;\n  }\n\n  // check if path matches a root-level field\n  // { \"a.b.c\": 123 }\n  let current = obj[path];\n  if (current !== undefined) {\n    return current;\n  }\n\n  current = obj;\n  const split = path.split('.');\n\n  if (split.length) {\n    for (let i = 0; i < split.length; i++) {\n      current = current[split[i]];\n\n      // if found undefined, return empty string\n      if (current === undefined || current === null) {\n        return '';\n      }\n    }\n  }\n\n  return current;\n}\n","import { getterForProp } from './column-prop-getters';\nimport { TableColumnProp } from '../types/table-column.type';\n\nexport type OptionalValueGetter = (row: any) => any | undefined;\nexport function optionalGetterForProp(prop: TableColumnProp): OptionalValueGetter {\n  return prop && (row => getterForProp(prop)(row, prop));\n}\n\n/**\n * This functions rearrange items by their parents\n * Also sets the level value to each of the items\n *\n * Note: Expecting each item has a property called parentId\n * Note: This algorithm will fail if a list has two or more items with same ID\n * NOTE: This algorithm will fail if there is a deadlock of relationship\n *\n * For example,\n *\n * Input\n *\n * id -> parent\n * 1  -> 0\n * 2  -> 0\n * 3  -> 1\n * 4  -> 1\n * 5  -> 2\n * 7  -> 8\n * 6  -> 3\n *\n *\n * Output\n * id -> level\n * 1      -> 0\n * --3    -> 1\n * ----6  -> 2\n * --4    -> 1\n * 2      -> 0\n * --5    -> 1\n * 7     -> 8\n *\n *\n * @param rows\n *\n */\nexport function groupRowsByParents(rows: any[], from?: OptionalValueGetter, to?: OptionalValueGetter): any[] {\n  if (from && to) {\n    const nodeById = {};\n    const l = rows.length;\n    let node: TreeNode | null = null;\n\n    nodeById[0] = new TreeNode(); // that's the root node\n\n    const uniqIDs = rows.reduce((arr, item) => {\n      const toValue = to(item);\n      if (arr.indexOf(toValue) === -1) {\n        arr.push(toValue);\n      }\n      return arr;\n    }, []);\n\n    for (let i = 0; i < l; i++) {\n      // make TreeNode objects for each item\n      nodeById[to(rows[i])] = new TreeNode(rows[i]);\n    }\n\n    for (let i = 0; i < l; i++) {\n      // link all TreeNode objects\n      node = nodeById[to(rows[i])];\n      let parent = 0;\n      const fromValue = from(node.row);\n      if (!!fromValue && uniqIDs.indexOf(fromValue) > -1) {\n        parent = fromValue;\n      }\n      node.parent = nodeById[parent];\n      node.row['level'] = node.parent.row['level'] + 1;\n      node.parent.children.push(node);\n    }\n\n    let resolvedRows: any[] = [];\n    nodeById[0].flatten(function () {\n      resolvedRows = [...resolvedRows, this.row];\n    }, true);\n\n    return resolvedRows;\n  } else {\n    return rows;\n  }\n}\n\nclass TreeNode {\n  public row: any;\n  public parent: any;\n  public children: any[];\n\n  constructor(row: any | null = null) {\n    if (!row) {\n      row = {\n        level: -1,\n        treeStatus: 'expanded'\n      };\n    }\n    this.row = row;\n    this.parent = null;\n    this.children = [];\n  }\n\n  flatten(f: any, recursive: boolean) {\n    if (this.row['treeStatus'] === 'expanded') {\n      for (let i = 0, l = this.children.length; i < l; i++) {\n        const child = this.children[i];\n        f.apply(child, Array.prototype.slice.call(arguments, 2));\n        if (recursive) child.flatten.apply(child, arguments);\n      }\n    }\n  }\n}\n","/**\n * Converts strings from something to camel case\n * http://stackoverflow.com/questions/10425287/convert-dash-separated-string-to-camelcase\n */\nexport function camelCase(str: string): string {\n  // Replace special characters with a space\n  str = str.replace(/[^a-zA-Z0-9 ]/g, ' ');\n  // put a space before an uppercase letter\n  str = str.replace(/([a-z](?=[A-Z]))/g, '$1 ');\n\n  // Lower case first character and some other stuff\n  str = str\n    .replace(/([^a-zA-Z0-9 ])|^[0-9]+/g, '')\n    .trim()\n    .toLowerCase();\n\n  // uppercase characters preceded by a space or number\n  str = str.replace(/([ 0-9]+)([a-zA-Z])/g, function (a, b, c) {\n    return b.trim() + c.toUpperCase();\n  });\n\n  return str;\n}\n\n/**\n * Converts strings from camel case to words\n * http://stackoverflow.com/questions/7225407/convert-camelcasetext-to-camel-case-text\n */\nexport function deCamelCase(str: string): string {\n  return str.replace(/([A-Z])/g, match => ` ${match}`).replace(/^./, match => match.toUpperCase());\n}\n","/**\n * Creates a unique object id.\n * http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n */\nexport function id() {\n  return ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\n}\n","import { camelCase, deCamelCase } from './camel-case';\nimport { id } from './id';\nimport { getterForProp } from './column-prop-getters';\nimport { TableColumn } from '../types/table-column.type';\nimport { DataTableColumnDirective } from '../components/columns/column.directive';\n\n/**\n * Sets the column defaults\n */\nexport function setColumnDefaults(columns: TableColumn[]) {\n  if (!columns) return;\n\n  // Only one column should hold the tree view\n  // Thus if multiple columns are provided with\n  // isTreeColumn as true we take only the first one\n  let treeColumnFound: boolean = false;\n\n  for (const column of columns) {\n    if (!column.$$id) {\n      column.$$id = id();\n    }\n\n    // prop can be numeric; zero is valid not a missing prop\n    // translate name => prop\n    if (isNullOrUndefined(column.prop) && column.name) {\n      column.prop = camelCase(column.name);\n    }\n\n    if (!column.$$valueGetter) {\n      column.$$valueGetter = getterForProp(column.prop);\n    }\n\n    // format props if no name passed\n    if (!isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n      column.name = deCamelCase(String(column.prop));\n    }\n\n    if (isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n      column.name = ''; // Fixes IE and Edge displaying `null`\n    }\n\n    if (!column.hasOwnProperty('resizeable')) {\n      column.resizeable = true;\n    }\n\n    if (!column.hasOwnProperty('sortable')) {\n      column.sortable = true;\n    }\n\n    if (!column.hasOwnProperty('draggable')) {\n      column.draggable = true;\n    }\n\n    if (!column.hasOwnProperty('canAutoResize')) {\n      column.canAutoResize = true;\n    }\n\n    if (!column.hasOwnProperty('width')) {\n      column.width = 150;\n    }\n\n    if (!column.hasOwnProperty('isTreeColumn')) {\n      column.isTreeColumn = false;\n    } else {\n      if (column.isTreeColumn && !treeColumnFound) {\n        // If the first column with isTreeColumn is true found\n        // we mark that treeCoulmn is found\n        treeColumnFound = true;\n      } else {\n        // After that isTreeColumn property for any other column\n        // will be set as false\n        column.isTreeColumn = false;\n      }\n    }\n  }\n}\n\nexport function isNullOrUndefined<T>(value: T | null | undefined): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Translates templates definitions to objects\n */\nexport function translateTemplates(templates: DataTableColumnDirective[]): any[] {\n  const result: any[] = [];\n  for (const temp of templates) {\n    const col: any = {};\n\n    const props = Object.getOwnPropertyNames(temp);\n    for (const prop of props) {\n      col[prop] = temp[prop];\n    }\n\n    if (temp.headerTemplate) {\n      col.headerTemplate = temp.headerTemplate;\n    }\n\n    if (temp.cellTemplate) {\n      col.cellTemplate = temp.cellTemplate;\n    }\n\n    if (temp.summaryFunc) {\n      col.summaryFunc = temp.summaryFunc;\n    }\n\n    if (temp.summaryTemplate) {\n      col.summaryTemplate = temp.summaryTemplate;\n    }\n\n    result.push(col);\n  }\n\n  return result;\n}\n","export enum ColumnMode {\n  standard = 'standard',\n  flex = 'flex',\n  force = 'force'\n}\n","export enum SelectionType {\n  single = 'single',\n  multi = 'multi',\n  multiClick = 'multiClick',\n  cell = 'cell',\n  checkbox = 'checkbox'\n}\n","export enum SortType {\n  single = 'single',\n  multi = 'multi'\n}\n","export enum ContextmenuType {\n  header = 'header',\n  body = 'body'\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-header-template]' })\nexport class DataTableColumnHeaderDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-cell-template]' })\nexport class DataTableColumnCellDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-tree-toggle]' })\nexport class DataTableColumnCellTreeToggle {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Directive, TemplateRef, ContentChild, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { DataTableColumnHeaderDirective } from './column-header.directive';\nimport { DataTableColumnCellDirective } from './column-cell.directive';\nimport { DataTableColumnCellTreeToggle } from './tree.directive';\nimport { ColumnChangesService } from '../../services/column-changes.service';\nimport { TableColumnProp } from '../../types/table-column.type';\n\n@Directive({ selector: 'ngx-datatable-column' })\nexport class DataTableColumnDirective implements OnChanges {\n  @Input() name: string;\n  @Input() prop: TableColumnProp;\n  @Input() frozenLeft: any;\n  @Input() frozenRight: any;\n  @Input() flexGrow: number;\n  @Input() resizeable: boolean;\n  @Input() comparator: any;\n  @Input() pipe: any;\n  @Input() sortable: boolean;\n  @Input() draggable: boolean;\n  @Input() canAutoResize: boolean;\n  @Input() minWidth: number;\n  @Input() width: number;\n  @Input() maxWidth: number;\n  @Input() checkboxable: boolean;\n  @Input() headerCheckboxable: boolean;\n  @Input() headerClass: string | ((data: any) => string | any);\n  @Input() cellClass: string | ((data: any) => string | any);\n  @Input() isTreeColumn: boolean;\n  @Input() treeLevelIndent: number;\n  @Input() summaryFunc: (cells: any[]) => any;\n  @Input() summaryTemplate: TemplateRef<any>;\n\n  @Input('cellTemplate')\n  _cellTemplateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableColumnCellDirective, { read: TemplateRef, static: true })\n  _cellTemplateQuery: TemplateRef<any>;\n\n  get cellTemplate(): TemplateRef<any> {\n    return this._cellTemplateInput || this._cellTemplateQuery;\n  }\n\n  @Input('headerTemplate')\n  _headerTemplateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableColumnHeaderDirective, { read: TemplateRef, static: true })\n  _headerTemplateQuery: TemplateRef<any>;\n\n  get headerTemplate(): TemplateRef<any> {\n    return this._headerTemplateInput || this._headerTemplateQuery;\n  }\n\n  @Input('treeToggleTemplate')\n  _treeToggleTemplateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableColumnCellTreeToggle, { read: TemplateRef, static: true })\n  _treeToggleTemplateQuery: TemplateRef<any>;\n\n  get treeToggleTemplate(): TemplateRef<any> {\n    return this._treeToggleTemplateInput || this._treeToggleTemplateQuery;\n  }\n\n  private isFirstChange = true;\n\n  constructor(private columnChangesService: ColumnChangesService) {}\n\n  ngOnChanges() {\n    if (this.isFirstChange) {\n      this.isFirstChange = false;\n    } else {\n      this.columnChangesService.onInputChange();\n    }\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngx-datatable-row-detail-template]'\n})\nexport class DatatableRowDetailTemplateDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Input, Output, EventEmitter, Directive, TemplateRef, ContentChild } from '@angular/core';\nimport { DatatableRowDetailTemplateDirective } from './row-detail-template.directive';\n\n@Directive({ selector: 'ngx-datatable-row-detail' })\nexport class DatatableRowDetailDirective {\n  /**\n   * The detail row height is required especially\n   * when virtual scroll is enabled.\n   */\n  @Input() rowHeight: number | ((row?: any, index?: number) => number) = 0;\n\n  @Input('template')\n  _templateInput: TemplateRef<any>;\n\n  @ContentChild(DatatableRowDetailTemplateDirective, { read: TemplateRef, static: true })\n  _templateQuery: TemplateRef<any>;\n\n  get template(): TemplateRef<any> {\n    return this._templateInput || this._templateQuery;\n  }\n\n  /**\n   * Row detail row visbility was toggled.\n   */\n  @Output() toggle: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Toggle the expansion of the row\n   */\n  toggleExpandRow(row: any): void {\n    this.toggle.emit({\n      type: 'row',\n      value: row\n    });\n  }\n\n  /**\n   * API method to expand all the rows.\n   */\n  expandAllRows(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: true\n    });\n  }\n\n  /**\n   * API method to collapse all the rows.\n   */\n  collapseAllRows(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: false\n    });\n  }\n}\n","import { Input, Directive, TemplateRef, ContentChild } from '@angular/core';\nimport { DataTableFooterTemplateDirective } from './footer-template.directive';\n\n@Directive({ selector: 'ngx-datatable-footer' })\nexport class DatatableFooterDirective {\n  @Input() footerHeight: number;\n  @Input() totalMessage: string;\n  @Input() selectedMessage: string | boolean;\n  @Input() pagerLeftArrowIcon: string;\n  @Input() pagerRightArrowIcon: string;\n  @Input() pagerPreviousIcon: string;\n  @Input() pagerNextIcon: string;\n\n  @Input('template')\n  _templateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableFooterTemplateDirective, { read: TemplateRef })\n  _templateQuery: TemplateRef<any>;\n\n  get template(): TemplateRef<any> {\n    return this._templateInput || this._templateQuery;\n  }\n}\n","/**\n * Returns the columns by pin.\n */\nexport function columnsByPin(cols: any[]) {\n  const ret: { left: any; center: any; right: any } = {\n    left: [],\n    center: [],\n    right: []\n  };\n\n  if (cols) {\n    for (const col of cols) {\n      if (col.frozenLeft) {\n        ret.left.push(col);\n      } else if (col.frozenRight) {\n        ret.right.push(col);\n      } else {\n        ret.center.push(col);\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Returns the widths of all group sets of a column\n */\nexport function columnGroupWidths(groups: any, all: any) {\n  return {\n    left: columnTotalWidth(groups.left),\n    center: columnTotalWidth(groups.center),\n    right: columnTotalWidth(groups.right),\n    total: Math.floor(columnTotalWidth(all))\n  };\n}\n\n/**\n * Calculates the total width of all columns and their groups\n */\nexport function columnTotalWidth(columns: any[], prop?: string) {\n  let totalWidth = 0;\n\n  if (columns) {\n    for (const c of columns) {\n      const has = prop && c[prop];\n      const width = has ? c[prop] : c.width;\n      totalWidth = totalWidth + parseFloat(width);\n    }\n  }\n\n  return totalWidth;\n}\n\n/**\n * Calculates the total width of all columns and their groups\n */\nexport function columnsTotalWidth(columns: any, prop?: any) {\n  let totalWidth = 0;\n\n  for (const column of columns) {\n    const has = prop && column[prop];\n    totalWidth = totalWidth + (has ? column[prop] : column.width);\n  }\n\n  return totalWidth;\n}\n\nexport function columnsByPinArr(val: any) {\n  const colsByPinArr = [];\n  const colsByPin = columnsByPin(val);\n\n  colsByPinArr.push({ type: 'left', columns: colsByPin['left'] });\n  colsByPinArr.push({ type: 'center', columns: colsByPin['center'] });\n  colsByPinArr.push({ type: 'right', columns: colsByPin['right'] });\n\n  return colsByPinArr;\n}\n","/**\n * This object contains the cache of the various row heights that are present inside\n * the data table.   Its based on Fenwick tree data structure that helps with\n * querying sums that have time complexity of log n.\n *\n * Fenwick Tree Credits: http://petr-mitrichev.blogspot.com/2013/05/fenwick-tree-range-updates.html\n * https://github.com/mikolalysenko/fenwick-tree\n *\n */\nexport class RowHeightCache {\n  /**\n   * Tree Array stores the cumulative information of the row heights to perform efficient\n   * range queries and updates.  Currently the tree is initialized to the base row\n   * height instead of the detail row height.\n   */\n  private treeArray: number[] = [];\n\n  /**\n   * Clear the Tree array.\n   */\n  clearCache(): void {\n    this.treeArray = [];\n  }\n\n  /**\n   * Initialize the Fenwick tree with row Heights.\n   *\n   * @param rows The array of rows which contain the expanded status.\n   * @param rowHeight The row height.\n   * @param detailRowHeight The detail row height.\n   */\n  initCache(details: any): void {\n    const { rows, rowHeight, detailRowHeight, externalVirtual, rowCount, rowIndexes, rowExpansions } = details;\n    const isFn = typeof rowHeight === 'function';\n    const isDetailFn = typeof detailRowHeight === 'function';\n\n    if (!isFn && isNaN(rowHeight)) {\n      throw new Error(`Row Height cache initialization failed. Please ensure that 'rowHeight' is a\n        valid number or function value: (${rowHeight}) when 'scrollbarV' is enabled.`);\n    }\n\n    // Add this additional guard in case detailRowHeight is set to 'auto' as it wont work.\n    if (!isDetailFn && isNaN(detailRowHeight)) {\n      throw new Error(`Row Height cache initialization failed. Please ensure that 'detailRowHeight' is a\n        valid number or function value: (${detailRowHeight}) when 'scrollbarV' is enabled.`);\n    }\n\n    const n = externalVirtual ? rowCount : rows.length;\n    this.treeArray = new Array(n);\n\n    for (let i = 0; i < n; ++i) {\n      this.treeArray[i] = 0;\n    }\n\n    for (let i = 0; i < n; ++i) {\n      const row = rows[i];\n      let currentRowHeight = rowHeight;\n      if (isFn) {\n        currentRowHeight = rowHeight(row);\n      }\n\n      // Add the detail row height to the already expanded rows.\n      // This is useful for the table that goes through a filter or sort.\n      const expanded = rowExpansions.has(row);\n      if (row && expanded) {\n        if (isDetailFn) {\n          const index = rowIndexes.get(row);\n          currentRowHeight += detailRowHeight(row, index);\n        } else {\n          currentRowHeight += detailRowHeight;\n        }\n      }\n\n      this.update(i, currentRowHeight);\n    }\n  }\n\n  /**\n   * Given the ScrollY position i.e. sum, provide the rowIndex\n   * that is present in the current view port.  Below handles edge cases.\n   */\n  getRowIndex(scrollY: number): number {\n    if (scrollY === 0) return 0;\n    return this.calcRowIndex(scrollY);\n  }\n\n  /**\n   * When a row is expanded or rowHeight is changed, update the height.  This can\n   * be utilized in future when Angular Data table supports dynamic row heights.\n   */\n  update(atRowIndex: number, byRowHeight: number): void {\n    if (!this.treeArray.length) {\n      throw new Error(`Update at index ${atRowIndex} with value ${byRowHeight} failed:\n        Row Height cache not initialized.`);\n    }\n\n    const n = this.treeArray.length;\n    atRowIndex |= 0;\n\n    while (atRowIndex < n) {\n      this.treeArray[atRowIndex] += byRowHeight;\n      atRowIndex |= atRowIndex + 1;\n    }\n  }\n\n  /**\n   * Range Sum query from 1 to the rowIndex\n   */\n  query(atIndex: number): number {\n    if (!this.treeArray.length) {\n      throw new Error(`query at index ${atIndex} failed: Fenwick tree array not initialized.`);\n    }\n\n    let sum = 0;\n    atIndex |= 0;\n\n    while (atIndex >= 0) {\n      sum += this.treeArray[atIndex];\n      atIndex = (atIndex & (atIndex + 1)) - 1;\n    }\n\n    return sum;\n  }\n\n  /**\n   * Find the total height between 2 row indexes\n   */\n  queryBetween(atIndexA: number, atIndexB: number): number {\n    return this.query(atIndexB) - this.query(atIndexA - 1);\n  }\n\n  /**\n   * Given the ScrollY position i.e. sum, provide the rowIndex\n   * that is present in the current view port.\n   */\n  private calcRowIndex(sum: number): number {\n    if (!this.treeArray.length) return 0;\n\n    let pos = -1;\n    const dataLength = this.treeArray.length;\n\n    // Get the highest bit for the block size.\n    const highestBit = Math.pow(2, dataLength.toString(2).length - 1);\n\n    for (let blockSize = highestBit; blockSize !== 0; blockSize >>= 1) {\n      const nextPos = pos + blockSize;\n      if (nextPos < dataLength && sum >= this.treeArray[nextPos]) {\n        sum -= this.treeArray[nextPos];\n        pos = nextPos;\n      }\n    }\n\n    return pos + 1;\n  }\n}\n","import { camelCase } from './camel-case';\n\nconst cache = {};\nconst testStyle = typeof document !== 'undefined' ? document.createElement('div').style : undefined;\n\n// Get Prefix\n// http://davidwalsh.name/vendor-prefix\nconst prefix = (function () {\n  const styles = typeof window !== 'undefined' ? window.getComputedStyle(document.documentElement, '') : undefined;\n  const match =\n    typeof styles !== 'undefined'\n      ? Array.prototype.slice\n          .call(styles)\n          .join('')\n          .match(/-(moz|webkit|ms)-/)\n      : null;\n  const pre = match !== null ? match[1] : undefined;\n  // tslint:disable-next-line: tsr-detect-non-literal-regexp\n  const dom = typeof pre !== 'undefined' ? 'WebKit|Moz|MS|O'.match(new RegExp('(' + pre + ')', 'i'))[1] : undefined;\n\n  return dom\n    ? {\n        dom,\n        lowercase: pre,\n        css: `-${pre}-`,\n        js: pre[0].toUpperCase() + pre.substr(1)\n      }\n    : undefined;\n})();\n\nexport function getVendorPrefixedName(property: string) {\n  const name = camelCase(property);\n\n  if (!cache[name]) {\n    if (prefix !== undefined && testStyle[prefix.css + property] !== undefined) {\n      cache[name] = prefix.css + property;\n    } else if (testStyle[property] !== undefined) {\n      cache[name] = property;\n    }\n  }\n\n  return cache[name];\n}\n","import { getVendorPrefixedName } from './prefixes';\nimport { camelCase } from './camel-case';\n\n// browser detection and prefixing tools\nconst transform = typeof window !== 'undefined' ? getVendorPrefixedName('transform') : undefined;\nconst backfaceVisibility = typeof window !== 'undefined' ? getVendorPrefixedName('backfaceVisibility') : undefined;\nconst hasCSSTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('transform') : undefined;\nconst hasCSS3DTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('perspective') : undefined;\nconst ua = typeof window !== 'undefined' ? window.navigator.userAgent : 'Chrome';\nconst isSafari = /Safari\\//.test(ua) && !/Chrome\\//.test(ua);\n\nexport function translateXY(styles: any, x: number, y: number) {\n  if (typeof transform !== 'undefined' && hasCSSTransforms) {\n    if (!isSafari && hasCSS3DTransforms) {\n      styles[transform] = `translate3d(${x}px, ${y}px, 0)`;\n      styles[backfaceVisibility] = 'hidden';\n    } else {\n      styles[camelCase(transform)] = `translate(${x}px, ${y}px)`;\n    }\n  } else {\n    styles.top = `${y}px`;\n    styles.left = `${x}px`;\n  }\n}\n","import {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  HostBinding,\n  ChangeDetectorRef,\n  ViewChild,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { ScrollerComponent } from './scroller.component';\nimport { SelectionType } from '../../types/selection.type';\nimport { columnsByPin, columnGroupWidths } from '../../utils/column';\nimport { RowHeightCache } from '../../utils/row-height-cache';\nimport { translateXY } from '../../utils/translate';\n\n@Component({\n  selector: 'datatable-body',\n  template: `\n    <datatable-progress *ngIf=\"loadingIndicator\"> </datatable-progress>\n    <datatable-selection\n      #selector\n      [selected]=\"selected\"\n      [rows]=\"rows\"\n      [selectCheck]=\"selectCheck\"\n      [selectEnabled]=\"selectEnabled\"\n      [selectionType]=\"selectionType\"\n      [rowIdentity]=\"rowIdentity\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n    >\n      <datatable-scroller\n        *ngIf=\"rows?.length\"\n        [scrollbarV]=\"scrollbarV\"\n        [scrollbarH]=\"scrollbarH\"\n        [scrollHeight]=\"scrollHeight\"\n        [scrollWidth]=\"columnGroupWidths?.total\"\n        (scroll)=\"onBodyScroll($event)\"\n      >\n        <datatable-summary-row\n          *ngIf=\"summaryRow && summaryPosition === 'top'\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n        <datatable-row-wrapper\n          [groupedRows]=\"groupedRows\"\n          *ngFor=\"let group of temp; let i = index; trackBy: rowTrackingFn\"\n          [innerWidth]=\"innerWidth\"\n          [ngStyle]=\"getRowsStyles(group)\"\n          [rowDetail]=\"rowDetail\"\n          [groupHeader]=\"groupHeader\"\n          [offsetX]=\"offsetX\"\n          [detailRowHeight]=\"getDetailRowHeight(group && group[i], i)\"\n          [row]=\"group\"\n          [expanded]=\"getRowExpanded(group)\"\n          [rowIndex]=\"getRowIndex(group && group[i])\"\n          (rowContextmenu)=\"rowContextmenu.emit($event)\"\n        >\n          <datatable-body-row\n            *ngIf=\"!groupedRows; else groupedRowsTemplate\"\n            tabindex=\"-1\"\n            [isSelected]=\"selector.getRowSelected(group)\"\n            [innerWidth]=\"innerWidth\"\n            [offsetX]=\"offsetX\"\n            [columns]=\"columns\"\n            [rowHeight]=\"getRowHeight(group)\"\n            [row]=\"group\"\n            [rowIndex]=\"getRowIndex(group)\"\n            [expanded]=\"getRowExpanded(group)\"\n            [rowClass]=\"rowClass\"\n            [displayCheck]=\"displayCheck\"\n            [treeStatus]=\"group && group.treeStatus\"\n            (treeAction)=\"onTreeAction(group)\"\n            (activate)=\"selector.onActivate($event, indexes.first + i)\"\n          >\n          </datatable-body-row>\n          <ng-template #groupedRowsTemplate>\n            <datatable-body-row\n              *ngFor=\"let row of group.value; let i = index; trackBy: rowTrackingFn\"\n              tabindex=\"-1\"\n              [isSelected]=\"selector.getRowSelected(row)\"\n              [innerWidth]=\"innerWidth\"\n              [offsetX]=\"offsetX\"\n              [columns]=\"columns\"\n              [rowHeight]=\"getRowHeight(row)\"\n              [row]=\"row\"\n              [group]=\"group.value\"\n              [rowIndex]=\"getRowIndex(row)\"\n              [expanded]=\"getRowExpanded(row)\"\n              [rowClass]=\"rowClass\"\n              (activate)=\"selector.onActivate($event, i)\"\n            >\n            </datatable-body-row>\n          </ng-template>\n        </datatable-row-wrapper>\n        <datatable-summary-row\n          *ngIf=\"summaryRow && summaryPosition === 'bottom'\"\n          [ngStyle]=\"getBottomSummaryRowStyles()\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n      </datatable-scroller>\n      <div class=\"empty-row\" *ngIf=\"!rows?.length && !loadingIndicator\" [innerHTML]=\"emptyMessage\"></div>\n    </datatable-selection>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'datatable-body'\n  }\n})\nexport class DataTableBodyComponent implements OnInit, OnDestroy {\n  @Input() scrollbarV: boolean;\n  @Input() scrollbarH: boolean;\n  @Input() loadingIndicator: boolean;\n  @Input() externalPaging: boolean;\n  @Input() rowHeight: number | 'auto' | ((row?: any) => number);\n  @Input() offsetX: number;\n  @Input() emptyMessage: string;\n  @Input() selectionType: SelectionType;\n  @Input() selected: any[] = [];\n  @Input() rowIdentity: any;\n  @Input() rowDetail: any;\n  @Input() groupHeader: any;\n  @Input() selectCheck: any;\n  @Input() displayCheck: any;\n  @Input() trackByProp: string;\n  @Input() rowClass: any;\n  @Input() groupedRows: any;\n  @Input() groupExpansionDefault: boolean;\n  @Input() innerWidth: number;\n  @Input() groupRowsBy: string;\n  @Input() virtualization: boolean;\n  @Input() summaryRow: boolean;\n  @Input() summaryPosition: string;\n  @Input() summaryHeight: number;\n\n  @Input() set pageSize(val: number) {\n    this._pageSize = val;\n    this.recalcLayout();\n  }\n\n  get pageSize(): number {\n    return this._pageSize;\n  }\n\n  @Input() set rows(val: any[]) {\n    this._rows = val;\n    this.recalcLayout();\n  }\n\n  get rows(): any[] {\n    return this._rows;\n  }\n\n  @Input() set columns(val: any[]) {\n    this._columns = val;\n    const colsByPin = columnsByPin(val);\n    this.columnGroupWidths = columnGroupWidths(colsByPin, val);\n  }\n\n  get columns(): any[] {\n    return this._columns;\n  }\n\n  @Input() set offset(val: number) {\n    this._offset = val;\n    if (!this.scrollbarV || (this.scrollbarV && !this.virtualization)) this.recalcLayout();\n  }\n\n  get offset(): number {\n    return this._offset;\n  }\n\n  @Input() set rowCount(val: number) {\n    this._rowCount = val;\n    this.recalcLayout();\n  }\n\n  get rowCount(): number {\n    return this._rowCount;\n  }\n\n  @HostBinding('style.width')\n  get bodyWidth(): string {\n    if (this.scrollbarH) {\n      return this.innerWidth + 'px';\n    } else {\n      return '100%';\n    }\n  }\n\n  @Input()\n  @HostBinding('style.height')\n  set bodyHeight(val) {\n    if (this.scrollbarV) {\n      this._bodyHeight = val + 'px';\n    } else {\n      this._bodyHeight = 'auto';\n    }\n\n    this.recalcLayout();\n  }\n\n  get bodyHeight() {\n    return this._bodyHeight;\n  }\n\n  @Output() scroll: EventEmitter<any> = new EventEmitter();\n  @Output() page: EventEmitter<any> = new EventEmitter();\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() detailToggle: EventEmitter<any> = new EventEmitter();\n  @Output() rowContextmenu = new EventEmitter<{ event: MouseEvent; row: any }>(false);\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild(ScrollerComponent) scroller: ScrollerComponent;\n\n  /**\n   * Returns if selection is enabled.\n   */\n  get selectEnabled(): boolean {\n    return !!this.selectionType;\n  }\n\n  /**\n   * Property that would calculate the height of scroll bar\n   * based on the row heights cache for virtual scroll and virtualization. Other scenarios\n   * calculate scroll height automatically (as height will be undefined).\n   */\n  get scrollHeight(): number | undefined {\n    if (this.scrollbarV && this.virtualization && this.rowCount) {\n      return this.rowHeightsCache.query(this.rowCount - 1);\n    }\n    // avoid TS7030: Not all code paths return a value.\n    return undefined;\n  }\n\n  rowHeightsCache: RowHeightCache = new RowHeightCache();\n  temp: any[] = [];\n  offsetY = 0;\n  indexes: any = {};\n  columnGroupWidths: any;\n  columnGroupWidthsWithoutGroup: any;\n  rowTrackingFn: any;\n  listener: any;\n  rowIndexes: any = new WeakMap<any, string>();\n  rowExpansions: any[] = [];\n\n  _rows: any[];\n  _bodyHeight: any;\n  _columns: any[];\n  _rowCount: number;\n  _offset: number;\n  _pageSize: number;\n\n  /**\n   * Creates an instance of DataTableBodyComponent.\n   */\n  constructor(private cd: ChangeDetectorRef) {\n    // declare fn here so we can get access to the `this` property\n    this.rowTrackingFn = (index: number, row: any): any => {\n      const idx = this.getRowIndex(row);\n      if (this.trackByProp) {\n        return row[this.trackByProp];\n      } else {\n        return idx;\n      }\n    };\n  }\n\n  /**\n   * Called after the constructor, initializing input properties\n   */\n  ngOnInit(): void {\n    if (this.rowDetail) {\n      this.listener = this.rowDetail.toggle.subscribe(({ type, value }: { type: string; value: any }) => {\n        if (type === 'row') {\n          this.toggleRowExpansion(value);\n        }\n        if (type === 'all') {\n          this.toggleAllRows(value);\n        }\n\n        // Refresh rows after toggle\n        // Fixes #883\n        this.updateIndexes();\n        this.updateRows();\n        this.cd.markForCheck();\n      });\n    }\n\n    if (this.groupHeader) {\n      this.listener = this.groupHeader.toggle.subscribe(({ type, value }: { type: string; value: any }) => {\n        if (type === 'group') {\n          this.toggleRowExpansion(value);\n        }\n        if (type === 'all') {\n          this.toggleAllRows(value);\n        }\n\n        // Refresh rows after toggle\n        // Fixes #883\n        this.updateIndexes();\n        this.updateRows();\n        this.cd.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * Called once, before the instance is destroyed.\n   */\n  ngOnDestroy(): void {\n    if (this.rowDetail || this.groupHeader) {\n      this.listener.unsubscribe();\n    }\n  }\n\n  /**\n   * Updates the Y offset given a new offset.\n   */\n  updateOffsetY(offset?: number): void {\n    // scroller is missing on empty table\n    if (!this.scroller) {\n      return;\n    }\n\n    if (this.scrollbarV && this.virtualization && offset) {\n      // First get the row Index that we need to move to.\n      const rowIndex = this.pageSize * offset;\n      offset = this.rowHeightsCache.query(rowIndex - 1);\n    } else if (this.scrollbarV && !this.virtualization) {\n      offset = 0;\n    }\n\n    this.scroller.setOffset(offset || 0);\n  }\n\n  /**\n   * Body was scrolled, this is mainly useful for\n   * when a user is server-side pagination via virtual scroll.\n   */\n  onBodyScroll(event: any): void {\n    const scrollYPos: number = event.scrollYPos;\n    const scrollXPos: number = event.scrollXPos;\n\n    // if scroll change, trigger update\n    // this is mainly used for header cell positions\n    if (this.offsetY !== scrollYPos || this.offsetX !== scrollXPos) {\n      this.scroll.emit({\n        offsetY: scrollYPos,\n        offsetX: scrollXPos\n      });\n    }\n\n    this.offsetY = scrollYPos;\n    this.offsetX = scrollXPos;\n\n    this.updateIndexes();\n    this.updatePage(event.direction);\n    this.updateRows();\n  }\n\n  /**\n   * Updates the page given a direction.\n   */\n  updatePage(direction: string): void {\n    let offset = this.indexes.first / this.pageSize;\n\n    if (direction === 'up') {\n      offset = Math.ceil(offset);\n    } else if (direction === 'down') {\n      offset = Math.floor(offset);\n    }\n\n    if (direction !== undefined && !isNaN(offset)) {\n      this.page.emit({ offset });\n    }\n  }\n\n  /**\n   * Updates the rows in the view port\n   */\n  updateRows(): void {\n    const { first, last } = this.indexes;\n    let rowIndex = first;\n    let idx = 0;\n    const temp: any[] = [];\n\n    // if grouprowsby has been specified treat row paging\n    // parameters as group paging parameters ie if limit 10 has been\n    // specified treat it as 10 groups rather than 10 rows\n    if (this.groupedRows) {\n      let maxRowsPerGroup = 3;\n      // if there is only one group set the maximum number of\n      // rows per group the same as the total number of rows\n      if (this.groupedRows.length === 1) {\n        maxRowsPerGroup = this.groupedRows[0].value.length;\n      }\n\n      while (rowIndex < last && rowIndex < this.groupedRows.length) {\n        // Add the groups into this page\n        const group = this.groupedRows[rowIndex];\n        this.rowIndexes.set(group, rowIndex);\n\n        if (group.value) {\n          // add indexes for each group item\n          group.value.forEach((g: any, i: number) => {\n            const _idx = `${rowIndex}-${i}`;\n            this.rowIndexes.set(g, _idx);\n          });\n        }\n        temp[idx] = group;\n        idx++;\n\n        // Group index in this context\n        rowIndex++;\n      }\n    } else {\n      while (rowIndex < last && rowIndex < this.rowCount) {\n        const row = this.rows[rowIndex];\n\n        if (row) {\n          // add indexes for each row\n          this.rowIndexes.set(row, rowIndex);\n          temp[idx] = row;\n        }\n\n        idx++;\n        rowIndex++;\n      }\n    }\n\n    this.temp = temp;\n  }\n\n  /**\n   * Get the row height\n   */\n  getRowHeight(row: any): number {\n    // if its a function return it\n    if (typeof this.rowHeight === 'function') {\n      return this.rowHeight(row);\n    }\n\n    return this.rowHeight as number;\n  }\n\n  /**\n   * @param group the group with all rows\n   */\n  getGroupHeight(group: any): number {\n    let rowHeight = 0;\n\n    if (group.value) {\n      for (let index = 0; index < group.value.length; index++) {\n        rowHeight += this.getRowAndDetailHeight(group.value[index]);\n      }\n    }\n\n    return rowHeight;\n  }\n\n  /**\n   * Calculate row height based on the expanded state of the row.\n   */\n  getRowAndDetailHeight(row: any): number {\n    let rowHeight = this.getRowHeight(row);\n    const expanded = this.getRowExpanded(row);\n\n    // Adding detail row height if its expanded.\n    if (expanded) {\n      rowHeight += this.getDetailRowHeight(row);\n    }\n\n    return rowHeight;\n  }\n\n  /**\n   * Get the height of the detail row.\n   */\n  getDetailRowHeight = (row?: any, index?: any): number => {\n    if (!this.rowDetail) {\n      return 0;\n    }\n    const rowHeight = this.rowDetail.rowHeight;\n    return typeof rowHeight === 'function' ? rowHeight(row, index) : (rowHeight as number);\n  };\n\n  /**\n   * Calculates the styles for the row so that the rows can be moved in 2D space\n   * during virtual scroll inside the DOM.   In the below case the Y position is\n   * manipulated.   As an example, if the height of row 0 is 30 px and row 1 is\n   * 100 px then following styles are generated:\n   *\n   * transform: translate3d(0px, 0px, 0px);    ->  row0\n   * transform: translate3d(0px, 30px, 0px);   ->  row1\n   * transform: translate3d(0px, 130px, 0px);  ->  row2\n   *\n   * Row heights have to be calculated based on the row heights cache as we wont\n   * be able to determine which row is of what height before hand.  In the above\n   * case the positionY of the translate3d for row2 would be the sum of all the\n   * heights of the rows before it (i.e. row0 and row1).\n   *\n   * @param rows the row that needs to be placed in the 2D space.\n   * @returns the CSS3 style to be applied\n   *\n   * @memberOf DataTableBodyComponent\n   */\n  getRowsStyles(rows: any): any {\n    const styles: any = {};\n\n    // only add styles for the group if there is a group\n    if (this.groupedRows) {\n      styles.width = this.columnGroupWidths.total;\n    }\n\n    if (this.scrollbarV && this.virtualization) {\n      let idx = 0;\n\n      if (this.groupedRows) {\n        // Get the latest row rowindex in a group\n        const row = rows[rows.length - 1];\n        idx = row ? this.getRowIndex(row) : 0;\n      } else {\n        idx = this.getRowIndex(rows);\n      }\n\n      // const pos = idx * rowHeight;\n      // The position of this row would be the sum of all row heights\n      // until the previous row position.\n      const pos = this.rowHeightsCache.query(idx - 1);\n\n      translateXY(styles, 0, pos);\n    }\n\n    return styles;\n  }\n\n  /**\n   * Calculate bottom summary row offset for scrollbar mode.\n   * For more information about cache and offset calculation\n   * see description for `getRowsStyles` method\n   *\n   * @returns the CSS3 style to be applied\n   *\n   * @memberOf DataTableBodyComponent\n   */\n  getBottomSummaryRowStyles(): any {\n    if (!this.scrollbarV || !this.rows || !this.rows.length) {\n      return null;\n    }\n\n    const styles = { position: 'absolute' };\n    const pos = this.rowHeightsCache.query(this.rows.length - 1);\n\n    translateXY(styles, 0, pos);\n\n    return styles;\n  }\n\n  /**\n   * Hides the loading indicator\n   */\n  hideIndicator(): void {\n    setTimeout(() => (this.loadingIndicator = false), 500);\n  }\n\n  /**\n   * Updates the index of the rows in the viewport\n   */\n  updateIndexes(): void {\n    let first = 0;\n    let last = 0;\n\n    if (this.scrollbarV) {\n      if (this.virtualization) {\n        // Calculation of the first and last indexes will be based on where the\n        // scrollY position would be at.  The last index would be the one\n        // that shows up inside the view port the last.\n        const height = parseInt(this.bodyHeight, 0);\n        first = this.rowHeightsCache.getRowIndex(this.offsetY);\n        last = this.rowHeightsCache.getRowIndex(height + this.offsetY) + 1;\n      } else {\n        // If virtual rows are not needed\n        // We render all in one go\n        first = 0;\n        last = this.rowCount;\n      }\n    } else {\n      // The server is handling paging and will pass an array that begins with the\n      // element at a specified offset.  first should always be 0 with external paging.\n      if (!this.externalPaging) {\n        first = Math.max(this.offset * this.pageSize, 0);\n      }\n      last = Math.min(first + this.pageSize, this.rowCount);\n    }\n\n    this.indexes = { first, last };\n  }\n\n  /**\n   * Refreshes the full Row Height cache.  Should be used\n   * when the entire row array state has changed.\n   */\n  refreshRowHeightCache(): void {\n    if (!this.scrollbarV || (this.scrollbarV && !this.virtualization)) {\n      return;\n    }\n\n    // clear the previous row height cache if already present.\n    // this is useful during sorts, filters where the state of the\n    // rows array is changed.\n    this.rowHeightsCache.clearCache();\n\n    // Initialize the tree only if there are rows inside the tree.\n    if (this.rows && this.rows.length) {\n      const rowExpansions = new Set();\n      for (const row of this.rows) {\n        if (this.getRowExpanded(row)) {\n          rowExpansions.add(row);\n        }\n      }\n\n      this.rowHeightsCache.initCache({\n        rows: this.rows,\n        rowHeight: this.rowHeight,\n        detailRowHeight: this.getDetailRowHeight,\n        externalVirtual: this.scrollbarV && this.externalPaging,\n        rowCount: this.rowCount,\n        rowIndexes: this.rowIndexes,\n        rowExpansions\n      });\n    }\n  }\n\n  /**\n   * Gets the index for the view port\n   */\n  getAdjustedViewPortIndex(): number {\n    // Capture the row index of the first row that is visible on the viewport.\n    // If the scroll bar is just below the row which is highlighted then make that as the\n    // first index.\n    const viewPortFirstRowIndex = this.indexes.first;\n\n    if (this.scrollbarV && this.virtualization) {\n      const offsetScroll = this.rowHeightsCache.query(viewPortFirstRowIndex - 1);\n      return offsetScroll <= this.offsetY ? viewPortFirstRowIndex - 1 : viewPortFirstRowIndex;\n    }\n\n    return viewPortFirstRowIndex;\n  }\n\n  /**\n   * Toggle the Expansion of the row i.e. if the row is expanded then it will\n   * collapse and vice versa.   Note that the expanded status is stored as\n   * a part of the row object itself as we have to preserve the expanded row\n   * status in case of sorting and filtering of the row set.\n   */\n  toggleRowExpansion(row: any): void {\n    // Capture the row index of the first row that is visible on the viewport.\n    const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n    const rowExpandedIdx = this.getRowExpandedIdx(row, this.rowExpansions);\n    const expanded = rowExpandedIdx > -1;\n\n    // If the detailRowHeight is auto --> only in case of non-virtualized scroll\n    if (this.scrollbarV && this.virtualization) {\n      const detailRowHeight = this.getDetailRowHeight(row) * (expanded ? -1 : 1);\n      // const idx = this.rowIndexes.get(row) || 0;\n      const idx = this.getRowIndex(row);\n      this.rowHeightsCache.update(idx, detailRowHeight);\n    }\n\n    // Update the toggled row and update thive nevere heights in the cache.\n    if (expanded) {\n      this.rowExpansions.splice(rowExpandedIdx, 1);\n    } else {\n      this.rowExpansions.push(row);\n    }\n\n    this.detailToggle.emit({\n      rows: [row],\n      currentIndex: viewPortFirstRowIndex\n    });\n  }\n\n  /**\n   * Expand/Collapse all the rows no matter what their state is.\n   */\n  toggleAllRows(expanded: boolean): void {\n    // clear prev expansions\n    this.rowExpansions = [];\n\n    // Capture the row index of the first row that is visible on the viewport.\n    const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n\n    if (expanded) {\n      for (const row of this.rows) {\n        this.rowExpansions.push(row);\n      }\n    }\n\n    if (this.scrollbarV) {\n      // Refresh the full row heights cache since every row was affected.\n      this.recalcLayout();\n    }\n\n    // Emit all rows that have been expanded.\n    this.detailToggle.emit({\n      rows: this.rows,\n      currentIndex: viewPortFirstRowIndex\n    });\n  }\n\n  /**\n   * Recalculates the table\n   */\n  recalcLayout(): void {\n    this.refreshRowHeightCache();\n    this.updateIndexes();\n    this.updateRows();\n  }\n\n  /**\n   * Tracks the column\n   */\n  columnTrackingFn(index: number, column: any): any {\n    return column.$$id;\n  }\n\n  /**\n   * Gets the row pinning group styles\n   */\n  stylesByGroup(group: string) {\n    const widths = this.columnGroupWidths;\n    const offsetX = this.offsetX;\n\n    const styles = {\n      width: `${widths[group]}px`\n    };\n\n    if (group === 'left') {\n      translateXY(styles, offsetX, 0);\n    } else if (group === 'right') {\n      const bodyWidth = parseInt(this.innerWidth + '', 0);\n      const totalDiff = widths.total - bodyWidth;\n      const offsetDiff = totalDiff - offsetX;\n      const offset = offsetDiff * -1;\n      translateXY(styles, offset, 0);\n    }\n\n    return styles;\n  }\n\n  /**\n   * Returns if the row was expanded and set default row expansion when row expansion is empty\n   */\n  getRowExpanded(row: any): boolean {\n    if (this.rowExpansions.length === 0 && this.groupExpansionDefault) {\n      for (const group of this.groupedRows) {\n        this.rowExpansions.push(group);\n      }\n    }\n\n    return this.getRowExpandedIdx(row, this.rowExpansions) > -1;\n  }\n\n  getRowExpandedIdx(row: any, expanded: any[]): number {\n    if (!expanded || !expanded.length) return -1;\n\n    const rowId = this.rowIdentity(row);\n    return expanded.findIndex(r => {\n      const id = this.rowIdentity(r);\n      return id === rowId;\n    });\n  }\n\n  /**\n   * Gets the row index given a row\n   */\n  getRowIndex(row: any): number {\n    return this.rowIndexes.get(row) || 0;\n  }\n\n  onTreeAction(row: any) {\n    this.treeAction.emit({ row });\n  }\n}\n","import {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  HostBinding,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  OnDestroy\n} from '@angular/core';\nimport { columnsByPin, columnGroupWidths, columnsByPinArr } from '../../utils/column';\nimport { SortType } from '../../types/sort.type';\nimport { SelectionType } from '../../types/selection.type';\nimport { DataTableColumnDirective } from '../columns/column.directive';\nimport { translateXY } from '../../utils/translate';\n\n@Component({\n  selector: 'datatable-header',\n  template: `\n    <div\n      orderable\n      (reorder)=\"onColumnReordered($event)\"\n      (targetChanged)=\"onTargetChanged($event)\"\n      [style.width.px]=\"_columnGroupWidths.total\"\n      class=\"datatable-header-inner\"\n    >\n      <div\n        *ngFor=\"let colGroup of _columnsByPin; trackBy: trackByGroups\"\n        [class]=\"'datatable-row-' + colGroup.type\"\n        [ngStyle]=\"_styleByGroup[colGroup.type]\"\n      >\n        <datatable-header-cell\n          *ngFor=\"let column of colGroup.columns; trackBy: columnTrackingFn\"\n          resizeable\n          [resizeEnabled]=\"column.resizeable\"\n          (resize)=\"onColumnResized($event, column)\"\n          long-press\n          [pressModel]=\"column\"\n          [pressEnabled]=\"reorderable && column.draggable\"\n          (longPressStart)=\"onLongPressStart($event)\"\n          (longPressEnd)=\"onLongPressEnd($event)\"\n          draggable\n          [dragX]=\"reorderable && column.draggable && column.dragging\"\n          [dragY]=\"false\"\n          [dragModel]=\"column\"\n          [dragEventTarget]=\"dragEventTarget\"\n          [headerHeight]=\"headerHeight\"\n          [isTarget]=\"column.isTarget\"\n          [targetMarkerTemplate]=\"targetMarkerTemplate\"\n          [targetMarkerContext]=\"column.targetMarkerContext\"\n          [column]=\"column\"\n          [sortType]=\"sortType\"\n          [sorts]=\"sorts\"\n          [selectionType]=\"selectionType\"\n          [sortAscendingIcon]=\"sortAscendingIcon\"\n          [sortDescendingIcon]=\"sortDescendingIcon\"\n          [allRowsSelected]=\"allRowsSelected\"\n          (sort)=\"onSort($event)\"\n          (select)=\"select.emit($event)\"\n          (columnContextmenu)=\"columnContextmenu.emit($event)\"\n        >\n        </datatable-header-cell>\n      </div>\n    </div>\n  `,\n  host: {\n    class: 'datatable-header'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableHeaderComponent implements OnDestroy {\n  @Input() sortAscendingIcon: any;\n  @Input() sortDescendingIcon: any;\n  @Input() scrollbarH: boolean;\n  @Input() dealsWithGroup: boolean;\n  @Input() targetMarkerTemplate: any;\n\n  targetMarkerContext: any;\n\n  @Input() set innerWidth(val: number) {\n    this._innerWidth = val;\n    setTimeout(() => {\n      if (this._columns) {\n        const colByPin = columnsByPin(this._columns);\n        this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n        this.setStylesByGroup();\n      }\n    });\n  }\n\n  get innerWidth(): number {\n    return this._innerWidth;\n  }\n\n  @Input() sorts: any[];\n  @Input() sortType: SortType;\n  @Input() allRowsSelected: boolean;\n  @Input() selectionType: SelectionType;\n  @Input() reorderable: boolean;\n\n  dragEventTarget: any;\n\n  @HostBinding('style.height')\n  @Input()\n  set headerHeight(val: any) {\n    if (val !== 'auto') {\n      this._headerHeight = `${val}px`;\n    } else {\n      this._headerHeight = val;\n    }\n  }\n\n  get headerHeight(): any {\n    return this._headerHeight;\n  }\n\n  @Input() set columns(val: any[]) {\n    this._columns = val;\n\n    const colsByPin = columnsByPin(val);\n    this._columnsByPin = columnsByPinArr(val);\n    setTimeout(() => {\n      this._columnGroupWidths = columnGroupWidths(colsByPin, val);\n      this.setStylesByGroup();\n    });\n  }\n\n  get columns(): any[] {\n    return this._columns;\n  }\n\n  @Input()\n  set offsetX(val: number) {\n    this._offsetX = val;\n    this.setStylesByGroup();\n  }\n  get offsetX() {\n    return this._offsetX;\n  }\n\n  @Output() sort: EventEmitter<any> = new EventEmitter();\n  @Output() reorder: EventEmitter<any> = new EventEmitter();\n  @Output() resize: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() columnContextmenu = new EventEmitter<{ event: MouseEvent; column: any }>(false);\n\n  _columnsByPin: any;\n  _columnGroupWidths: any = {\n    total: 100\n  };\n  _innerWidth: number;\n  _offsetX: number;\n  _columns: any[];\n  _headerHeight: string;\n  _styleByGroup: { [prop: string]: {} } = {\n    left: {},\n    center: {},\n    right: {}\n  };\n\n  private destroyed = false;\n\n  constructor(private cd: ChangeDetectorRef) {}\n\n  ngOnDestroy(): void {\n    this.destroyed = true;\n  }\n\n  onLongPressStart({ event, model }: { event: any; model: any }) {\n    model.dragging = true;\n    this.dragEventTarget = event;\n  }\n\n  onLongPressEnd({ event, model }: { event: any; model: any }) {\n    this.dragEventTarget = event;\n\n    // delay resetting so sort can be\n    // prevented if we were dragging\n    setTimeout(() => {\n      // datatable component creates copies from columns on reorder\n      // set dragging to false on new objects\n      const column = this._columns.find(c => c.$$id === model.$$id);\n      if (column) {\n        column.dragging = false;\n      }\n    }, 5);\n  }\n\n  @HostBinding('style.width')\n  get headerWidth(): string {\n    if (this.scrollbarH) {\n      return this.innerWidth + 'px';\n    }\n\n    return '100%';\n  }\n\n  trackByGroups(index: number, colGroup: any): any {\n    return colGroup.type;\n  }\n\n  columnTrackingFn(index: number, column: any): any {\n    return column.$$id;\n  }\n\n  onColumnResized(width: number, column: DataTableColumnDirective): void {\n    if (width <= column.minWidth) {\n      width = column.minWidth;\n    } else if (width >= column.maxWidth) {\n      width = column.maxWidth;\n    }\n\n    this.resize.emit({\n      column,\n      prevValue: column.width,\n      newValue: width\n    });\n  }\n\n  onColumnReordered({ prevIndex, newIndex, model }: any): void {\n    const column = this.getColumn(newIndex);\n    column.isTarget = false;\n    column.targetMarkerContext = undefined;\n    this.reorder.emit({\n      column: model,\n      prevValue: prevIndex,\n      newValue: newIndex\n    });\n  }\n\n  onTargetChanged({ prevIndex, newIndex, initialIndex }: any): void {\n    if (prevIndex || prevIndex === 0) {\n      const oldColumn = this.getColumn(prevIndex);\n      oldColumn.isTarget = false;\n      oldColumn.targetMarkerContext = undefined;\n    }\n    if (newIndex || newIndex === 0) {\n      const newColumn = this.getColumn(newIndex);\n      newColumn.isTarget = true;\n\n      if (initialIndex !== newIndex) {\n        newColumn.targetMarkerContext = {\n          class: 'targetMarker '.concat(initialIndex > newIndex ? 'dragFromRight' : 'dragFromLeft')\n        };\n      }\n    }\n  }\n\n  getColumn(index: number): any {\n    const leftColumnCount = this._columnsByPin[0].columns.length;\n    if (index < leftColumnCount) {\n      return this._columnsByPin[0].columns[index];\n    }\n\n    const centerColumnCount = this._columnsByPin[1].columns.length;\n    if (index < leftColumnCount + centerColumnCount) {\n      return this._columnsByPin[1].columns[index - leftColumnCount];\n    }\n\n    return this._columnsByPin[2].columns[index - leftColumnCount - centerColumnCount];\n  }\n\n  onSort({ column, prevValue, newValue }: any): void {\n    // if we are dragging don't sort!\n    if (column.dragging) {\n      return;\n    }\n\n    const sorts = this.calcNewSorts(column, prevValue, newValue);\n    this.sort.emit({\n      sorts,\n      column,\n      prevValue,\n      newValue\n    });\n  }\n\n  calcNewSorts(column: any, prevValue: number, newValue: number): any[] {\n    let idx = 0;\n\n    if (!this.sorts) {\n      this.sorts = [];\n    }\n\n    const sorts = this.sorts.map((s, i) => {\n      s = { ...s };\n      if (s.prop === column.prop) {\n        idx = i;\n      }\n      return s;\n    });\n\n    if (newValue === undefined) {\n      sorts.splice(idx, 1);\n    } else if (prevValue) {\n      sorts[idx].dir = newValue;\n    } else {\n      if (this.sortType === SortType.single) {\n        sorts.splice(0, this.sorts.length);\n      }\n\n      sorts.push({ dir: newValue, prop: column.prop });\n    }\n\n    return sorts;\n  }\n\n  setStylesByGroup() {\n    this._styleByGroup.left = this.calcStylesByGroup('left');\n    this._styleByGroup.center = this.calcStylesByGroup('center');\n    this._styleByGroup.right = this.calcStylesByGroup('right');\n    if (!this.destroyed) {\n      this.cd.detectChanges();\n    }\n  }\n\n  calcStylesByGroup(group: string): any {\n    const widths = this._columnGroupWidths;\n    const offsetX = this.offsetX;\n\n    const styles = {\n      width: `${widths[group]}px`\n    };\n\n    if (group === 'center') {\n      translateXY(styles, offsetX * -1, 0);\n    } else if (group === 'right') {\n      const totalDiff = widths.total - this.innerWidth;\n      const offset = totalDiff * -1;\n      translateXY(styles, offset, 0);\n    }\n\n    return styles;\n  }\n}\n","/**\n * Throttle a function\n */\nexport function throttle(func: any, wait: number, options?: any) {\n  options = options || {};\n  let context: any;\n  let args: any;\n  let result: any;\n  let timeout: any = null;\n  let previous = 0;\n\n  function later() {\n    previous = options.leading === false ? 0 : +new Date();\n    timeout = null;\n    result = func.apply(context, args);\n  }\n\n  return function (this: any) {\n    const now = +new Date();\n\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n\n    const remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n}\n\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\nexport function throttleable(duration: number, options?: any) {\n  return function innerDecorator(target: any, key: PropertyKey, descriptor: PropertyDescriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: throttle(descriptor.value, duration, options)\n        });\n\n        return this[key];\n      }\n    };\n  };\n}\n","import { columnsByPin, columnsTotalWidth } from './column';\n\n/**\n * Calculates the Total Flex Grow\n */\nexport function getTotalFlexGrow(columns: any[]) {\n  let totalFlexGrow = 0;\n\n  for (const c of columns) {\n    totalFlexGrow += c.flexGrow || 0;\n  }\n\n  return totalFlexGrow;\n}\n\n/**\n * Adjusts the column widths.\n * Inspired by: https://github.com/facebook/fixed-data-table/blob/master/src/FixedDataTableWidthHelper.js\n */\nexport function adjustColumnWidths(allColumns: any, expectedWidth: any) {\n  const columnsWidth = columnsTotalWidth(allColumns);\n  const totalFlexGrow = getTotalFlexGrow(allColumns);\n  const colsByGroup = columnsByPin(allColumns);\n\n  if (columnsWidth !== expectedWidth) {\n    scaleColumns(colsByGroup, expectedWidth, totalFlexGrow);\n  }\n}\n\n/**\n * Resizes columns based on the flexGrow property, while respecting manually set widths\n */\nfunction scaleColumns(colsByGroup: any, maxWidth: any, totalFlexGrow: any) {\n  // calculate total width and flexgrow points for coulumns that can be resized\n  for (const attr in colsByGroup) {\n    for (const column of colsByGroup[attr]) {\n      if (!column.canAutoResize) {\n        maxWidth -= column.width;\n        totalFlexGrow -= column.flexGrow ? column.flexGrow : 0;\n      } else {\n        column.width = 0;\n      }\n    }\n  }\n\n  const hasMinWidth = {};\n  let remainingWidth = maxWidth;\n\n  // resize columns until no width is left to be distributed\n  do {\n    const widthPerFlexPoint = remainingWidth / totalFlexGrow;\n    remainingWidth = 0;\n\n    for (const attr in colsByGroup) {\n      for (const column of colsByGroup[attr]) {\n        // if the column can be resize and it hasn't reached its minimum width yet\n        if (column.canAutoResize && !hasMinWidth[column.prop]) {\n          const newWidth = column.width + column.flexGrow * widthPerFlexPoint;\n          if (column.minWidth !== undefined && newWidth < column.minWidth) {\n            remainingWidth += newWidth - column.minWidth;\n            column.width = column.minWidth;\n            hasMinWidth[column.prop] = true;\n          } else {\n            column.width = newWidth;\n          }\n        }\n      }\n    }\n  } while (remainingWidth !== 0);\n}\n\n/**\n * Forces the width of the columns to\n * distribute equally but overflowing when necessary\n *\n * Rules:\n *\n *  - If combined withs are less than the total width of the grid,\n *    proportion the widths given the min / max / normal widths to fill the width.\n *\n *  - If the combined widths, exceed the total width of the grid,\n *    use the standard widths.\n *\n *  - If a column is resized, it should always use that width\n *\n *  - The proportional widths should never fall below min size if specified.\n *\n *  - If the grid starts off small but then becomes greater than the size ( + / - )\n *    the width should use the original width; not the newly proportioned widths.\n */\nexport function forceFillColumnWidths(\n  allColumns: any[],\n  expectedWidth: number,\n  startIdx: number,\n  allowBleed: boolean,\n  defaultColWidth: number = 300\n) {\n  const columnsToResize = allColumns.slice(startIdx + 1, allColumns.length).filter(c => {\n    return c.canAutoResize !== false;\n  });\n\n  for (const column of columnsToResize) {\n    if (!column.$$oldWidth) {\n      column.$$oldWidth = column.width;\n    }\n  }\n\n  let additionWidthPerColumn = 0;\n  let exceedsWindow = false;\n  let contentWidth = getContentWidth(allColumns, defaultColWidth);\n  let remainingWidth = expectedWidth - contentWidth;\n  const columnsProcessed: any[] = [];\n  const remainingWidthLimit = 1; // when to stop\n\n  // This loop takes care of the\n  do {\n    additionWidthPerColumn = remainingWidth / columnsToResize.length;\n    exceedsWindow = contentWidth >= expectedWidth;\n\n    for (const column of columnsToResize) {\n      if (exceedsWindow && allowBleed) {\n        column.width = column.$$oldWidth || column.width || defaultColWidth;\n      } else {\n        const newSize = (column.width || defaultColWidth) + additionWidthPerColumn;\n\n        if (column.minWidth && newSize < column.minWidth) {\n          column.width = column.minWidth;\n          columnsProcessed.push(column);\n        } else if (column.maxWidth && newSize > column.maxWidth) {\n          column.width = column.maxWidth;\n          columnsProcessed.push(column);\n        } else {\n          column.width = newSize;\n        }\n      }\n\n      column.width = Math.max(0, column.width);\n    }\n\n    contentWidth = getContentWidth(allColumns);\n    remainingWidth = expectedWidth - contentWidth;\n    removeProcessedColumns(columnsToResize, columnsProcessed);\n  } while (remainingWidth > remainingWidthLimit && columnsToResize.length !== 0);\n}\n\n/**\n * Remove the processed columns from the current active columns.\n */\nfunction removeProcessedColumns(columnsToResize: any[], columnsProcessed: any[]) {\n  for (const column of columnsProcessed) {\n    const index = columnsToResize.indexOf(column);\n    columnsToResize.splice(index, 1);\n  }\n}\n\n/**\n * Gets the width of the columns\n */\nfunction getContentWidth(allColumns: any, defaultColWidth: number = 300): number {\n  let contentWidth = 0;\n\n  for (const column of allColumns) {\n    contentWidth += column.width || defaultColWidth;\n  }\n\n  return contentWidth;\n}\n","export enum SortDirection {\n  asc = 'asc',\n  desc = 'desc'\n}\n","import { getterForProp } from './column-prop-getters';\nimport { SortType } from '../types/sort.type';\nimport { SortDirection } from '../types/sort-direction.type';\nimport { SortPropDir } from '../types/sort-prop-dir.type';\n/**\n * Gets the next sort direction\n */\nexport function nextSortDir(sortType: SortType, current: SortDirection): SortDirection | undefined {\n  if (sortType === SortType.single) {\n    if (current === SortDirection.asc) {\n      return SortDirection.desc;\n    } else {\n      return SortDirection.asc;\n    }\n  } else {\n    if (!current) {\n      return SortDirection.asc;\n    } else if (current === SortDirection.asc) {\n      return SortDirection.desc;\n    } else if (current === SortDirection.desc) {\n      return undefined;\n    }\n    // avoid TS7030: Not all code paths return a value.\n    return undefined;\n  }\n}\n\n/**\n * Adapted from fueld-ui on 6/216\n * https://github.com/FuelInteractive/fuel-ui/tree/master/src/pipes/OrderBy\n */\nexport function orderByComparator(a: any, b: any): number {\n  if (a === null || typeof a === 'undefined') a = 0;\n  if (b === null || typeof b === 'undefined') b = 0;\n  if (a instanceof Date && b instanceof Date) {\n    if (a < b) return -1;\n    if (a > b) return 1;\n  } else if (isNaN(parseFloat(a)) || !isFinite(a) || isNaN(parseFloat(b)) || !isFinite(b)) {\n    // Convert to string in case of a=0 or b=0\n    a = String(a);\n    b = String(b);\n    // Isn't a number so lowercase the string to properly compare\n    if (a.toLowerCase() < b.toLowerCase()) return -1;\n    if (a.toLowerCase() > b.toLowerCase()) return 1;\n  } else {\n    // Parse strings as numbers to compare properly\n    if (parseFloat(a) < parseFloat(b)) return -1;\n    if (parseFloat(a) > parseFloat(b)) return 1;\n  }\n\n  // equal each other\n  return 0;\n}\n\n/**\n * creates a shallow copy of the `rows` input and returns the sorted copy. this function\n * does not sort the `rows` argument in place\n */\nexport function sortRows(rows: any[], columns: any[], dirs: SortPropDir[]): any[] {\n  if (!rows) return [];\n  if (!dirs || !dirs.length || !columns) return [...rows];\n\n  /**\n   * record the row ordering of results from prior sort operations (if applicable)\n   * this is necessary to guarantee stable sorting behavior\n   */\n  const rowToIndexMap = new Map<any, number>();\n  rows.forEach((row, index) => rowToIndexMap.set(row, index));\n\n  const temp = [...rows];\n  const cols = columns.reduce((obj, col) => {\n    if (col.comparator && typeof col.comparator === 'function') {\n      obj[col.prop] = col.comparator;\n    }\n    return obj;\n  }, {});\n\n  // cache valueGetter and compareFn so that they\n  // do not need to be looked-up in the sort function body\n  const cachedDirs = dirs.map(dir => {\n    const prop = dir.prop;\n    return {\n      prop,\n      dir: dir.dir,\n      valueGetter: getterForProp(prop),\n      compareFn: cols[prop] || orderByComparator\n    };\n  });\n\n  return temp.sort(function (rowA: any, rowB: any) {\n    for (const cachedDir of cachedDirs) {\n      // Get property and valuegetters for column to be sorted\n      const { prop, valueGetter } = cachedDir;\n      // Get A and B cell values from rows based on properties of the columns\n      const propA = valueGetter(rowA, prop);\n      const propB = valueGetter(rowB, prop);\n\n      // Compare function gets five parameters:\n      // Two cell values to be compared as propA and propB\n      // Two rows corresponding to the cells as rowA and rowB\n      // Direction of the sort for this column as SortDirection\n      // Compare can be a standard JS comparison function (a,b) => -1|0|1\n      // as additional parameters are silently ignored. The whole row and sort\n      // direction enable more complex sort logic.\n      const comparison =\n        cachedDir.dir !== SortDirection.desc\n          ? cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir)\n          : -cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir);\n\n      // Don't return 0 yet in case of needing to sort by next property\n      if (comparison !== 0) return comparison;\n    }\n\n    if (!(rowToIndexMap.has(rowA) && rowToIndexMap.has(rowB))) return 0;\n\n    /**\n     * all else being equal, preserve original order of the rows (stable sort)\n     */\n    return rowToIndexMap.get(rowA) < rowToIndexMap.get(rowB) ? -1 : 1;\n  });\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ElementRef,\n  EventEmitter,\n  ViewChild,\n  HostListener,\n  ContentChildren,\n  OnInit,\n  QueryList,\n  AfterViewInit,\n  HostBinding,\n  ContentChild,\n  DoCheck,\n  KeyValueDiffers,\n  KeyValueDiffer,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  SkipSelf,\n  Optional,\n  Inject\n} from '@angular/core';\n\nimport { DatatableGroupHeaderDirective } from './body/body-group-header.directive';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { INgxDatatableConfig } from '../ngx-datatable.module';\nimport { groupRowsByParents, optionalGetterForProp } from '../utils/tree';\nimport { TableColumn } from '../types/table-column.type';\nimport { setColumnDefaults, translateTemplates } from '../utils/column-helper';\nimport { ColumnMode } from '../types/column-mode.type';\nimport { SelectionType } from '../types/selection.type';\nimport { SortType } from '../types/sort.type';\nimport { ContextmenuType } from '../types/contextmenu.type';\nimport { DataTableColumnDirective } from './columns/column.directive';\nimport { DatatableRowDetailDirective } from './row-detail/row-detail.directive';\nimport { DatatableFooterDirective } from './footer/footer.directive';\nimport { DataTableBodyComponent } from './body/body.component';\nimport { DataTableHeaderComponent } from './header/header.component';\nimport { ScrollbarHelper } from '../services/scrollbar-helper.service';\nimport { ColumnChangesService } from '../services/column-changes.service';\nimport { DimensionsHelper } from '../services/dimensions-helper.service';\nimport { throttleable } from '../utils/throttle';\nimport { forceFillColumnWidths, adjustColumnWidths } from '../utils/math';\nimport { sortRows } from '../utils/sort';\n\n@Component({\n  selector: 'ngx-datatable',\n  templateUrl: './datatable.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datatable.component.scss'],\n  host: {\n    class: 'ngx-datatable'\n  }\n})\nexport class DatatableComponent implements OnInit, DoCheck, AfterViewInit {\n  /**\n   * Template for the target marker of drag target columns.\n   */\n  @Input() targetMarkerTemplate: any;\n\n  /**\n   * Rows that are displayed in the table.\n   */\n  @Input() set rows(val: any) {\n    this._rows = val;\n\n    if (val) {\n      this._internalRows = [...val];\n    }\n\n    // auto sort on new updates\n    if (!this.externalSorting) {\n      this.sortInternalRows();\n    }\n\n    // auto group by parent on new update\n    this._internalRows = groupRowsByParents(\n      this._internalRows,\n      optionalGetterForProp(this.treeFromRelation),\n      optionalGetterForProp(this.treeToRelation)\n    );\n\n    // recalculate sizes/etc\n    this.recalculate();\n\n    if (this._rows && this._groupRowsBy) {\n      // If a column has been specified in _groupRowsBy created a new array with the data grouped by that row\n      this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n    }\n\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Gets the rows.\n   */\n  get rows(): any {\n    return this._rows;\n  }\n\n  /**\n   * This attribute allows the user to set the name of the column to group the data with\n   */\n  @Input() set groupRowsBy(val: string) {\n    if (val) {\n      this._groupRowsBy = val;\n      if (this._rows && this._groupRowsBy) {\n        // cretes a new array with the data grouped\n        this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n      }\n    }\n  }\n\n  get groupRowsBy() {\n    return this._groupRowsBy;\n  }\n\n  /**\n   * This attribute allows the user to set a grouped array in the following format:\n   *  [\n   *    {groupid=1} [\n   *      {id=1 name=\"test1\"},\n   *      {id=2 name=\"test2\"},\n   *      {id=3 name=\"test3\"}\n   *    ]},\n   *    {groupid=2>[\n   *      {id=4 name=\"test4\"},\n   *      {id=5 name=\"test5\"},\n   *      {id=6 name=\"test6\"}\n   *    ]}\n   *  ]\n   */\n  @Input() groupedRows: any[];\n\n  /**\n   * Columns to be displayed.\n   */\n  @Input() set columns(val: TableColumn[]) {\n    if (val) {\n      this._internalColumns = [...val];\n      setColumnDefaults(this._internalColumns);\n      this.recalculateColumns();\n    }\n\n    this._columns = val;\n  }\n\n  /**\n   * Get the columns.\n   */\n  get columns(): TableColumn[] {\n    return this._columns;\n  }\n\n  /**\n   * List of row objects that should be\n   * represented as selected in the grid.\n   * Default value: `[]`\n   */\n  @Input() selected: any[] = [];\n\n  /**\n   * Enable vertical scrollbars\n   */\n  @Input() scrollbarV: boolean = false;\n\n  /**\n   * Enable horz scrollbars\n   */\n  @Input() scrollbarH: boolean = false;\n\n  /**\n   * The row height; which is necessary\n   * to calculate the height for the lazy rendering.\n   */\n  @Input() rowHeight: number | 'auto' | ((row?: any) => number) = 30;\n\n  /**\n   * Type of column width distribution formula.\n   * Example: flex, force, standard\n   */\n  @Input() columnMode: ColumnMode | keyof typeof ColumnMode = ColumnMode.standard;\n\n  /**\n   * The minimum header height in pixels.\n   * Pass a falsey for no header\n   */\n  @Input() headerHeight: number = 30;\n\n  /**\n   * The minimum footer height in pixels.\n   * Pass falsey for no footer\n   */\n  @Input() footerHeight: number = 0;\n\n  /**\n   * If the table should use external paging\n   * otherwise its assumed that all data is preloaded.\n   */\n  @Input() externalPaging: boolean = false;\n\n  /**\n   * If the table should use external sorting or\n   * the built-in basic sorting.\n   */\n  @Input() externalSorting: boolean = false;\n\n  /**\n   * The page size to be shown.\n   * Default value: `undefined`\n   */\n  @Input() set limit(val: number | undefined) {\n    this._limit = val;\n\n    // recalculate sizes/etc\n    this.recalculate();\n  }\n\n  /**\n   * Gets the limit.\n   */\n  get limit(): number | undefined {\n    return this._limit;\n  }\n\n  /**\n   * The total count of all rows.\n   * Default value: `0`\n   */\n  @Input() set count(val: number) {\n    this._count = val;\n\n    // recalculate sizes/etc\n    this.recalculate();\n  }\n\n  /**\n   * Gets the count.\n   */\n  get count(): number {\n    return this._count;\n  }\n\n  /**\n   * The current offset ( page - 1 ) shown.\n   * Default value: `0`\n   */\n  @Input() set offset(val: number) {\n    this._offset = val;\n  }\n  get offset(): number {\n    return Math.max(Math.min(this._offset, Math.ceil(this.rowCount / this.pageSize) - 1), 0);\n  }\n\n  /**\n   * Show the linear loading bar.\n   * Default value: `false`\n   */\n  @Input() loadingIndicator: boolean = false;\n\n  /**\n   * Type of row selection. Options are:\n   *\n   *  - `single`\n   *  - `multi`\n   *  - `checkbox`\n   *  - `multiClick`\n   *  - `cell`\n   *\n   * For no selection pass a `falsey`.\n   * Default value: `undefined`\n   */\n  @Input() selectionType: SelectionType;\n\n  /**\n   * Enable/Disable ability to re-order columns\n   * by dragging them.\n   */\n  @Input() reorderable: boolean = true;\n\n  /**\n   * Swap columns on re-order columns or\n   * move them.\n   */\n  @Input() swapColumns: boolean = true;\n\n  /**\n   * The type of sorting\n   */\n  @Input() sortType: SortType = SortType.single;\n\n  /**\n   * Array of sorted columns by property and type.\n   * Default value: `[]`\n   */\n  @Input() sorts: any[] = [];\n\n  /**\n   * Css class overrides\n   */\n  @Input() cssClasses: any = {\n    sortAscending: 'datatable-icon-up',\n    sortDescending: 'datatable-icon-down',\n    pagerLeftArrow: 'datatable-icon-left',\n    pagerRightArrow: 'datatable-icon-right',\n    pagerPrevious: 'datatable-icon-prev',\n    pagerNext: 'datatable-icon-skip'\n  };\n\n  /**\n   * Message overrides for localization\n   *\n   * emptyMessage     [default] = 'No data to display'\n   * totalMessage     [default] = 'total'\n   * selectedMessage  [default] = 'selected'\n   */\n  @Input() messages: any = {\n    // Message to show when array is presented\n    // but contains no values\n    emptyMessage: 'No data to display',\n\n    // Footer total message\n    totalMessage: 'total',\n\n    // Footer selected message\n    selectedMessage: 'selected'\n  };\n\n  /**\n   * Row specific classes.\n   * Similar implementation to ngClass.\n   *\n   *  [rowClass]=\"'first second'\"\n   *  [rowClass]=\"{ 'first': true, 'second': true, 'third': false }\"\n   */\n  @Input() rowClass: any;\n\n  /**\n   * A boolean/function you can use to check whether you want\n   * to select a particular row based on a criteria. Example:\n   *\n   *    (selection) => {\n   *      return selection !== 'Ethel Price';\n   *    }\n   */\n  @Input() selectCheck: any;\n\n  /**\n   * A function you can use to check whether you want\n   * to show the checkbox for a particular row based on a criteria. Example:\n   *\n   *    (row, column, value) => {\n   *      return row.name !== 'Ethel Price';\n   *    }\n   */\n  @Input() displayCheck: (row: any, column?: any, value?: any) => boolean;\n\n  /**\n   * A boolean you can use to set the detault behaviour of rows and groups\n   * whether they will start expanded or not. If ommited the default is NOT expanded.\n   *\n   */\n  @Input() groupExpansionDefault: boolean = false;\n\n  /**\n   * Property to which you can use for custom tracking of rows.\n   * Example: 'name'\n   */\n  @Input() trackByProp: string;\n\n  /**\n   * Property to which you can use for determining select all\n   * rows on current page or not.\n   *\n   * @memberOf DatatableComponent\n   */\n  @Input() selectAllRowsOnPage = false;\n\n  /**\n   * A flag for row virtualization on / off\n   */\n  @Input() virtualization: boolean = true;\n\n  /**\n   * Tree from relation\n   */\n  @Input() treeFromRelation: string;\n\n  /**\n   * Tree to relation\n   */\n  @Input() treeToRelation: string;\n\n  /**\n   * A flag for switching summary row on / off\n   */\n  @Input() summaryRow: boolean = false;\n\n  /**\n   * A height of summary row\n   */\n  @Input() summaryHeight: number = 30;\n\n  /**\n   * A property holds a summary row position: top/bottom\n   */\n  @Input() summaryPosition: string = 'top';\n\n  /**\n   * Body was scrolled typically in a `scrollbarV:true` scenario.\n   */\n  @Output() scroll: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * A cell or row was focused via keyboard or mouse click.\n   */\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * A cell or row was selected.\n   */\n  @Output() select: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Column sort was invoked.\n   */\n  @Output() sort: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * The table was paged either triggered by the pager or the body scroll.\n   */\n  @Output() page: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Columns were re-ordered.\n   */\n  @Output() reorder: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Column was resized.\n   */\n  @Output() resize: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * The context menu was invoked on the table.\n   * type indicates whether the header or the body was clicked.\n   * content contains either the column or the row that was clicked.\n   */\n  @Output() tableContextmenu = new EventEmitter<{ event: MouseEvent; type: ContextmenuType; content: any }>(false);\n\n  /**\n   * A row was expanded ot collapsed for tree\n   */\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * CSS class applied if the header height if fixed height.\n   */\n  @HostBinding('class.fixed-header')\n  get isFixedHeader(): boolean {\n    const headerHeight: number | string = this.headerHeight;\n    return typeof headerHeight === 'string' ? <string>headerHeight !== 'auto' : true;\n  }\n\n  /**\n   * CSS class applied to the root element if\n   * the row heights are fixed heights.\n   */\n  @HostBinding('class.fixed-row')\n  get isFixedRow(): boolean {\n    return this.rowHeight !== 'auto';\n  }\n\n  /**\n   * CSS class applied to root element if\n   * vertical scrolling is enabled.\n   */\n  @HostBinding('class.scroll-vertical')\n  get isVertScroll(): boolean {\n    return this.scrollbarV;\n  }\n\n  /**\n   * CSS class applied to root element if\n   * virtualization is enabled.\n   */\n  @HostBinding('class.virtualized')\n  get isVirtualized(): boolean {\n    return this.virtualization;\n  }\n\n  /**\n   * CSS class applied to the root element\n   * if the horziontal scrolling is enabled.\n   */\n  @HostBinding('class.scroll-horz')\n  get isHorScroll(): boolean {\n    return this.scrollbarH;\n  }\n\n  /**\n   * CSS class applied to root element is selectable.\n   */\n  @HostBinding('class.selectable')\n  get isSelectable(): boolean {\n    return this.selectionType !== undefined;\n  }\n\n  /**\n   * CSS class applied to root is checkbox selection.\n   */\n  @HostBinding('class.checkbox-selection')\n  get isCheckboxSelection(): boolean {\n    return this.selectionType === SelectionType.checkbox;\n  }\n\n  /**\n   * CSS class applied to root if cell selection.\n   */\n  @HostBinding('class.cell-selection')\n  get isCellSelection(): boolean {\n    return this.selectionType === SelectionType.cell;\n  }\n\n  /**\n   * CSS class applied to root if single select.\n   */\n  @HostBinding('class.single-selection')\n  get isSingleSelection(): boolean {\n    return this.selectionType === SelectionType.single;\n  }\n\n  /**\n   * CSS class added to root element if mulit select\n   */\n  @HostBinding('class.multi-selection')\n  get isMultiSelection(): boolean {\n    return this.selectionType === SelectionType.multi;\n  }\n\n  /**\n   * CSS class added to root element if mulit click select\n   */\n  @HostBinding('class.multi-click-selection')\n  get isMultiClickSelection(): boolean {\n    return this.selectionType === SelectionType.multiClick;\n  }\n\n  /**\n   * Column templates gathered from `ContentChildren`\n   * if described in your markup.\n   */\n  @ContentChildren(DataTableColumnDirective)\n  set columnTemplates(val: QueryList<DataTableColumnDirective>) {\n    this._columnTemplates = val;\n    this.translateColumns(val);\n  }\n\n  /**\n   * Returns the column templates.\n   */\n  get columnTemplates(): QueryList<DataTableColumnDirective> {\n    return this._columnTemplates;\n  }\n\n  /**\n   * Row Detail templates gathered from the ContentChild\n   */\n  @ContentChild(DatatableRowDetailDirective)\n  rowDetail: DatatableRowDetailDirective;\n\n  /**\n   * Group Header templates gathered from the ContentChild\n   */\n  @ContentChild(DatatableGroupHeaderDirective)\n  groupHeader: DatatableGroupHeaderDirective;\n\n  /**\n   * Footer template gathered from the ContentChild\n   */\n  @ContentChild(DatatableFooterDirective)\n  footer: DatatableFooterDirective;\n\n  /**\n   * Reference to the body component for manually\n   * invoking functions on the body.\n   */\n  @ViewChild(DataTableBodyComponent)\n  bodyComponent: DataTableBodyComponent;\n\n  /**\n   * Reference to the header component for manually\n   * invoking functions on the header.\n   *\n   * @memberOf DatatableComponent\n   */\n  @ViewChild(DataTableHeaderComponent)\n  headerComponent: DataTableHeaderComponent;\n\n  /**\n   * Returns if all rows are selected.\n   */\n  get allRowsSelected(): boolean {\n    let allRowsSelected = this.rows && this.selected && this.selected.length === this.rows.length;\n\n    if (this.bodyComponent && this.selectAllRowsOnPage) {\n      const indexes = this.bodyComponent.indexes;\n      const rowsOnPage = indexes.last - indexes.first;\n      allRowsSelected = this.selected.length === rowsOnPage;\n    }\n\n    return this.selected && this.rows && this.rows.length !== 0 && allRowsSelected;\n  }\n\n  element: HTMLElement;\n  _innerWidth: number;\n  pageSize: number;\n  bodyHeight: number;\n  rowCount: number = 0;\n  rowDiffer: KeyValueDiffer<{}, {}>;\n\n  _offsetX = new BehaviorSubject(0);\n  _limit: number | undefined;\n  _count: number = 0;\n  _offset: number = 0;\n  _rows: any[];\n  _groupRowsBy: string;\n  _internalRows: any[];\n  _internalColumns: TableColumn[];\n  _columns: TableColumn[];\n  _columnTemplates: QueryList<DataTableColumnDirective>;\n  _subscriptions: Subscription[] = [];\n\n  constructor(\n    @SkipSelf() private scrollbarHelper: ScrollbarHelper,\n    @SkipSelf() private dimensionsHelper: DimensionsHelper,\n    private cd: ChangeDetectorRef,\n    element: ElementRef,\n    differs: KeyValueDiffers,\n    private columnChangesService: ColumnChangesService,\n    @Optional() @Inject('configuration') private configuration: INgxDatatableConfig\n  ) {\n    // get ref to elm for measuring\n    this.element = element.nativeElement;\n    this.rowDiffer = differs.find({}).create();\n\n    // apply global settings from Module.forRoot\n    if (this.configuration && this.configuration.messages) {\n      this.messages = { ...this.configuration.messages };\n    }\n  }\n\n  /**\n   * Lifecycle hook that is called after data-bound\n   * properties of a directive are initialized.\n   */\n  ngOnInit(): void {\n    // need to call this immediatly to size\n    // if the table is hidden the visibility\n    // listener will invoke this itself upon show\n    this.recalculate();\n  }\n\n  /**\n   * Lifecycle hook that is called after a component's\n   * view has been fully initialized.\n   */\n  ngAfterViewInit(): void {\n    if (!this.externalSorting) {\n      this.sortInternalRows();\n    }\n\n    // this has to be done to prevent the change detection\n    // tree from freaking out because we are readjusting\n    if (typeof requestAnimationFrame === 'undefined') {\n      return;\n    }\n\n    requestAnimationFrame(() => {\n      this.recalculate();\n\n      // emit page for virtual server-side kickoff\n      if (this.externalPaging && this.scrollbarV) {\n        this.page.emit({\n          count: this.count,\n          pageSize: this.pageSize,\n          limit: this.limit,\n          offset: 0\n        });\n      }\n    });\n  }\n\n  /**\n   * Lifecycle hook that is called after a component's\n   * content has been fully initialized.\n   */\n  ngAfterContentInit() {\n    this.columnTemplates.changes.subscribe(v => this.translateColumns(v));\n    this.listenForColumnInputChanges();\n  }\n\n  /**\n   * This will be used when displaying or selecting rows.\n   * when tracking/comparing them, we'll use the value of this fn,\n   *\n   * (`fn(x) === fn(y)` instead of `x === y`)\n   */\n  @Input() rowIdentity: (x: any) => any = (x: any) => {\n    if (this._groupRowsBy) {\n      // each group in groupedRows are stored as {key, value: [rows]},\n      // where key is the groupRowsBy index\n      return x.key;\n    } else {\n      return x;\n    }\n  };\n\n  /**\n   * Translates the templates to the column objects\n   */\n  translateColumns(val: any) {\n    if (val) {\n      const arr = val.toArray();\n      if (arr.length) {\n        this._internalColumns = translateTemplates(arr);\n        setColumnDefaults(this._internalColumns);\n        this.recalculateColumns();\n        this.sortInternalRows();\n        this.cd.markForCheck();\n      }\n    }\n  }\n\n  /**\n   * Creates a map with the data grouped by the user choice of grouping index\n   *\n   * @param originalArray the original array passed via parameter\n   * @param groupByIndex  the index of the column to group the data by\n   */\n  groupArrayBy(originalArray: any, groupBy: any) {\n    // create a map to hold groups with their corresponding results\n    const map = new Map();\n    let i: number = 0;\n\n    originalArray.forEach((item: any) => {\n      const key = item[groupBy];\n      if (!map.has(key)) {\n        map.set(key, [item]);\n      } else {\n        map.get(key).push(item);\n      }\n      i++;\n    });\n\n    const addGroup = (key: any, value: any) => {\n      return { key, value };\n    };\n\n    // convert map back to a simple array of objects\n    return Array.from(map, x => addGroup(x[0], x[1]));\n  }\n\n  /*\n   * Lifecycle hook that is called when Angular dirty checks a directive.\n   */\n  ngDoCheck(): void {\n    if (this.rowDiffer.diff(this.rows)) {\n      if (!this.externalSorting) {\n        this.sortInternalRows();\n      } else {\n        this._internalRows = [...this.rows];\n      }\n\n      // auto group by parent on new update\n      this._internalRows = groupRowsByParents(\n        this._internalRows,\n        optionalGetterForProp(this.treeFromRelation),\n        optionalGetterForProp(this.treeToRelation)\n      );\n\n      this.recalculatePages();\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * Recalc's the sizes of the grid.\n   *\n   * Updated automatically on changes to:\n   *\n   *  - Columns\n   *  - Rows\n   *  - Paging related\n   *\n   * Also can be manually invoked or upon window resize.\n   */\n  recalculate(): void {\n    this.recalculateDims();\n    this.recalculateColumns();\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Window resize handler to update sizes.\n   */\n  @HostListener('window:resize')\n  @throttleable(5)\n  onWindowResize(): void {\n    this.recalculate();\n  }\n\n  /**\n   * Recalulcates the column widths based on column width\n   * distribution mode and scrollbar offsets.\n   */\n  recalculateColumns(\n    columns: any[] = this._internalColumns,\n    forceIdx: number = -1,\n    allowBleed: boolean = this.scrollbarH\n  ): any[] | undefined {\n    if (!columns) return undefined;\n\n    let width = this._innerWidth;\n    if (this.scrollbarV) {\n      width = width - this.scrollbarHelper.width;\n    }\n\n    if (this.columnMode === ColumnMode.force) {\n      forceFillColumnWidths(columns, width, forceIdx, allowBleed);\n    } else if (this.columnMode === ColumnMode.flex) {\n      adjustColumnWidths(columns, width);\n    }\n\n    return columns;\n  }\n\n  /**\n   * Recalculates the dimensions of the table size.\n   * Internally calls the page size and row count calcs too.\n   *\n   */\n  recalculateDims(): void {\n    const dims = this.dimensionsHelper.getDimensions(this.element);\n    this._innerWidth = Math.floor(dims.width);\n\n    if (this.scrollbarV) {\n      let height = dims.height;\n      if (this.headerHeight) height = height - this.headerHeight;\n      if (this.footerHeight) height = height - this.footerHeight;\n      this.bodyHeight = height;\n    }\n\n    this.recalculatePages();\n  }\n\n  /**\n   * Recalculates the pages after a update.\n   */\n  recalculatePages(): void {\n    this.pageSize = this.calcPageSize();\n    this.rowCount = this.calcRowCount();\n  }\n\n  /**\n   * Body triggered a page event.\n   */\n  onBodyPage({ offset }: any): void {\n    // Avoid pagination caming from body events like scroll when the table\n    // has no virtualization and the external paging is enable.\n    // This means, let's the developer handle pagination by my him(her) self\n    if (this.externalPaging && !this.virtualization) {\n      return;\n    }\n\n    this.offset = offset;\n\n    this.page.emit({\n      count: this.count,\n      pageSize: this.pageSize,\n      limit: this.limit,\n      offset: this.offset\n    });\n  }\n\n  /**\n   * The body triggered a scroll event.\n   */\n  onBodyScroll(event: MouseEvent): void {\n    this._offsetX.next(event.offsetX);\n    this.scroll.emit(event);\n    this.cd.detectChanges();\n  }\n\n  /**\n   * The footer triggered a page event.\n   */\n  onFooterPage(event: any) {\n    this.offset = event.page - 1;\n    this.bodyComponent.updateOffsetY(this.offset);\n\n    this.page.emit({\n      count: this.count,\n      pageSize: this.pageSize,\n      limit: this.limit,\n      offset: this.offset\n    });\n\n    if (this.selectAllRowsOnPage) {\n      this.selected = [];\n      this.select.emit({\n        selected: this.selected\n      });\n    }\n  }\n\n  /**\n   * Recalculates the sizes of the page\n   */\n  calcPageSize(val: any[] = this.rows): number {\n    // Keep the page size constant even if the row has been expanded.\n    // This is because an expanded row is still considered to be a child of\n    // the original row.  Hence calculation would use rowHeight only.\n    if (this.scrollbarV && this.virtualization) {\n      const size = Math.ceil(this.bodyHeight / (this.rowHeight as number));\n      return Math.max(size, 0);\n    }\n\n    // if limit is passed, we are paging\n    if (this.limit !== undefined) {\n      return this.limit;\n    }\n\n    // otherwise use row length\n    if (val) {\n      return val.length;\n    }\n\n    // other empty :(\n    return 0;\n  }\n\n  /**\n   * Calculates the row count.\n   */\n  calcRowCount(val: any[] = this.rows): number {\n    if (!this.externalPaging) {\n      if (!val) return 0;\n\n      if (this.groupedRows) {\n        return this.groupedRows.length;\n      } else if (this.treeFromRelation != null && this.treeToRelation != null) {\n        return this._internalRows.length;\n      } else {\n        return val.length;\n      }\n    }\n\n    return this.count;\n  }\n\n  /**\n   * The header triggered a contextmenu event.\n   */\n  onColumnContextmenu({ event, column }: any): void {\n    this.tableContextmenu.emit({ event, type: ContextmenuType.header, content: column });\n  }\n\n  /**\n   * The body triggered a contextmenu event.\n   */\n  onRowContextmenu({ event, row }: any): void {\n    this.tableContextmenu.emit({ event, type: ContextmenuType.body, content: row });\n  }\n\n  /**\n   * The header triggered a column resize event.\n   */\n  onColumnResize({ column, newValue }: any): void {\n    /* Safari/iOS 10.2 workaround */\n    if (column === undefined) {\n      return;\n    }\n\n    let idx: number;\n    const cols = this._internalColumns.map((c, i) => {\n      c = { ...c };\n\n      if (c.$$id === column.$$id) {\n        idx = i;\n        c.width = newValue;\n\n        // set this so we can force the column\n        // width distribution to be to this value\n        c.$$oldWidth = newValue;\n      }\n\n      return c;\n    });\n\n    this.recalculateColumns(cols, idx);\n    this._internalColumns = cols;\n\n    this.resize.emit({\n      column,\n      newValue\n    });\n  }\n\n  /**\n   * The header triggered a column re-order event.\n   */\n  onColumnReorder({ column, newValue, prevValue }: any): void {\n    const cols = this._internalColumns.map(c => {\n      return { ...c };\n    });\n\n    if (this.swapColumns) {\n      const prevCol = cols[newValue];\n      cols[newValue] = column;\n      cols[prevValue] = prevCol;\n    } else {\n      if (newValue > prevValue) {\n        const movedCol = cols[prevValue];\n        for (let i = prevValue; i < newValue; i++) {\n          cols[i] = cols[i + 1];\n        }\n        cols[newValue] = movedCol;\n      } else {\n        const movedCol = cols[prevValue];\n        for (let i = prevValue; i > newValue; i--) {\n          cols[i] = cols[i - 1];\n        }\n        cols[newValue] = movedCol;\n      }\n    }\n\n    this._internalColumns = cols;\n\n    this.reorder.emit({\n      column,\n      newValue,\n      prevValue\n    });\n  }\n\n  /**\n   * The header triggered a column sort event.\n   */\n  onColumnSort(event: any): void {\n    // clean selected rows\n    if (this.selectAllRowsOnPage) {\n      this.selected = [];\n      this.select.emit({\n        selected: this.selected\n      });\n    }\n\n    this.sorts = event.sorts;\n\n    // this could be optimized better since it will resort\n    // the rows again on the 'push' detection...\n    if (this.externalSorting === false) {\n      // don't use normal setter so we don't resort\n      this.sortInternalRows();\n    }\n\n    // auto group by parent on new update\n    this._internalRows = groupRowsByParents(\n      this._internalRows,\n      optionalGetterForProp(this.treeFromRelation),\n      optionalGetterForProp(this.treeToRelation)\n    );\n\n    // Always go to first page when sorting to see the newly sorted data\n    this.offset = 0;\n    this.bodyComponent.updateOffsetY(this.offset);\n    this.sort.emit(event);\n  }\n\n  /**\n   * Toggle all row selection\n   */\n  onHeaderSelect(event: any): void {\n    if (this.bodyComponent && this.selectAllRowsOnPage) {\n      // before we splice, chk if we currently have all selected\n      const first = this.bodyComponent.indexes.first;\n      const last = this.bodyComponent.indexes.last;\n      const allSelected = this.selected.length === last - first;\n\n      // remove all existing either way\n      this.selected = [];\n\n      // do the opposite here\n      if (!allSelected) {\n        this.selected.push(...this._internalRows.slice(first, last));\n      }\n    } else {\n      // before we splice, chk if we currently have all selected\n      const allSelected = this.selected.length === this.rows.length;\n      // remove all existing either way\n      this.selected = [];\n      // do the opposite here\n      if (!allSelected) {\n        this.selected.push(...this.rows);\n      }\n    }\n\n    this.select.emit({\n      selected: this.selected\n    });\n  }\n\n  /**\n   * A row was selected from body\n   */\n  onBodySelect(event: any): void {\n    this.select.emit(event);\n  }\n\n  /**\n   * A row was expanded or collapsed for tree\n   */\n  onTreeAction(event: any) {\n    const row = event.row;\n    // TODO: For duplicated items this will not work\n    const rowIndex = this._rows.findIndex(r => r[this.treeToRelation] === event.row[this.treeToRelation]);\n    this.treeAction.emit({ row, rowIndex });\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  /**\n   * listen for changes to input bindings of all DataTableColumnDirective and\n   * trigger the columnTemplates.changes observable to emit\n   */\n  private listenForColumnInputChanges(): void {\n    this._subscriptions.push(\n      this.columnChangesService.columnInputChanges$.subscribe(() => {\n        if (this.columnTemplates) {\n          this.columnTemplates.notifyOnChanges();\n        }\n      })\n    );\n  }\n\n  private sortInternalRows(): void {\n    this._internalRows = sortRows(this._internalRows, this._internalColumns, this.sorts);\n  }\n}\n","import {\n  Component,\n  Input,\n  EventEmitter,\n  Output,\n  HostBinding,\n  HostListener,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { SortType } from '../../types/sort.type';\nimport { SelectionType } from '../../types/selection.type';\nimport { TableColumn } from '../../types/table-column.type';\nimport { nextSortDir } from '../../utils/sort';\nimport { SortDirection } from '../../types/sort-direction.type';\n\n@Component({\n  selector: 'datatable-header-cell',\n  template: `\n    <div class=\"datatable-header-cell-template-wrap\">\n      <ng-template\n        *ngIf=\"isTarget\"\n        [ngTemplateOutlet]=\"targetMarkerTemplate\"\n        [ngTemplateOutletContext]=\"targetMarkerContext\"\n      >\n      </ng-template>\n      <label *ngIf=\"isCheckboxable\" class=\"datatable-checkbox\">\n        <input type=\"checkbox\" [checked]=\"allRowsSelected\" (change)=\"select.emit(!allRowsSelected)\" />\n      </label>\n      <span *ngIf=\"!column.headerTemplate\" class=\"datatable-header-cell-wrapper\">\n        <span class=\"datatable-header-cell-label draggable\" (click)=\"onSort()\" [innerHTML]=\"name\"> </span>\n      </span>\n      <ng-template\n        *ngIf=\"column.headerTemplate\"\n        [ngTemplateOutlet]=\"column.headerTemplate\"\n        [ngTemplateOutletContext]=\"cellContext\"\n      >\n      </ng-template>\n      <span (click)=\"onSort()\" [class]=\"sortClass\"> </span>\n    </div>\n  `,\n  host: {\n    class: 'datatable-header-cell'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableHeaderCellComponent {\n  @Input() sortType: SortType;\n  @Input() sortAscendingIcon: string;\n  @Input() sortDescendingIcon: string;\n\n  @Input() isTarget: boolean;\n  @Input() targetMarkerTemplate: any;\n  @Input() targetMarkerContext: any;\n\n  _allRowsSelected: boolean;\n\n  @Input() set allRowsSelected(value) {\n    this._allRowsSelected = value;\n    this.cellContext.allRowsSelected = value;\n  }\n  get allRowsSelected() {\n    return this._allRowsSelected;\n  }\n\n  @Input() selectionType: SelectionType;\n\n  @Input() set column(column: TableColumn) {\n    this._column = column;\n    this.cellContext.column = column;\n    this.cd.markForCheck();\n  }\n\n  get column(): TableColumn {\n    return this._column;\n  }\n\n  @HostBinding('style.height.px')\n  @Input()\n  headerHeight: number;\n\n  @Input() set sorts(val: any[]) {\n    this._sorts = val;\n    this.sortDir = this.calcSortDir(val);\n    this.cellContext.sortDir = this.sortDir;\n    this.sortClass = this.calcSortClass(this.sortDir);\n    this.cd.markForCheck();\n  }\n\n  get sorts(): any[] {\n    return this._sorts;\n  }\n\n  @Output() sort: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() columnContextmenu = new EventEmitter<{ event: MouseEvent; column: any }>(false);\n\n  @HostBinding('class')\n  get columnCssClasses(): any {\n    let cls = 'datatable-header-cell';\n\n    if (this.column.sortable) cls += ' sortable';\n    if (this.column.resizeable) cls += ' resizeable';\n    if (this.column.headerClass) {\n      if (typeof this.column.headerClass === 'string') {\n        cls += ' ' + this.column.headerClass;\n      } else if (typeof this.column.headerClass === 'function') {\n        const res = this.column.headerClass({\n          column: this.column\n        });\n\n        if (typeof res === 'string') {\n          cls += res;\n        } else if (typeof res === 'object') {\n          const keys = Object.keys(res);\n          for (const k of keys) {\n            if (res[k] === true) cls += ` ${k}`;\n          }\n        }\n      }\n    }\n\n    const sortDir = this.sortDir;\n    if (sortDir) {\n      cls += ` sort-active sort-${sortDir}`;\n    }\n\n    return cls;\n  }\n\n  @HostBinding('attr.title')\n  get name(): string {\n    // guaranteed to have a value by setColumnDefaults() in column-helper.ts\n    return this.column.headerTemplate === undefined ? this.column.name : undefined;\n  }\n\n  @HostBinding('style.minWidth.px')\n  get minWidth(): number {\n    return this.column.minWidth;\n  }\n\n  @HostBinding('style.maxWidth.px')\n  get maxWidth(): number {\n    return this.column.maxWidth;\n  }\n\n  @HostBinding('style.width.px')\n  get width(): number {\n    return this.column.width;\n  }\n\n  get isCheckboxable(): boolean {\n    return this.column.checkboxable && this.column.headerCheckboxable && this.selectionType === SelectionType.checkbox;\n  }\n\n  sortFn = this.onSort.bind(this);\n  sortClass: string;\n  sortDir: SortDirection;\n  selectFn = this.select.emit.bind(this.select);\n\n  cellContext: any = {\n    column: this.column,\n    sortDir: this.sortDir,\n    sortFn: this.sortFn,\n    allRowsSelected: this.allRowsSelected,\n    selectFn: this.selectFn\n  };\n\n  private _column: TableColumn;\n  private _sorts: any[];\n\n  constructor(private cd: ChangeDetectorRef) {}\n\n  @HostListener('contextmenu', ['$event'])\n  onContextmenu($event: MouseEvent): void {\n    this.columnContextmenu.emit({ event: $event, column: this.column });\n  }\n\n  calcSortDir(sorts: any[]): any {\n    if (sorts && this.column) {\n      const sort = sorts.find((s: any) => {\n        return s.prop === this.column.prop;\n      });\n\n      if (sort) return sort.dir;\n    }\n  }\n\n  onSort(): void {\n    if (!this.column.sortable) return;\n\n    const newValue = nextSortDir(this.sortType, this.sortDir);\n    this.sort.emit({\n      column: this.column,\n      prevValue: this.sortDir,\n      newValue\n    });\n  }\n\n  calcSortClass(sortDir: SortDirection): string {\n    if (sortDir === SortDirection.asc) {\n      return `sort-btn sort-asc ${this.sortAscendingIcon}`;\n    } else if (sortDir === SortDirection.desc) {\n      return `sort-btn sort-desc ${this.sortDescendingIcon}`;\n    } else {\n      return `sort-btn`;\n    }\n  }\n}\n","import { Component, Output, EventEmitter, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { DatatableFooterDirective } from './footer.directive';\n@Component({\n  selector: 'datatable-footer',\n  template: `\n    <div\n      class=\"datatable-footer-inner\"\n      [ngClass]=\"{ 'selected-count': selectedMessage }\"\n      [style.height.px]=\"footerHeight\"\n    >\n      <ng-template\n        *ngIf=\"footerTemplate\"\n        [ngTemplateOutlet]=\"footerTemplate.template\"\n        [ngTemplateOutletContext]=\"{\n          rowCount: rowCount,\n          pageSize: pageSize,\n          selectedCount: selectedCount,\n          curPage: curPage,\n          offset: offset\n        }\"\n      >\n      </ng-template>\n      <div class=\"page-count\" *ngIf=\"!footerTemplate\">\n        <span *ngIf=\"selectedMessage\"> {{ selectedCount?.toLocaleString() }} {{ selectedMessage }} / </span>\n        {{ rowCount?.toLocaleString() }} {{ totalMessage }}\n      </div>\n      <datatable-pager\n        *ngIf=\"!footerTemplate\"\n        [pagerLeftArrowIcon]=\"pagerLeftArrowIcon\"\n        [pagerRightArrowIcon]=\"pagerRightArrowIcon\"\n        [pagerPreviousIcon]=\"pagerPreviousIcon\"\n        [pagerNextIcon]=\"pagerNextIcon\"\n        [page]=\"curPage\"\n        [size]=\"pageSize\"\n        [count]=\"rowCount\"\n        [hidden]=\"!isVisible\"\n        (change)=\"page.emit($event)\"\n      >\n      </datatable-pager>\n    </div>\n  `,\n  host: {\n    class: 'datatable-footer'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableFooterComponent {\n  @Input() footerHeight: number;\n  @Input() rowCount: number;\n  @Input() pageSize: number;\n  @Input() offset: number;\n  @Input() pagerLeftArrowIcon: string;\n  @Input() pagerRightArrowIcon: string;\n  @Input() pagerPreviousIcon: string;\n  @Input() pagerNextIcon: string;\n  @Input() totalMessage: string;\n  @Input() footerTemplate: DatatableFooterDirective;\n\n  @Input() selectedCount: number = 0;\n  @Input() selectedMessage: string | boolean;\n\n  @Output() page: EventEmitter<any> = new EventEmitter();\n\n  get isVisible(): boolean {\n    return this.rowCount / this.pageSize > 1;\n  }\n\n  get curPage(): number {\n    return this.offset + 1;\n  }\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'datatable-pager',\n  template: `\n    <ul class=\"pager\">\n      <li [class.disabled]=\"!canPrevious()\">\n        <a role=\"button\" aria-label=\"go to first page\" href=\"javascript:void(0)\" (click)=\"selectPage(1)\">\n          <i class=\"{{ pagerPreviousIcon }}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canPrevious()\">\n        <a role=\"button\" aria-label=\"go to previous page\" href=\"javascript:void(0)\" (click)=\"prevPage()\">\n          <i class=\"{{ pagerLeftArrowIcon }}\"></i>\n        </a>\n      </li>\n      <li\n        role=\"button\"\n        [attr.aria-label]=\"'page ' + pg.number\"\n        class=\"pages\"\n        *ngFor=\"let pg of pages\"\n        [class.active]=\"pg.number === page\"\n      >\n        <a href=\"javascript:void(0)\" (click)=\"selectPage(pg.number)\">\n          {{ pg.text }}\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a role=\"button\" aria-label=\"go to next page\" href=\"javascript:void(0)\" (click)=\"nextPage()\">\n          <i class=\"{{ pagerRightArrowIcon }}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a role=\"button\" aria-label=\"go to last page\" href=\"javascript:void(0)\" (click)=\"selectPage(totalPages)\">\n          <i class=\"{{ pagerNextIcon }}\"></i>\n        </a>\n      </li>\n    </ul>\n  `,\n  host: {\n    class: 'datatable-pager'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTablePagerComponent {\n  @Input() pagerLeftArrowIcon: string;\n  @Input() pagerRightArrowIcon: string;\n  @Input() pagerPreviousIcon: string;\n  @Input() pagerNextIcon: string;\n\n  @Input()\n  set size(val: number) {\n    this._size = val;\n    this.pages = this.calcPages();\n  }\n\n  get size(): number {\n    return this._size;\n  }\n\n  @Input()\n  set count(val: number) {\n    this._count = val;\n    this.pages = this.calcPages();\n  }\n\n  get count(): number {\n    return this._count;\n  }\n\n  @Input()\n  set page(val: number) {\n    this._page = val;\n    this.pages = this.calcPages();\n  }\n\n  get page(): number {\n    return this._page;\n  }\n\n  get totalPages(): number {\n    const count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);\n    return Math.max(count || 0, 1);\n  }\n\n  @Output() change: EventEmitter<any> = new EventEmitter();\n\n  _count: number = 0;\n  _page: number = 1;\n  _size: number = 0;\n  pages: any;\n\n  canPrevious(): boolean {\n    return this.page > 1;\n  }\n\n  canNext(): boolean {\n    return this.page < this.totalPages;\n  }\n\n  prevPage(): void {\n    this.selectPage(this.page - 1);\n  }\n\n  nextPage(): void {\n    this.selectPage(this.page + 1);\n  }\n\n  selectPage(page: number): void {\n    if (page > 0 && page <= this.totalPages && page !== this.page) {\n      this.page = page;\n\n      this.change.emit({\n        page\n      });\n    }\n  }\n\n  calcPages(page?: number): any[] {\n    const pages = [];\n    let startPage = 1;\n    let endPage = this.totalPages;\n    const maxSize = 5;\n    const isMaxSized = maxSize < this.totalPages;\n\n    page = page || this.page;\n\n    if (isMaxSized) {\n      startPage = page - Math.floor(maxSize / 2);\n      endPage = page + Math.floor(maxSize / 2);\n\n      if (startPage < 1) {\n        startPage = 1;\n        endPage = Math.min(startPage + maxSize - 1, this.totalPages);\n      } else if (endPage > this.totalPages) {\n        startPage = Math.max(this.totalPages - maxSize + 1, 1);\n        endPage = this.totalPages;\n      }\n    }\n\n    for (let num = startPage; num <= endPage; num++) {\n      pages.push({\n        number: num,\n        text: <string>(<any>num)\n      });\n    }\n\n    return pages;\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'datatable-progress',\n  template: `\n    <div class=\"progress-linear\" role=\"progressbar\">\n      <div class=\"container\">\n        <div class=\"bar\"></div>\n      </div>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProgressBarComponent {}\n","export enum Keys {\n  up = 38,\n  down = 40,\n  return = 13,\n  escape = 27,\n  left = 37,\n  right = 39\n}\n","import {\n  Component,\n  Input,\n  HostBinding,\n  ElementRef,\n  Output,\n  KeyValueDiffers,\n  KeyValueDiffer,\n  EventEmitter,\n  HostListener,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  DoCheck,\n  SkipSelf\n} from '@angular/core';\n\nimport { TreeStatus } from './body-cell.component';\nimport { columnsByPin, columnGroupWidths, columnsByPinArr } from '../../utils/column';\nimport { Keys } from '../../utils/keys';\nimport { ScrollbarHelper } from '../../services/scrollbar-helper.service';\nimport { translateXY } from '../../utils/translate';\n\n@Component({\n  selector: 'datatable-body-row',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div\n      *ngFor=\"let colGroup of _columnsByPin; let i = index; trackBy: trackByGroups\"\n      class=\"datatable-row-{{ colGroup.type }} datatable-row-group\"\n      [ngStyle]=\"_groupStyles[colGroup.type]\"\n    >\n      <datatable-body-cell\n        *ngFor=\"let column of colGroup.columns; let ii = index; trackBy: columnTrackingFn\"\n        tabindex=\"-1\"\n        [row]=\"row\"\n        [group]=\"group\"\n        [expanded]=\"expanded\"\n        [isSelected]=\"isSelected\"\n        [rowIndex]=\"rowIndex\"\n        [column]=\"column\"\n        [rowHeight]=\"rowHeight\"\n        [displayCheck]=\"displayCheck\"\n        [treeStatus]=\"treeStatus\"\n        (activate)=\"onActivate($event, ii)\"\n        (treeAction)=\"onTreeAction()\"\n      >\n      </datatable-body-cell>\n    </div>\n  `\n})\nexport class DataTableBodyRowComponent implements DoCheck {\n  @Input() set columns(val: any[]) {\n    this._columns = val;\n    this.recalculateColumns(val);\n    this.buildStylesByGroup();\n  }\n\n  get columns(): any[] {\n    return this._columns;\n  }\n\n  @Input() set innerWidth(val: number) {\n    if (this._columns) {\n      const colByPin = columnsByPin(this._columns);\n      this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n    }\n\n    this._innerWidth = val;\n    this.recalculateColumns();\n    this.buildStylesByGroup();\n  }\n\n  get innerWidth(): number {\n    return this._innerWidth;\n  }\n\n  @Input() expanded: boolean;\n  @Input() rowClass: any;\n  @Input() row: any;\n  @Input() group: any;\n  @Input() isSelected: boolean;\n  @Input() rowIndex: number;\n  @Input() displayCheck: any;\n  @Input() treeStatus: TreeStatus = 'collapsed';\n\n  @Input()\n  set offsetX(val: number) {\n    this._offsetX = val;\n    this.buildStylesByGroup();\n  }\n  get offsetX() {\n    return this._offsetX;\n  }\n\n  @HostBinding('class')\n  get cssClass() {\n    let cls = 'datatable-body-row';\n    if (this.isSelected) {\n      cls += ' active';\n    }\n    if (this.rowIndex % 2 !== 0) {\n      cls += ' datatable-row-odd';\n    }\n    if (this.rowIndex % 2 === 0) {\n      cls += ' datatable-row-even';\n    }\n\n    if (this.rowClass) {\n      const res = this.rowClass(this.row);\n      if (typeof res === 'string') {\n        cls += ` ${res}`;\n      } else if (typeof res === 'object') {\n        const keys = Object.keys(res);\n        for (const k of keys) {\n          if (res[k] === true) {\n            cls += ` ${k}`;\n          }\n        }\n      }\n    }\n\n    return cls;\n  }\n\n  @HostBinding('style.height.px')\n  @Input()\n  rowHeight: number;\n\n  @HostBinding('style.width.px')\n  get columnsTotalWidths(): string {\n    return this._columnGroupWidths.total;\n  }\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  _element: any;\n  _columnGroupWidths: any;\n  _columnsByPin: any;\n  _offsetX: number;\n  _columns: any[];\n  _innerWidth: number;\n  _groupStyles: { [prop: string]: {} } = {\n    left: {},\n    center: {},\n    right: {}\n  };\n\n  private _rowDiffer: KeyValueDiffer<{}, {}>;\n\n  constructor(\n    private differs: KeyValueDiffers,\n    @SkipSelf() private scrollbarHelper: ScrollbarHelper,\n    private cd: ChangeDetectorRef,\n    element: ElementRef\n  ) {\n    this._element = element.nativeElement;\n    this._rowDiffer = differs.find({}).create();\n  }\n\n  ngDoCheck(): void {\n    if (this._rowDiffer.diff(this.row)) {\n      this.cd.markForCheck();\n    }\n  }\n\n  trackByGroups(index: number, colGroup: any): any {\n    return colGroup.type;\n  }\n\n  columnTrackingFn(index: number, column: any): any {\n    return column.$$id;\n  }\n\n  buildStylesByGroup() {\n    this._groupStyles.left = this.calcStylesByGroup('left');\n    this._groupStyles.center = this.calcStylesByGroup('center');\n    this._groupStyles.right = this.calcStylesByGroup('right');\n    this.cd.markForCheck();\n  }\n\n  calcStylesByGroup(group: string) {\n    const widths = this._columnGroupWidths;\n    const offsetX = this.offsetX;\n\n    const styles = {\n      width: `${widths[group]}px`\n    };\n\n    if (group === 'left') {\n      translateXY(styles, offsetX, 0);\n    } else if (group === 'right') {\n      const bodyWidth = parseInt(this.innerWidth + '', 0);\n      const totalDiff = widths.total - bodyWidth;\n      const offsetDiff = totalDiff - offsetX;\n      const offset = (offsetDiff + this.scrollbarHelper.width) * -1;\n      translateXY(styles, offset, 0);\n    }\n\n    return styles;\n  }\n\n  onActivate(event: any, index: number): void {\n    event.cellIndex = index;\n    event.rowElement = this._element;\n    this.activate.emit(event);\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const isTargetRow = event.target === this._element;\n\n    const isAction =\n      keyCode === Keys.return ||\n      keyCode === Keys.down ||\n      keyCode === Keys.up ||\n      keyCode === Keys.left ||\n      keyCode === Keys.right;\n\n    if (isAction && isTargetRow) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.activate.emit({\n        type: 'keydown',\n        event,\n        row: this.row,\n        rowElement: this._element\n      });\n    }\n  }\n\n  @HostListener('mouseenter', ['$event'])\n  onMouseenter(event: any): void {\n    this.activate.emit({\n      type: 'mouseenter',\n      event,\n      row: this.row,\n      rowElement: this._element\n    });\n  }\n\n  recalculateColumns(val: any[] = this.columns): void {\n    this._columns = val;\n    const colsByPin = columnsByPin(this._columns);\n    this._columnsByPin = columnsByPinArr(this._columns);\n    this._columnGroupWidths = columnGroupWidths(colsByPin, this._columns);\n  }\n\n  onTreeAction() {\n    this.treeAction.emit();\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  DoCheck,\n  ChangeDetectionStrategy,\n  KeyValueDiffer,\n  ChangeDetectorRef,\n  KeyValueDiffers\n} from '@angular/core';\n\n@Component({\n  selector: 'datatable-row-wrapper',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div *ngIf=\"groupHeader && groupHeader.template\" class=\"datatable-group-header\" [ngStyle]=\"getGroupHeaderStyle()\">\n      <ng-template\n        *ngIf=\"groupHeader && groupHeader.template\"\n        [ngTemplateOutlet]=\"groupHeader.template\"\n        [ngTemplateOutletContext]=\"groupContext\"\n      >\n      </ng-template>\n    </div>\n    <ng-content *ngIf=\"(groupHeader && groupHeader.template && expanded) || !groupHeader || !groupHeader.template\">\n    </ng-content>\n    <div\n      *ngIf=\"rowDetail && rowDetail.template && expanded\"\n      [style.height.px]=\"detailRowHeight\"\n      class=\"datatable-row-detail\"\n    >\n      <ng-template\n        *ngIf=\"rowDetail && rowDetail.template\"\n        [ngTemplateOutlet]=\"rowDetail.template\"\n        [ngTemplateOutletContext]=\"rowContext\"\n      >\n      </ng-template>\n    </div>\n  `,\n  host: {\n    class: 'datatable-row-wrapper'\n  }\n})\nexport class DataTableRowWrapperComponent implements DoCheck {\n  @Input() innerWidth: number;\n  @Input() rowDetail: any;\n  @Input() groupHeader: any;\n  @Input() offsetX: number;\n  @Input() detailRowHeight: any;\n  @Input() row: any;\n  @Input() groupedRows: any;\n  @Output() rowContextmenu = new EventEmitter<{ event: MouseEvent; row: any }>(false);\n\n  @Input() set rowIndex(val: number) {\n    this._rowIndex = val;\n    this.rowContext.rowIndex = val;\n    this.groupContext.rowIndex = val;\n    this.cd.markForCheck();\n  }\n\n  get rowIndex(): number {\n    return this._rowIndex;\n  }\n\n  @Input() set expanded(val: boolean) {\n    this._expanded = val;\n    this.groupContext.expanded = val;\n    this.rowContext.expanded = val;\n    this.cd.markForCheck();\n  }\n\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  groupContext: any = {\n    group: this.row,\n    expanded: this.expanded,\n    rowIndex: this.rowIndex\n  };\n\n  rowContext: any = {\n    row: this.row,\n    expanded: this.expanded,\n    rowIndex: this.rowIndex\n  };\n\n  private rowDiffer: KeyValueDiffer<{}, {}>;\n  private _expanded: boolean = false;\n  private _rowIndex: number;\n\n  constructor(private cd: ChangeDetectorRef, private differs: KeyValueDiffers) {\n    this.rowDiffer = differs.find({}).create();\n  }\n\n  ngDoCheck(): void {\n    if (this.rowDiffer.diff(this.row)) {\n      this.rowContext.row = this.row;\n      this.groupContext.group = this.row;\n      this.cd.markForCheck();\n    }\n  }\n\n  @HostListener('contextmenu', ['$event'])\n  onContextmenu($event: MouseEvent): void {\n    this.rowContextmenu.emit({ event: $event, row: this.row });\n  }\n\n  getGroupHeaderStyle(): any {\n    const styles = {};\n\n    styles['transform'] = 'translate3d(' + this.offsetX + 'px, 0px, 0px)';\n    styles['backface-visibility'] = 'hidden';\n    styles['width'] = this.innerWidth;\n\n    return styles;\n  }\n}\n","import {\n  Component,\n  Input,\n  PipeTransform,\n  HostBinding,\n  ViewChild,\n  ChangeDetectorRef,\n  Output,\n  EventEmitter,\n  HostListener,\n  ElementRef,\n  ViewContainerRef,\n  OnDestroy,\n  DoCheck,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { TableColumn } from '../../types/table-column.type';\nimport { SortDirection } from '../../types/sort-direction.type';\nimport { Keys } from '../../utils/keys';\n\nexport type TreeStatus = 'collapsed' | 'expanded' | 'loading' | 'disabled';\n\n@Component({\n  selector: 'datatable-body-cell',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"datatable-body-cell-label\" [style.margin-left.px]=\"calcLeftMargin(column, row)\">\n      <label\n        *ngIf=\"column.checkboxable && (!displayCheck || displayCheck(row, column, value))\"\n        class=\"datatable-checkbox\"\n      >\n        <input type=\"checkbox\" [checked]=\"isSelected\" (click)=\"onCheckboxChange($event)\" />\n      </label>\n      <ng-container *ngIf=\"column.isTreeColumn\">\n        <button\n          *ngIf=\"!column.treeToggleTemplate\"\n          class=\"datatable-tree-button\"\n          [disabled]=\"treeStatus === 'disabled'\"\n          (click)=\"onTreeAction()\"\n        >\n          <span>\n            <i *ngIf=\"treeStatus === 'loading'\" class=\"icon datatable-icon-collapse\"></i>\n            <i *ngIf=\"treeStatus === 'collapsed'\" class=\"icon datatable-icon-up\"></i>\n            <i *ngIf=\"treeStatus === 'expanded' || treeStatus === 'disabled'\" class=\"icon datatable-icon-down\"></i>\n          </span>\n        </button>\n        <ng-template\n          *ngIf=\"column.treeToggleTemplate\"\n          [ngTemplateOutlet]=\"column.treeToggleTemplate\"\n          [ngTemplateOutletContext]=\"{ cellContext: cellContext }\"\n        >\n        </ng-template>\n      </ng-container>\n\n      <span *ngIf=\"!column.cellTemplate\" [title]=\"sanitizedValue\" [innerHTML]=\"value\"> </span>\n      <ng-template\n        #cellTemplate\n        *ngIf=\"column.cellTemplate\"\n        [ngTemplateOutlet]=\"column.cellTemplate\"\n        [ngTemplateOutletContext]=\"cellContext\"\n      >\n      </ng-template>\n    </div>\n  `\n})\nexport class DataTableBodyCellComponent implements DoCheck, OnDestroy {\n  @Input() displayCheck: (row: any, column?: TableColumn, value?: any) => boolean;\n\n  @Input() set group(group: any) {\n    this._group = group;\n    this.cellContext.group = group;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get group() {\n    return this._group;\n  }\n\n  @Input() set rowHeight(val: number) {\n    this._rowHeight = val;\n    this.cellContext.rowHeight = val;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get rowHeight() {\n    return this._rowHeight;\n  }\n\n  @Input() set isSelected(val: boolean) {\n    this._isSelected = val;\n    this.cellContext.isSelected = val;\n    this.cd.markForCheck();\n  }\n\n  get isSelected(): boolean {\n    return this._isSelected;\n  }\n\n  @Input() set expanded(val: boolean) {\n    this._expanded = val;\n    this.cellContext.expanded = val;\n    this.cd.markForCheck();\n  }\n\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  @Input() set rowIndex(val: number) {\n    this._rowIndex = val;\n    this.cellContext.rowIndex = val;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get rowIndex(): number {\n    return this._rowIndex;\n  }\n\n  @Input() set column(column: TableColumn) {\n    this._column = column;\n    this.cellContext.column = column;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get column(): TableColumn {\n    return this._column;\n  }\n\n  @Input() set row(row: any) {\n    this._row = row;\n    this.cellContext.row = row;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get row(): any {\n    return this._row;\n  }\n\n  @Input() set sorts(val: any[]) {\n    this._sorts = val;\n    this.calcSortDir = this.calcSortDir(val);\n  }\n\n  get sorts(): any[] {\n    return this._sorts;\n  }\n\n  @Input() set treeStatus(status: TreeStatus) {\n    if (status !== 'collapsed' && status !== 'expanded' && status !== 'loading' && status !== 'disabled') {\n      this._treeStatus = 'collapsed';\n    } else {\n      this._treeStatus = status;\n    }\n    this.cellContext.treeStatus = this._treeStatus;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get treeStatus(): TreeStatus {\n    return this._treeStatus;\n  }\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild('cellTemplate', { read: ViewContainerRef, static: true })\n  cellTemplate: ViewContainerRef;\n\n  @HostBinding('class')\n  get columnCssClasses(): any {\n    let cls = 'datatable-body-cell';\n    if (this.column.cellClass) {\n      if (typeof this.column.cellClass === 'string') {\n        cls += ' ' + this.column.cellClass;\n      } else if (typeof this.column.cellClass === 'function') {\n        const res = this.column.cellClass({\n          row: this.row,\n          group: this.group,\n          column: this.column,\n          value: this.value,\n          rowHeight: this.rowHeight\n        });\n\n        if (typeof res === 'string') {\n          cls += ' ' + res;\n        } else if (typeof res === 'object') {\n          const keys = Object.keys(res);\n          for (const k of keys) {\n            if (res[k] === true) {\n              cls += ` ${k}`;\n            }\n          }\n        }\n      }\n    }\n    if (!this.sortDir) {\n      cls += ' sort-active';\n    }\n    if (this.isFocused) {\n      cls += ' active';\n    }\n    if (this.sortDir === SortDirection.asc) {\n      cls += ' sort-asc';\n    }\n    if (this.sortDir === SortDirection.desc) {\n      cls += ' sort-desc';\n    }\n\n    return cls;\n  }\n\n  @HostBinding('style.width.px')\n  get width(): number {\n    return this.column.width;\n  }\n\n  @HostBinding('style.minWidth.px')\n  get minWidth(): number {\n    return this.column.minWidth;\n  }\n\n  @HostBinding('style.maxWidth.px')\n  get maxWidth(): number {\n    return this.column.maxWidth;\n  }\n\n  @HostBinding('style.height')\n  get height(): string | number {\n    const height = this.rowHeight;\n    if (isNaN(height)) {\n      return height;\n    }\n    return height + 'px';\n  }\n\n  sanitizedValue: any;\n  value: any;\n  sortDir: SortDirection;\n  isFocused = false;\n  onCheckboxChangeFn = this.onCheckboxChange.bind(this);\n  activateFn = this.activate.emit.bind(this.activate);\n\n  cellContext: any = {\n    onCheckboxChangeFn: this.onCheckboxChangeFn,\n    activateFn: this.activateFn,\n    row: this.row,\n    group: this.group,\n    value: this.value,\n    column: this.column,\n    rowHeight: this.rowHeight,\n    isSelected: this.isSelected,\n    rowIndex: this.rowIndex,\n    treeStatus: this.treeStatus,\n    onTreeAction: this.onTreeAction.bind(this)\n  };\n\n  private _isSelected: boolean;\n  private _sorts: any[];\n  private _column: TableColumn;\n  private _row: any;\n  private _group: any;\n  private _rowHeight: number;\n  private _rowIndex: number;\n  private _expanded: boolean;\n  private _element: any;\n  private _treeStatus: TreeStatus;\n\n  constructor(element: ElementRef, private cd: ChangeDetectorRef) {\n    this._element = element.nativeElement;\n  }\n\n  ngDoCheck(): void {\n    this.checkValueUpdates();\n  }\n\n  ngOnDestroy(): void {\n    if (this.cellTemplate) {\n      this.cellTemplate.clear();\n    }\n  }\n\n  checkValueUpdates(): void {\n    let value = '';\n\n    if (!this.row || !this.column) {\n      value = '';\n    } else {\n      const val = this.column.$$valueGetter(this.row, this.column.prop);\n      const userPipe: PipeTransform = this.column.pipe;\n\n      if (userPipe) {\n        value = userPipe.transform(val);\n      } else if (value !== undefined) {\n        value = val;\n      }\n    }\n\n    if (this.value !== value) {\n      this.value = value;\n      this.cellContext.value = value;\n      this.sanitizedValue = value !== null && value !== undefined ? this.stripHtml(value) : value;\n      this.cd.markForCheck();\n    }\n  }\n\n  @HostListener('focus')\n  onFocus(): void {\n    this.isFocused = true;\n  }\n\n  @HostListener('blur')\n  onBlur(): void {\n    this.isFocused = false;\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(event: MouseEvent): void {\n    this.activate.emit({\n      type: 'click',\n      event,\n      row: this.row,\n      group: this.group,\n      rowHeight: this.rowHeight,\n      column: this.column,\n      value: this.value,\n      cellElement: this._element\n    });\n  }\n\n  @HostListener('dblclick', ['$event'])\n  onDblClick(event: MouseEvent): void {\n    this.activate.emit({\n      type: 'dblclick',\n      event,\n      row: this.row,\n      group: this.group,\n      rowHeight: this.rowHeight,\n      column: this.column,\n      value: this.value,\n      cellElement: this._element\n    });\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const isTargetCell = event.target === this._element;\n\n    const isAction =\n      keyCode === Keys.return ||\n      keyCode === Keys.down ||\n      keyCode === Keys.up ||\n      keyCode === Keys.left ||\n      keyCode === Keys.right;\n\n    if (isAction && isTargetCell) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.activate.emit({\n        type: 'keydown',\n        event,\n        row: this.row,\n        group: this.group,\n        rowHeight: this.rowHeight,\n        column: this.column,\n        value: this.value,\n        cellElement: this._element\n      });\n    }\n  }\n\n  onCheckboxChange(event: any): void {\n    this.activate.emit({\n      type: 'checkbox',\n      event,\n      row: this.row,\n      group: this.group,\n      rowHeight: this.rowHeight,\n      column: this.column,\n      value: this.value,\n      cellElement: this._element,\n      treeStatus: 'collapsed'\n    });\n  }\n\n  calcSortDir(sorts: any[]): any {\n    if (!sorts) {\n      return;\n    }\n\n    const sort = sorts.find((s: any) => {\n      return s.prop === this.column.prop;\n    });\n\n    if (sort) {\n      return sort.dir;\n    }\n  }\n\n  stripHtml(html: string): string {\n    if (!html.replace) {\n      return html;\n    }\n    return html.replace(/<\\/?[^>]+(>|$)/g, '');\n  }\n\n  onTreeAction() {\n    this.treeAction.emit(this.row);\n  }\n\n  calcLeftMargin(column: any, row: any) {\n    const levelIndent = column.treeLevelIndent != null ? column.treeLevelIndent : 50;\n    return column.isTreeColumn ? row.level * levelIndent : 0;\n  }\n}\n","export function selectRows(selected: any[], row: any, comparefn: any) {\n  const selectedIndex = comparefn(row, selected);\n\n  if (selectedIndex > -1) {\n    selected.splice(selectedIndex, 1);\n  } else {\n    selected.push(row);\n  }\n\n  return selected;\n}\n\nexport function selectRowsBetween(\n  selected: any[],\n  rows: any[],\n  index: number,\n  prevIndex: number,\n  comparefn: any\n): any[] {\n  const reverse = index < prevIndex;\n\n  for (let i = 0; i < rows.length; i++) {\n    const row = rows[i];\n    const greater = i >= prevIndex && i <= index;\n    const lesser = i <= prevIndex && i >= index;\n\n    let range = { start: 0, end: 0 };\n    if (reverse) {\n      range = {\n        start: index,\n        end: prevIndex\n      };\n    } else {\n      range = {\n        start: prevIndex,\n        end: index + 1\n      };\n    }\n\n    if ((reverse && lesser) || (!reverse && greater)) {\n      // if in the positive range to be added to `selected`, and\n      // not already in the selected array, add it\n      if (i >= range.start && i <= range.end) {\n        selected.push(row);\n      }\n    }\n  }\n\n  return selected;\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { SelectionType } from '../../types/selection.type';\nimport { selectRowsBetween, selectRows } from '../../utils/selection';\nimport { Keys } from '../../utils/keys';\n\nexport interface Model {\n  type: string;\n  event: MouseEvent | KeyboardEvent;\n  row: any;\n  rowElement: any;\n  cellElement: any;\n  cellIndex: number;\n}\n\n@Component({\n  selector: 'datatable-selection',\n  template: ` <ng-content></ng-content> `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableSelectionComponent {\n  @Input() rows: any[];\n  @Input() selected: any[];\n  @Input() selectEnabled: boolean;\n  @Input() selectionType: SelectionType;\n  @Input() rowIdentity: any;\n  @Input() selectCheck: any;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n\n  prevIndex: number;\n\n  selectRow(event: KeyboardEvent | MouseEvent, index: number, row: any): void {\n    if (!this.selectEnabled) return;\n\n    const chkbox = this.selectionType === SelectionType.checkbox;\n    const multi = this.selectionType === SelectionType.multi;\n    const multiClick = this.selectionType === SelectionType.multiClick;\n    let selected: any[] = [];\n\n    if (multi || chkbox || multiClick) {\n      if (event.shiftKey) {\n        selected = selectRowsBetween([], this.rows, index, this.prevIndex, this.getRowSelectedIdx.bind(this));\n      } else if (event.ctrlKey || event.metaKey || multiClick || chkbox) {\n        selected = selectRows([...this.selected], row, this.getRowSelectedIdx.bind(this));\n      } else {\n        selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n      }\n    } else {\n      selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n    }\n\n    if (typeof this.selectCheck === 'function') {\n      selected = selected.filter(this.selectCheck.bind(this));\n    }\n\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n\n    this.prevIndex = index;\n\n    this.select.emit({\n      selected\n    });\n  }\n\n  onActivate(model: Model, index: number): void {\n    const { type, event, row } = model;\n    const chkbox = this.selectionType === SelectionType.checkbox;\n    const select = (!chkbox && (type === 'click' || type === 'dblclick')) || (chkbox && type === 'checkbox');\n\n    if (select) {\n      this.selectRow(event, index, row);\n    } else if (type === 'keydown') {\n      if ((<KeyboardEvent>event).keyCode === Keys.return) {\n        this.selectRow(event, index, row);\n      } else {\n        this.onKeyboardFocus(model);\n      }\n    }\n    this.activate.emit(model);\n  }\n\n  onKeyboardFocus(model: Model): void {\n    const { keyCode } = <KeyboardEvent>model.event;\n    const shouldFocus = keyCode === Keys.up || keyCode === Keys.down || keyCode === Keys.right || keyCode === Keys.left;\n\n    if (shouldFocus) {\n      const isCellSelection = this.selectionType === SelectionType.cell;\n\n      if (!model.cellElement || !isCellSelection) {\n        this.focusRow(model.rowElement, keyCode);\n      } else if (isCellSelection) {\n        this.focusCell(model.cellElement, model.rowElement, keyCode, model.cellIndex);\n      }\n    }\n  }\n\n  focusRow(rowElement: any, keyCode: number): void {\n    const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n    if (nextRowElement) nextRowElement.focus();\n  }\n\n  getPrevNextRow(rowElement: any, keyCode: number): any {\n    const parentElement = rowElement.parentElement;\n\n    if (parentElement) {\n      let focusElement: HTMLElement;\n      if (keyCode === Keys.up) {\n        focusElement = parentElement.previousElementSibling;\n      } else if (keyCode === Keys.down) {\n        focusElement = parentElement.nextElementSibling;\n      }\n\n      if (focusElement && focusElement.children.length) {\n        return focusElement.children[0];\n      }\n    }\n  }\n\n  focusCell(cellElement: any, rowElement: any, keyCode: number, cellIndex: number): void {\n    let nextCellElement: HTMLElement;\n\n    if (keyCode === Keys.left) {\n      nextCellElement = cellElement.previousElementSibling;\n    } else if (keyCode === Keys.right) {\n      nextCellElement = cellElement.nextElementSibling;\n    } else if (keyCode === Keys.up || keyCode === Keys.down) {\n      const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n      if (nextRowElement) {\n        const children = nextRowElement.getElementsByClassName('datatable-body-cell');\n        if (children.length) nextCellElement = children[cellIndex];\n      }\n    }\n\n    if (nextCellElement) nextCellElement.focus();\n  }\n\n  getRowSelected(row: any): boolean {\n    return this.getRowSelectedIdx(row, this.selected) > -1;\n  }\n\n  getRowSelectedIdx(row: any, selected: any[]): number {\n    if (!selected || !selected.length) return -1;\n\n    const rowId = this.rowIdentity(row);\n    return selected.findIndex(r => {\n      const id = this.rowIdentity(r);\n      return id === rowId;\n    });\n  }\n}\n","import { Component, Input, OnChanges, PipeTransform, TemplateRef } from '@angular/core';\n\nexport interface ISummaryColumn {\n  summaryFunc?: (cells: any[]) => any;\n  summaryTemplate?: TemplateRef<any>;\n\n  prop: string;\n  pipe?: PipeTransform;\n}\n\nfunction defaultSumFunc(cells: any[]): any {\n  const cellsWithValues = cells.filter(cell => !!cell);\n\n  if (!cellsWithValues.length) {\n    return null;\n  }\n  if (cellsWithValues.some(cell => typeof cell !== 'number')) {\n    return null;\n  }\n\n  return cellsWithValues.reduce((res, cell) => res + cell);\n}\n\nfunction noopSumFunc(cells: any[]): void {\n  return null;\n}\n\n@Component({\n  selector: 'datatable-summary-row',\n  template: `\n    <datatable-body-row\n      *ngIf=\"summaryRow && _internalColumns\"\n      tabindex=\"-1\"\n      [innerWidth]=\"innerWidth\"\n      [offsetX]=\"offsetX\"\n      [columns]=\"_internalColumns\"\n      [rowHeight]=\"rowHeight\"\n      [row]=\"summaryRow\"\n      [rowIndex]=\"-1\"\n    >\n    </datatable-body-row>\n  `,\n  host: {\n    class: 'datatable-summary-row'\n  }\n})\nexport class DataTableSummaryRowComponent implements OnChanges {\n  @Input() rows: any[];\n  @Input() columns: ISummaryColumn[];\n\n  @Input() rowHeight: number;\n  @Input() offsetX: number;\n  @Input() innerWidth: number;\n\n  _internalColumns: ISummaryColumn[];\n  summaryRow: any = {};\n\n  ngOnChanges() {\n    if (!this.columns || !this.rows) {\n      return;\n    }\n    this.updateInternalColumns();\n    this.updateValues();\n  }\n\n  private updateInternalColumns() {\n    this._internalColumns = this.columns.map(col => ({\n      ...col,\n      cellTemplate: col.summaryTemplate\n    }));\n  }\n\n  private updateValues() {\n    this.summaryRow = {};\n\n    this.columns\n      .filter(col => !col.summaryTemplate)\n      .forEach(col => {\n        const cellsFromSingleColumn = this.rows.map(row => row[col.prop]);\n        const sumFunc = this.getSummaryFunction(col);\n\n        this.summaryRow[col.prop] = col.pipe\n          ? col.pipe.transform(sumFunc(cellsFromSingleColumn))\n          : sumFunc(cellsFromSingleColumn);\n      });\n  }\n\n  private getSummaryFunction(column: ISummaryColumn): (a: any[]) => any {\n    if (column.summaryFunc === undefined) {\n      return defaultSumFunc;\n    } else if (column.summaryFunc === null) {\n      return noopSumFunc;\n    } else {\n      return column.summaryFunc;\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScrollbarHelper } from './services/scrollbar-helper.service';\nimport { DimensionsHelper } from './services/dimensions-helper.service';\nimport { ColumnChangesService } from './services/column-changes.service';\nimport { DataTableFooterTemplateDirective } from './components/footer/footer-template.directive';\nimport { VisibilityDirective } from './directives/visibility.directive';\nimport { DraggableDirective } from './directives/draggable.directive';\nimport { ResizeableDirective } from './directives/resizeable.directive';\nimport { OrderableDirective } from './directives/orderable.directive';\nimport { LongPressDirective } from './directives/long-press.directive';\nimport { ScrollerComponent } from './components/body/scroller.component';\nimport { DatatableComponent } from './components/datatable.component';\nimport { DataTableColumnDirective } from './components/columns/column.directive';\nimport { DataTableHeaderComponent } from './components/header/header.component';\nimport { DataTableHeaderCellComponent } from './components/header/header-cell.component';\nimport { DataTableBodyComponent } from './components/body/body.component';\nimport { DataTableFooterComponent } from './components/footer/footer.component';\nimport { DataTablePagerComponent } from './components/footer/pager.component';\nimport { ProgressBarComponent } from './components/body/progress-bar.component';\nimport { DataTableBodyRowComponent } from './components/body/body-row.component';\nimport { DataTableRowWrapperComponent } from './components/body/body-row-wrapper.component';\nimport { DatatableRowDetailDirective } from './components/row-detail/row-detail.directive';\nimport { DatatableGroupHeaderDirective } from './components/body/body-group-header.directive';\nimport { DatatableRowDetailTemplateDirective } from './components/row-detail/row-detail-template.directive';\nimport { DataTableBodyCellComponent } from './components/body/body-cell.component';\nimport { DataTableSelectionComponent } from './components/body/selection.component';\nimport { DataTableColumnHeaderDirective } from './components/columns/column-header.directive';\nimport { DataTableColumnCellDirective } from './components/columns/column-cell.directive';\nimport { DataTableColumnCellTreeToggle } from './components/columns/tree.directive';\nimport { DatatableFooterDirective } from './components/footer/footer.directive';\nimport { DatatableGroupHeaderTemplateDirective } from './components/body/body-group-header-template.directive';\nimport { DataTableSummaryRowComponent } from './components/body/summary/summary-row.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [ScrollbarHelper, DimensionsHelper, ColumnChangesService],\n  declarations: [\n    DataTableFooterTemplateDirective,\n    VisibilityDirective,\n    DraggableDirective,\n    ResizeableDirective,\n    OrderableDirective,\n    LongPressDirective,\n    ScrollerComponent,\n    DatatableComponent,\n    DataTableColumnDirective,\n    DataTableHeaderComponent,\n    DataTableHeaderCellComponent,\n    DataTableBodyComponent,\n    DataTableFooterComponent,\n    DataTablePagerComponent,\n    ProgressBarComponent,\n    DataTableBodyRowComponent,\n    DataTableRowWrapperComponent,\n    DatatableRowDetailDirective,\n    DatatableGroupHeaderDirective,\n    DatatableRowDetailTemplateDirective,\n    DataTableBodyCellComponent,\n    DataTableSelectionComponent,\n    DataTableColumnHeaderDirective,\n    DataTableColumnCellDirective,\n    DataTableColumnCellTreeToggle,\n    DatatableFooterDirective,\n    DatatableGroupHeaderTemplateDirective,\n    DataTableSummaryRowComponent\n  ],\n  exports: [\n    DatatableComponent,\n    DatatableRowDetailDirective,\n    DatatableGroupHeaderDirective,\n    DatatableRowDetailTemplateDirective,\n    DataTableColumnDirective,\n    DataTableColumnHeaderDirective,\n    DataTableColumnCellDirective,\n    DataTableColumnCellTreeToggle,\n    DataTableFooterTemplateDirective,\n    DatatableFooterDirective,\n    DataTablePagerComponent,\n    DatatableGroupHeaderTemplateDirective\n  ]\n})\nexport class NgxDatatableModule {\n  /**\n   * Configure global configuration via INgxDatatableConfig\n   * @param configuration\n   */\n  static forRoot(configuration: INgxDatatableConfig): ModuleWithProviders<NgxDatatableModule> {\n    return {\n      ngModule: NgxDatatableModule,\n      providers: [{ provide: 'configuration', useValue: configuration }]\n    };\n  }\n}\n\n/**\n * Interface definition for INgxDatatableConfig global configuration\n */\nexport interface INgxDatatableConfig {\n  messages: {\n    emptyMessage: string; // Message to show when array is presented, but contains no values\n    totalMessage: string; // Footer total message\n    selectedMessage: string; // Footer selected message\n  };\n}\n","export enum ClickType {\n  single = 'single',\n  double = 'double'\n}\n","if (typeof document !== 'undefined' && !document.elementsFromPoint) {\n  document.elementsFromPoint = elementsFromPoint;\n}\n\n/*tslint:disable*/\n/**\n * Polyfill for `elementsFromPoint`\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/elementsFromPoint\n * https://gist.github.com/iddan/54d5d9e58311b0495a91bf06de661380\n * https://gist.github.com/oslego/7265412\n */\nexport function elementsFromPoint(x: number, y: number) {\n  const elements = [];\n  const previousPointerEvents = [];\n  let current: any; // TODO: window.getComputedStyle should be used with inferred type (Element)\n  let i;\n  let d;\n\n  //if (document === undefined) return elements;\n\n  // get all elements via elementFromPoint, and remove them from hit-testing in order\n  while ((current = document.elementFromPoint(x, y)) && elements.indexOf(current) === -1 && current != null) {\n    // push the element and its current style\n    elements.push(current);\n    previousPointerEvents.push({\n      value: current.style.getPropertyValue('pointer-events'),\n      priority: current.style.getPropertyPriority('pointer-events')\n    });\n\n    // add \"pointer-events: none\", to get to the underlying element\n    current.style.setProperty('pointer-events', 'none', 'important');\n  }\n\n  // restore the previous pointer-events values\n  for (i = previousPointerEvents.length; (d = previousPointerEvents[--i]); ) {\n    elements[i].style.setProperty('pointer-events', d.value ? d.value : '', d.priority);\n  }\n\n  // return our results\n  return elements;\n}\n/*tslint:enable*/\n","/*\n * Public API Surface of ngx-datatable\n */\n\n// components\nexport * from './lib/ngx-datatable.module';\nexport * from './lib/components/datatable.component';\nexport * from './lib/components/header/header.component';\nexport * from './lib/components/header/header-cell.component';\nexport * from './lib/components/body/body.component';\nexport * from './lib/components/body/body-cell.component';\nexport * from './lib/components/body/body-row.component';\nexport * from './lib/components/body/progress-bar.component';\nexport * from './lib/components/body/scroller.component';\nexport * from './lib/components/body/body-row-wrapper.component';\nexport * from './lib/components/body/selection.component';\nexport * from './lib/components/body/body-group-header.directive';\nexport * from './lib/components/body/body-group-header-template.directive';\nexport * from './lib/components/body/summary/summary-row.component';\nexport * from './lib/components/footer/footer.component';\nexport * from './lib/components/footer/pager.component';\nexport * from './lib/components/footer/footer.directive';\nexport * from './lib/components/footer/footer-template.directive';\nexport * from './lib/components/columns/column.directive';\nexport * from './lib/components/columns/column-header.directive';\nexport * from './lib/components/columns/column-cell.directive';\nexport * from './lib/components/columns/tree.directive';\nexport * from './lib/components/row-detail/row-detail.directive';\nexport * from './lib/components/row-detail/row-detail-template.directive';\n\n// directives\nexport * from './lib/directives/draggable.directive';\nexport * from './lib/directives/long-press.directive';\nexport * from './lib/directives/orderable.directive';\nexport * from './lib/directives/resizeable.directive';\nexport * from './lib/directives/visibility.directive';\n\n// services\nexport * from './lib/services/scrollbar-helper.service';\nexport * from './lib/services/dimensions-helper.service';\nexport * from './lib/services/column-changes.service';\n\n// types\nexport * from './lib/types/column-mode.type';\nexport * from './lib/types/sort.type';\nexport * from './lib/types/sort-direction.type';\nexport * from './lib/types/selection.type';\nexport * from './lib/types/click.type';\nexport * from './lib/types/table-column.type';\nexport * from './lib/types/sort-prop-dir.type';\nexport * from './lib/types/contextmenu.type';\n\n// utils\nexport * from './lib/utils/id';\nexport * from './lib/utils/column';\nexport * from './lib/utils/column-prop-getters';\nexport * from './lib/utils/camel-case';\nexport * from './lib/utils/keys';\nexport * from './lib/utils/math';\nexport * from './lib/utils/prefixes';\nexport * from './lib/utils/selection';\nexport * from './lib/utils/translate';\nexport * from './lib/utils/throttle';\nexport * from './lib/utils/sort';\nexport * from './lib/utils/row-height-cache';\nexport * from './lib/utils/column-helper';\nexport * from './lib/utils/elm-from-point';\nexport * from './lib/utils/tree';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"sourceRoot":"webpack:///"}
{"version":3,"sources":["./src/app/taskboard-ngrx/taskboard-ngrx-routing.module.ts","./src/app/taskboard-ngrx/taskboard-ngrx.component.ts","./src/app/taskboard-ngrx/taskboard-ngrx.component.html","./src/app/taskboard-ngrx/taskboard-ngrx.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEa;;;AAEpE,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACP,SAAS,EAAE,gFAAsB;QAClC,IAAI,EAAE;YACJ,KAAK,EAAE,WAAW;SACnB;KAEF;CACF,CAAC;AAEF;IAAA;KAI2C;6GAA9B,0BAA0B;kLAA1B,0BAA0B,kBAH5B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;qCAlBxB;CAoB2C;AAAJ;mIAA1B,0BAA0B,uFAF3B,4DAAY;6FAEX,0BAA0B;cAJtC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmJ;AACrG;AAEV;AAGyB;AAGhB;AACS;AAC6B;;;;;;;;;IC6BvE,oEAAuC;IAAA,uDAAoB;IAAA,4DAAI;;;IAAxB,0DAAoB;IAApB,oFAAoB;;;IAC3D,0EAEE;IAAA,qEACF;IAAA,4DAAM;;;IADC,0DAAwB;IAAxB,iJAAwB;;;IAI3B,0EAA+C;IAAA,mEAA6B;IAAA,uDAAkB;IAAA,4DAAM;;;IAAxB,0DAAkB;IAAlB,kFAAkB;;;IAC9F,0EAAkD;IAAA,mEACX;IAAA,uDAAqB;IAAA,4DAAM;;;IAA3B,0DAAqB;IAArB,qFAAqB;;;IAC5D,sEAAkC;IAAA,mEAA4B;IAAA,uDAAkB;IAAA,4DAAM;;;IAAxB,0DAAkB;IAAlB,kFAAkB;;;IAGhF,qEACE;IAAA,qEACF;IAAA,4DAAK;;;IADyB,0DAAW;IAAX,qIAAW;;;IAF3C,yEACE;IAAA,8HACE;IAEJ,4DAAK;;;IAHC,0DAAmC;IAAnC,uFAAmC;;;IAKvC,qEACE;IAAA,uEAAiF;IAAA,uDAAc;IAAA,4DAAO;IACxG,4DAAK;;;IADG,0DAA0E;IAA1E,gJAA0E;IAAC,0DAAc;IAAd,+EAAc;;;IAFnG,yEACE;IAAA,8HACE;IAEJ,4DAAK;;;IAHC,0DAAqC;IAArC,uFAAqC;;;;IA3BjD,0EACE;IAAA,0EACE;IAAA,0EACE;IAAA,uEAAiD;IAAA,uDAAkB;IAAA,4DAAO;IAC1E,sEACE;IAAA,wEAA6E;IAA9B,0VAAyB;IAAC,4DAAI;IAC7E,wEAAmF;IAAvC,mWAAkC;IAAC,4DAAI;IACrF,4DAAM;IACR,4DAAM;IACN,sHAAuC;IACvC,0HAEE;IAEF,2EACE;IAAA,2EACE;IAAA,4HAA+C;IAC/C,4HAAkD;IAElD,4HAAkC;IACpC,4DAAM;IACN,0HACE;IAIF,0HACE;IAIJ,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IAjCqD,oFAA4B;IAG3E,0DAA0C;IAA1C,+GAA0C;IAAC,0DAAkB;IAAlB,kFAAkB;IAMlE,0DAAmC;IAAnC,gGAAmC;IACjC,0DAAoC;IAApC,iGAAoC;IAMnB,0DAA4B;IAA5B,yFAA4B;IAC5B,0DAA+B;IAA/B,4FAA+B;IAE5C,0DAA4B;IAA5B,yFAA4B;IAEgC,0DAAsB;IAAtB,mFAAsB;IAKtB,0DAAuB;IAAvB,oFAAuB;;;IA4B5F,oEAAuC;IAAA,uDAAoB;IAAA,4DAAI;;;IAAxB,0DAAoB;IAApB,qFAAoB;;;IAC3D,0EAEE;IAAA,qEACF;IAAA,4DAAM;;;IADC,0DAAwB;IAAxB,kJAAwB;;;IAI3B,0EAA+C;IAAA,mEAA6B;IAAA,uDAAkB;IAAA,4DAAM;;;IAAxB,0DAAkB;IAAlB,mFAAkB;;;IAC9F,0EAAkD;IAAA,mEACX;IAAA,uDAAqB;IAAA,4DAAM;;;IAA3B,0DAAqB;IAArB,sFAAqB;;;IAC5D,sEAAkC;IAAA,mEAA4B;IAAA,uDAAkB;IAAA,4DAAM;;;IAAxB,0DAAkB;IAAlB,mFAAkB;;;IAGhF,qEACE;IAAA,qEACF;IAAA,4DAAK;;;IADyB,0DAAW;IAAX,qIAAW;;;IAF3C,yEACE;IAAA,8HACE;IAEJ,4DAAK;;;IAHC,0DAAmC;IAAnC,wFAAmC;;;IAKvC,qEACE;IAAA,uEAAiF;IAAA,uDAAc;IAAA,4DAAO;IACxG,4DAAK;;;IADG,0DAA0E;IAA1E,gJAA0E;IAAC,0DAAc;IAAd,+EAAc;;;IAFnG,yEACE;IAAA,8HACE;IAEJ,4DAAK;;;IAHC,0DAAqC;IAArC,wFAAqC;;;;IA3BjD,0EACE;IAAA,0EACE;IAAA,0EACE;IAAA,uEAAiD;IAAA,uDAAkB;IAAA,4DAAO;IAC1E,sEACE;IAAA,wEAA6E;IAA9B,4VAAyB;IAAC,4DAAI;IAC7E,wEAAmF;IAAvC,qWAAkC;IAAC,4DAAI;IACrF,4DAAM;IACR,4DAAM;IACN,sHAAuC;IACvC,0HAEE;IAEF,2EACE;IAAA,2EACE;IAAA,4HAA+C;IAC/C,4HAAkD;IAElD,4HAAkC;IACpC,4DAAM;IACN,0HACE;IAIF,0HACE;IAIJ,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IAjCuD,qFAA4B;IAG7E,0DAA0C;IAA1C,gHAA0C;IAAC,0DAAkB;IAAlB,mFAAkB;IAMlE,0DAAmC;IAAnC,iGAAmC;IACjC,0DAAoC;IAApC,kGAAoC;IAMnB,0DAA4B;IAA5B,0FAA4B;IAC5B,0DAA+B;IAA/B,6FAA+B;IAE5C,0DAA4B;IAA5B,0FAA4B;IAEgC,0DAAsB;IAAtB,oFAAsB;IAKtB,0DAAuB;IAAvB,qFAAuB;;;IA4B5F,oEAAuC;IAAA,uDAAoB;IAAA,4DAAI;;;IAAxB,0DAAoB;IAApB,qFAAoB;;;IAC3D,0EAEE;IAAA,qEACF;IAAA,4DAAM;;;IADC,0DAAwB;IAAxB,kJAAwB;;;IAI3B,0EAA+C;IAAA,mEAA6B;IAAA,uDAAkB;IAAA,4DAAM;;;IAAxB,0DAAkB;IAAlB,mFAAkB;;;IAC9F,0EAAkD;IAAA,mEACX;IAAA,uDAAqB;IAAA,4DAAM;;;IAA3B,0DAAqB;IAArB,sFAAqB;;;IAC5D,sEAAkC;IAAA,mEAA4B;IAAA,uDAAkB;IAAA,4DAAM;;;IAAxB,0DAAkB;IAAlB,mFAAkB;;;IAGhF,qEACE;IAAA,qEACF;IAAA,4DAAK;;;IADyB,0DAAW;IAAX,qIAAW;;;IAF3C,yEACE;IAAA,8HACE;IAEJ,4DAAK;;;IAHC,0DAAmC;IAAnC,wFAAmC;;;IAKvC,qEACE;IAAA,uEAAiF;IAAA,uDAAc;IAAA,4DAAO;IACxG,4DAAK;;;IADG,0DAA0E;IAA1E,gJAA0E;IAAC,0DAAc;IAAd,+EAAc;;;IAFnG,yEACE;IAAA,8HACE;IAEJ,4DAAK;;;IAHC,0DAAqC;IAArC,wFAAqC;;;;IA3BjD,0EACE;IAAA,0EACE;IAAA,0EACE;IAAA,uEAAiD;IAAA,uDAAkB;IAAA,4DAAO;IAC1E,sEACE;IAAA,wEAA6E;IAA9B,4VAAyB;IAAC,4DAAI;IAC7E,wEAAmF;IAAvC,qWAAkC;IAAC,4DAAI;IACrF,4DAAM;IACR,4DAAM;IACN,sHAAuC;IACvC,0HAEE;IAEF,2EACE;IAAA,2EACE;IAAA,4HAA+C;IAC/C,4HAAkD;IAElD,4HAAkC;IACpC,4DAAM;IACN,0HACE;IAIF,0HACE;IAIJ,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IAjCsD,qFAA4B;IAG5E,0DAA0C;IAA1C,gHAA0C;IAAC,0DAAkB;IAAlB,mFAAkB;IAMlE,0DAAmC;IAAnC,iGAAmC;IACjC,0DAAoC;IAApC,kGAAoC;IAMnB,0DAA4B;IAA5B,0FAA4B;IAC5B,0DAA+B;IAA/B,6FAA+B;IAE5C,0DAA4B;IAA5B,0FAA4B;IAEgC,0DAAsB;IAAtB,oFAAsB;IAKtB,0DAAuB;IAAvB,qFAAuB;;;IA4B5F,oEAAuC;IAAA,uDAAoB;IAAA,4DAAI;;;IAAxB,0DAAoB;IAApB,qFAAoB;;;IAC3D,0EAEE;IAAA,qEACF;IAAA,4DAAM;;;IADC,0DAAwB;IAAxB,kJAAwB;;;IAI3B,0EAA+C;IAAA,mEAA6B;IAAA,uDAAkB;IAAA,4DAAM;;;IAAxB,0DAAkB;IAAlB,mFAAkB;;;IAC9F,0EAAkD;IAAA,mEACX;IAAA,uDAAqB;IAAA,4DAAM;;;IAA3B,0DAAqB;IAArB,sFAAqB;;;IAC5D,sEAAkC;IAAA,mEAA4B;IAAA,uDAAkB;IAAA,4DAAM;;;IAAxB,0DAAkB;IAAlB,mFAAkB;;;IAGhF,qEACE;IAAA,qEACF;IAAA,4DAAK;;;IADyB,0DAAW;IAAX,qIAAW;;;IAF3C,yEACE;IAAA,8HACE;IAEJ,4DAAK;;;IAHC,0DAAmC;IAAnC,wFAAmC;;;IAKvC,qEACE;IAAA,uEAAiF;IAAA,uDAAc;IAAA,4DAAO;IACxG,4DAAK;;;IADG,0DAA0E;IAA1E,gJAA0E;IAAC,0DAAc;IAAd,+EAAc;;;IAFnG,yEACE;IAAA,8HACE;IAEJ,4DAAK;;;IAHC,0DAAqC;IAArC,wFAAqC;;;;IA3BjD,0EACE;IAAA,0EACE;IAAA,0EACE;IAAA,uEAAiD;IAAA,uDAAkB;IAAA,4DAAO;IAC1E,sEACE;IAAA,wEAA6E;IAA9B,4VAAyB;IAAC,4DAAI;IAC7E,wEAAmF;IAAvC,qWAAkC;IAAC,4DAAI;IACrF,4DAAM;IACR,4DAAM;IACN,sHAAuC;IACvC,0HAEE;IAEF,2EACE;IAAA,2EACE;IAAA,4HAA+C;IAC/C,4HAAkD;IAElD,4HAAkC;IACpC,4DAAM;IACN,0HACE;IAIF,0HACE;IAIJ,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IAjCsD,qFAA4B;IAG5E,0DAA0C;IAA1C,gHAA0C;IAAC,0DAAkB;IAAlB,mFAAkB;IAMlE,0DAAmC;IAAnC,iGAAmC;IACjC,0DAAoC;IAApC,kGAAoC;IAMnB,0DAA4B;IAA5B,0FAA4B;IAC5B,0DAA+B;IAA/B,6FAA+B;IAE5C,0DAA4B;IAA5B,0FAA4B;IAEgC,0DAAsB;IAAtB,oFAAsB;IAKtB,0DAAuB;IAAvB,qFAAuB;;ADnLxG;IAuBE,gCAAoB,KAAiB,EAAU,cAA8B,EAAU,KAA8B,EAC3G,GAAsB,EAAU,YAAsB;QAD5C,UAAK,GAAL,KAAK,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAyB;QAC3G,QAAG,GAAH,GAAG,CAAmB;QAAU,iBAAY,GAAZ,YAAY,CAAU;QAVhE,QAAG,GAAG,YAAY,CAAC;IAYnB,CAAC;IAED,yCAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK;aAC3B,MAAM,CAAC,MAAM,CAAC;aACd,SAAS,CAAC,cAAI;YACb,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxB,KAAI,CAAC,SAAS,EAAE,CAAC;YACjB,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,CAAC;iBAC/B,SAAS,CAAC,UAAC,EAAc;oBAAZ,EAAE,UAAE,MAAM;gBACtB,KAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC;YAC9D,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0CAAS,GAAT;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,IAAU,IAAK,WAAI,CAAC,MAAM,KAAK,WAAW,EAA3B,CAA2B,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,IAAU,IAAK,WAAI,CAAC,MAAM,KAAK,cAAc,EAA9B,CAA8B,CAAC,CAAC;QAC1F,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,IAAU,IAAK,WAAI,CAAC,MAAM,KAAK,YAAY,EAA5B,CAA4B,CAAC,CAAC;QACvF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,IAAU,IAAK,WAAI,CAAC,MAAM,KAAK,YAAY,EAA5B,CAA4B,CAAC,CAAC;QACvF,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;IAC1B,CAAC;IAED,wCAAO,GAAP;QAAA,iBAaC;QAZC,IAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gGAAkB,CAAC,CAAC;QAC5D,QAAQ,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,mBAAmB;QACtD,QAAQ,CAAC,iBAAiB,CAAC,IAAI,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC,qBAAqB;QAEtG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,MAAM;YAE1B,IAAI,OAAO,GAAG,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC;YAElE,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,gEAAuB,CAAC,OAAO,CAAC,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;YACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,yCAAQ,GAAR,UAAS,IAAU;QAAnB,iBAmBC;QAlBC,IAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gGAAkB,CAAC,CAAC;QAC5D,QAAQ,CAAC,iBAAiB,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,mBAAmB;QAChE,QAAQ,CAAC,iBAAiB,CAAC,IAAI,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,qBAAqB;QAEhI,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,MAAM;YAE1B,IAAI,UAAU,GAAG,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YAEzC,UAAU,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC;YACpC,UAAU,CAAC,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC;YACxC,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC;YAEhC,KAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QAGrF,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;YACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iDAAgB,GAAhB,UAAiB,EAAU,EAAE,MAAc,EAAE,IAAW;QACtD,IAAI,UAAU,GAAG,SAAS,CAAC;QAE3B,IAAI,MAAM,KAAK,WAAW,EAAE;YAC1B,UAAU,GAAG,SAAS;SACvB;aACI,IAAI,MAAM,KAAK,cAAc,EAAE;YAClC,UAAU,GAAG,SAAS;SACvB;aACI,IAAI,MAAM,KAAK,YAAY,EAAE;YAChC,UAAU,GAAG,SAAS;SACvB;aACI,IAAI,MAAM,KAAK,YAAY,EAAE;YAChC,UAAU,GAAG,MAAM;SACpB;QAED,IAAI,WAAiB,CAAC;QAEtB,IAAI,IAAI,EAAE;YACR,WAAW,GAAG,IAAI,CAAC;SACpB;aACI;YACH,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,KAAK,CAAC,EAAE,EAAhB,CAAgB,CAAC,CAAC;SACtD;QAED,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QAEhD,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC;QAC3B,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC;QAEnC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,KAAK,WAAW,CAAC,MAAM,EAA/B,CAA+B,CAAC,CAAC,CAAC;QAEtF,IAAI,CAAC,KAAK,CAAC,QAAQ,CACjB,IAAI,mEAA0B,CAAC;YAC7B,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,UAAU;SACpB,CAAC,CACH,CAAC;IACJ,CAAC;IAED,2CAAU,GAAV,UAAW,EAAU;QACnB,IAAI,IAAI,GAAS,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,KAAK,EAAE,EAAf,CAAe,CAAC,CAAC;QACvD,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,mEAA0B,CAAC,KAAK,CAAC,CAAC,CAAC;IAC7D,CAAC;IAED,qCAAI,GAAJ,UAAK,KAAa,EAAE,OAAe,EAAE,IAAY;QAE/C,IAAI,UAAU,GAAG,SAAS,CAAC;QAE3B,IAAI,IAAI,KAAK,WAAW,EAAE;YACxB,UAAU,GAAG,SAAS;SACvB;aACI,IAAI,IAAI,KAAK,cAAc,EAAE;YAChC,UAAU,GAAG,SAAS;SACvB;aACI,IAAI,IAAI,KAAK,YAAY,EAAE;YAC9B,UAAU,GAAG,SAAS;SACvB;aACI,IAAI,IAAI,KAAK,YAAY,EAAE;YAC9B,UAAU,GAAG,MAAM;SACpB;QAGD,IAAI,IAAI,GAAS;YACf,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,WAAW,CAAC;YAC/C,SAAS,EAAE,KAAK;YAChB,WAAW,EAAE,OAAO;YACpB,SAAS,EAAE,QAAQ;YACnB,SAAS,EAAE,mBAAmB;YAC9B,UAAU,EAAE,CAAC,0CAA0C,CAAC;YACxD,MAAM,EAAE,IAAI;YACZ,UAAU,EAAE,UAAU;YACtB,WAAW,EAAE,MAAM;YACnB,YAAY,EAAE,EAAE;YAChB,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,IAAI;SAChB;QACD,OAAO,IAAI,CAAC;IAEd,CAAC;IAED,6CAAY,GAAZ,UAAa,IAAI;QAEf,OAAO,IAAI,0DAAI,CACb,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,MAAM,CACZ;IAEH,CAAC;IAED,4CAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;gGArLU,sBAAsB;0GAAtB,sBAAsB;;;;;;;;YCpBnC,6EACE;YAAA,yEACE;YAAA,yEACE;YAAA,yEACE;YAAA,4EACE;YADiD,8IAAS,aAAS,IAAC;YACpE,0EACE;YAAA,kEAA4B;YAC5B,uEAAM;YAAA,iEAAM;YAAA,4DAAO;YACrB,4DAAO;YACT,4DAAS;YACT,4EACE;YAAA,2EACE;YAAA,mEAA8B;YAC9B,wEAAM;YAAA,kEAAM;YAAA,4DAAO;YACrB,4DAAO;YACT,4DAAS;YACX,4DAAM;YACR,4DAAM;YACR,4DAAM;YAEN,0EACE;YAAA,0EACE;YAAA,0EACE;YAAA,2EACE;YAAA,oEAA4B;YAC5B,wEAAM;YAAA,qEAAS;YAAA,4DAAO;YACxB,4DAAO;YACT,4DAAK;YACL,2EAEE;YAAA,uHACE;YAiCJ,4DAAM;YACR,4DAAM;YAEN,0EACE;YAAA,0EACE;YAAA,2EACE;YAAA,oEAA+B;YAC/B,wEAAM;YAAA,wEAAY;YAAA,4DAAO;YAC3B,4DAAO;YACT,4DAAK;YACL,2EACE;YAAA,uHACE;YAiCJ,4DAAM;YACR,4DAAM;YAEN,0EACE;YAAA,0EACE;YAAA,2EACE;YAAA,oEAAmC;YACnC,wEAAM;YAAA,sEAAU;YAAA,4DAAO;YACzB,4DAAO;YACT,4DAAK;YACL,2EACE;YAAA,uHACE;YAiCJ,4DAAM;YACR,4DAAM;YAEN,0EACE;YAAA,0EACE;YAAA,2EACE;YAAA,oEAAiC;YACjC,wEAAM;YAAA,sEAAU;YAAA,4DAAO;YACzB,4DAAO;YACT,4DAAK;YACL,2EACE;YAAA,uHACE;YAiCJ,4DAAM;YACR,4DAAM;YACR,4DAAM;YACR,4DAAU;;YA9K4B,2DAAwB;YAAxB,iFAAwB;YAE/B,0DAAmC;YAAnC,uFAAmC;YA4C5B,0DAAwB;YAAxB,iFAAwB;YAC/B,0DAAqC;YAArC,yFAAqC;YA4C9B,0DAAwB;YAAxB,iFAAwB;YAC/B,0DAAoC;YAApC,wFAAoC;YA4C7B,0DAAwB;YAAxB,iFAAwB;YAC/B,0DAAoC;YAApC,wFAAoC;;iCDtKnE;CA6MC;AAxLkC;6FAAtB,sBAAsB;cARlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,iCAAiC,CAAC;gBAC9C,aAAa,EAAE,+DAAiB,CAAC,IAAI;gBACrC,eAAe,EAAE,qEAAuB,CAAC,MAAM;aAEhD;qYAGyB,aAAa;kBAApC,uDAAS;mBAAC,WAAW;YACI,eAAe;kBAAxC,uDAAS;mBAAC,aAAa;;;;;;;;;;;;;;AExB1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACL;AAEE;AACiC;AAET;AACK;;;;AAGzE;IAAA;KAWoC;sGAAvB,mBAAmB;oKAAnB,mBAAmB,kBAVnB;gBACL,4DAAY;gBACZ,yFAA0B;gBAC1B,yDAAa,CAAC,OAAO,EAAE;gBACvB,uDAAW,CAAC,UAAU,CAAC,MAAM,EAAE,oFAAW,CAAC;aAC9C;8BAjBL;CAsBoC;AAAJ;mIAAnB,mBAAmB,mBAHxB,gFAAsB,aANtB,4DAAY;QACZ,yFAA0B;6FAQrB,mBAAmB;cAX/B,sDAAQ;eAAC;gBACN,OAAO,EAAE;oBACL,4DAAY;oBACZ,yFAA0B;oBAC1B,yDAAa,CAAC,OAAO,EAAE;oBACvB,uDAAW,CAAC,UAAU,CAAC,MAAM,EAAE,oFAAW,CAAC;iBAC9C;gBACD,YAAY,EAAE;oBACV,gFAAsB;iBACzB;aACJ","file":"taskboard-ngrx-taskboard-ngrx-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TaskboardNGRXComponent } from './taskboard-ngrx.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n     component: TaskboardNGRXComponent,\n    data: {\n      title: 'Taskboard'\n    },\n    \n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TaskboardNGRXRoutingModule { }","import { Component, ViewEncapsulation, ViewChild, ElementRef, OnInit, OnDestroy, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Task } from './taskboard-ngrx.model';\n\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\n\nimport * as TaskboadActions from './store/taskboard.actions';\nimport * as fromApp from '../store/app.reducer';\nimport { map } from 'rxjs/operators';\nimport { DragulaService } from 'ng2-dragula';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CrudModalComponent } from 'app/taskboard/crud-modal/crud-modal.component';\n\n@Component({\n  selector: 'app-ngrx-taskboard',\n  templateUrl: './taskboard-ngrx.component.html',\n  styleUrls: ['./taskboard-ngrx.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n\n})\nexport class TaskboardNGRXComponent implements OnInit, OnDestroy {\n\n  @ViewChild('todoTitle') titleInputRef: ElementRef;\n  @ViewChild('todoMessage') messageInputRef: ElementRef;\n  subscription: Subscription;\n\n  BAG = \"task-group\";\n\n\n  tasks: Task[];\n  marketingTasks: Task[];\n  uiDesigningTasks: Task[];\n  developingTasks: Task[];\n  managementTasks: Task[];\n\n  constructor(private elRef: ElementRef, private dragulaService: DragulaService, private store: Store<fromApp.AppState>,\n    private ref: ChangeDetectorRef, private modalService: NgbModal) {\n\n  }\n\n  ngOnInit() {\n    this.subscription = this.store\n      .select('task')\n      .subscribe(data => {\n        this.tasks = data.tasks;\n        this.loadTasks();\n        this.dragulaService.drop(this.BAG)\n          .subscribe(({ el, target }) => {\n            this.updateTaskStatus(el.getAttribute('task-id'), target.id)\n          });\n      });\n  }\n\n  loadTasks() {\n    this.marketingTasks = this.tasks.filter((task: Task) => task.status === 'Marketing');\n    this.uiDesigningTasks = this.tasks.filter((task: Task) => task.status === 'UI-Designing');\n    this.developingTasks = this.tasks.filter((task: Task) => task.status === 'Developing');\n    this.managementTasks = this.tasks.filter((task: Task) => task.status === 'Management');\n    this.ref.markForCheck();\n  }\n\n  addTask() {\n    const modalRef = this.modalService.open(CrudModalComponent);\n    modalRef.componentInstance.id = 0; // should be the id\n    modalRef.componentInstance.data = { title: '', message: '', type: 'Marketing' }; // should be the data\n\n    modalRef.result.then((result) => {\n\n      let newTask = this.task(result.title, result.message, result.type)\n\n      this.store.dispatch(new TaskboadActions.AddTask(newTask));\n    }).catch((error) => {\n      console.log(error);\n    });\n  }\n\n\n  editTask(task: Task) {\n    const modalRef = this.modalService.open(CrudModalComponent);\n    modalRef.componentInstance.id = task.taskId; // should be the id\n    modalRef.componentInstance.data = { title: task.taskTitle, message: task.taskMessage, type: task.status }; // should be the data\n\n    modalRef.result.then((result) => {\n\n      let newTaskObj = this.createObject(task);\n\n      newTaskObj.taskTitle = result.title;\n      newTaskObj.taskMessage = result.message;\n      newTaskObj.status = result.type;\n\n      this.updateTaskStatus(newTaskObj.taskId.toString(), newTaskObj.status, newTaskObj);\n\n\n    }).catch((error) => {\n      console.log(error);\n    });\n  }\n\n  updateTaskStatus(id: string, status: string, task?: Task) {\n    let badgeClass = 'primary';\n\n    if (status === 'Marketing') {\n      badgeClass = 'primary'\n    }\n    else if (status === 'UI-Designing') {\n      badgeClass = 'warning'\n    }\n    else if (status === 'Developing') {\n      badgeClass = 'success'\n    }\n    else if (status === 'Management') {\n      badgeClass = 'info'\n    }\n\n    let currentTask: Task;\n\n    if (task) {\n      currentTask = task;\n    }\n    else {\n      currentTask = this.tasks.find(x => x.taskId === +id);\n    }\n\n    let newTaskObj = this.createObject(currentTask);\n\n    newTaskObj.status = status;\n    newTaskObj.badgeClass = badgeClass;\n\n    let index = this.tasks.indexOf(this.tasks.find(x => x.taskId === currentTask.taskId));\n\n    this.store.dispatch(\n      new TaskboadActions.UpdateTask({\n        index: index,\n        newTask: newTaskObj\n      })\n    );\n  }\n\n  deleteTask(id: number) {\n    let task: Task = this.tasks.find(x => x.taskId === id);\n    let index = this.tasks.indexOf(task);\n    this.store.dispatch(new TaskboadActions.DeleteTask(index));\n  }\n\n  task(title: string, message: string, type: string) {\n\n    let badgeClass = 'primary';\n\n    if (type === 'Marketing') {\n      badgeClass = 'primary'\n    }\n    else if (type === 'UI-Designing') {\n      badgeClass = 'warning'\n    }\n    else if (type === 'Developing') {\n      badgeClass = 'success'\n    }\n    else if (type === 'Management') {\n      badgeClass = 'info'\n    }\n\n\n    let task: Task = {\n      taskId: Math.round(Math.random() * 10000000000),\n      taskTitle: title,\n      taskMessage: message,\n      createdOn: 'Nov 12',\n      createdBy: 'Elizabeth Elliott',\n      assignedTo: ['assets/img/portrait/small/avatar-s-4.png'],\n      status: type,\n      badgeClass: badgeClass,\n      messageType: 'text',\n      messageCount: '',\n      linkCount: '',\n      isUserImg: true,\n    }\n    return task;\n\n  }\n\n  createObject(task) {\n\n    return new Task(\n      task.taskId,\n      task.taskTitle,\n      task.badgeClass,\n      task.taskMessage,\n      task.messageType,\n      task.messageCount,\n      task.linkCount,\n      task.createdOn,\n      task.createdBy,\n      task.assignedTo,\n      task.isUserImg,\n      task.status\n    )\n\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n\n}\n","<!-- Taskboard Starts -->\n<section id=\"taskboard\" class=\"app-taskboard\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"my-3\">\n        <button type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"addTask()\">\n          <span class=\"d-flex align-items-center\">\n            <i class=\"ft-plus mr-1\"></i>\n            <span>Create</span>\n          </span>\n        </button>\n        <button type=\"button\" class=\"btn bg-light-primary\">\n          <span class=\"d-flex align-items-center\">\n            <i class=\"ft-filter mr-1\"></i>\n            <span>Filter</span>\n          </span>\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-xl-3 col-sm-6 col-12\">\n      <h5 class=\"mt-2 mb-0\">\n        <span class=\"d-flex align-items-center\">\n          <i class=\"ft-cast mr-2\"></i>\n          <span>Marketing</span>\n        </span>\n      </h5>\n      <div class='dragdrop-container' [dragula]='\"task-group\"' id=\"Marketing\" [dragulaModel]='marketingTasks'>\n\n        <div class=\"card mb-3\" *ngFor='let task of marketingTasks' [attr.task-id]=\"task.taskId\">\n          <div class=\"card-body\">\n            <div class=\"d-flex justify-content-between mb-2\">\n              <span class=\"badge bg-light-{{task.badgeClass}}\">{{task.taskTitle}}</span>\n              <div>\n                <i class=\"ft-edit mr-1 primary cursor-pointer\" (click)=\"editTask(task);\"></i>\n                <i class=\"ft-trash-2 danger cursor-pointer\" (click)=\"deleteTask(task.taskId);\"></i>\n              </div>\n            </div>\n            <p *ngIf=\"task.messageType === 'text'\">{{task.taskMessage}}</p>\n            <div *ngIf=\"task.messageType === 'image'\"\n              class=\"d-flex justify-content-center overflow-hidden rounded my-3\">\n              <img [src]=\"task.taskMessage\" alt=\"ToDo Pic\" height=\"350\">\n            </div>\n            <div class=\"d-flex justify-content-between align-items-center\">\n              <div class=\"d-flex font-small-2\">\n                <div class=\"mr-2\" *ngIf=\"task.createdOn != ''\"><i class=\"ft-clock mr-1\"></i>{{task.createdOn}}</div>\n                <div class=\"mr-2\" *ngIf=\"task.messageCount != ''\"><i\n                    class=\"ft-message-square mr-1\"></i>{{task.messageCount}}</div>\n                <div *ngIf=\"task.linkCount != ''\"><i class=\"ft-link mr-1\"></i>{{task.linkCount}}</div>\n              </div>\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"task.isUserImg\">\n                <li *ngFor=\"let img of task.assignedTo\">\n                  <img class=\"rounded-circle\" [src]=\"img\" alt=\"Avatar\" height=\"24\" width=\"24\">\n                </li>\n              </ul>\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"!task.isUserImg\">\n                <li *ngFor=\"let badge of task.assignedTo\">\n                  <span class=\"badge badge-pill badge-round bg-light-{{badge.class}} font-small-1\">{{badge.name}}</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-xl-3 col-sm-6 col-12\">\n      <h5 class=\"mt-2 mb-0\">\n        <span class=\"d-flex align-items-center\">\n          <i class=\"ft-codepen mr-2\"></i>\n          <span>UI Designing</span>\n        </span>\n      </h5>\n      <div class='dragdrop-container' [dragula]='\"task-group\"' id=\"UI-Designing\" [dragulaModel]='uiDesigningTasks'>\n        <div class=\"card mb-3\" *ngFor='let task of uiDesigningTasks' [attr.task-id]=\"task.taskId\">\n          <div class=\"card-body\">\n            <div class=\"d-flex justify-content-between mb-2\">\n              <span class=\"badge bg-light-{{task.badgeClass}}\">{{task.taskTitle}}</span>\n              <div>\n                <i class=\"ft-edit mr-1 primary cursor-pointer\" (click)=\"editTask(task);\"></i>\n                <i class=\"ft-trash-2 danger cursor-pointer\" (click)=\"deleteTask(task.taskId);\"></i>\n              </div>\n            </div>\n            <p *ngIf=\"task.messageType === 'text'\">{{task.taskMessage}}</p>\n            <div *ngIf=\"task.messageType === 'image'\"\n              class=\"d-flex justify-content-center overflow-hidden rounded my-3\">\n              <img [src]=\"task.taskMessage\" alt=\"ToDo Pic\" height=\"350\">\n            </div>\n            <div class=\"d-flex justify-content-between align-items-center\">\n              <div class=\"d-flex font-small-2\">\n                <div class=\"mr-2\" *ngIf=\"task.createdOn != ''\"><i class=\"ft-clock mr-1\"></i>{{task.createdOn}}</div>\n                <div class=\"mr-2\" *ngIf=\"task.messageCount != ''\"><i\n                    class=\"ft-message-square mr-1\"></i>{{task.messageCount}}</div>\n                <div *ngIf=\"task.linkCount != ''\"><i class=\"ft-link mr-1\"></i>{{task.linkCount}}</div>\n              </div>\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"task.isUserImg\">\n                <li *ngFor=\"let img of task.assignedTo\">\n                  <img class=\"rounded-circle\" [src]=\"img\" alt=\"Avatar\" height=\"24\" width=\"24\">\n                </li>\n              </ul>\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"!task.isUserImg\">\n                <li *ngFor=\"let badge of task.assignedTo\">\n                  <span class=\"badge badge-pill badge-round bg-light-{{badge.class}} font-small-1\">{{badge.name}}</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-xl-3 col-sm-6 col-12\">\n      <h5 class=\"mt-2 mb-0\">\n        <span class=\"d-flex align-items-center\">\n          <i class=\"ft-trending-up mr-2\"></i>\n          <span>Developing</span>\n        </span>\n      </h5>\n      <div class='dragdrop-container' [dragula]='\"task-group\"' id=\"Developing\" [dragulaModel]='developingTasks'>\n        <div class=\"card mb-3\" *ngFor='let task of developingTasks' [attr.task-id]=\"task.taskId\">\n          <div class=\"card-body\">\n            <div class=\"d-flex justify-content-between mb-2\">\n              <span class=\"badge bg-light-{{task.badgeClass}}\">{{task.taskTitle}}</span>\n              <div>\n                <i class=\"ft-edit mr-1 primary cursor-pointer\" (click)=\"editTask(task);\"></i>\n                <i class=\"ft-trash-2 danger cursor-pointer\" (click)=\"deleteTask(task.taskId);\"></i>\n              </div>\n            </div>\n            <p *ngIf=\"task.messageType === 'text'\">{{task.taskMessage}}</p>\n            <div *ngIf=\"task.messageType === 'image'\"\n              class=\"d-flex justify-content-center overflow-hidden rounded my-3\">\n              <img [src]=\"task.taskMessage\" alt=\"ToDo Pic\" height=\"350\">\n            </div>\n            <div class=\"d-flex justify-content-between align-items-center\">\n              <div class=\"d-flex font-small-2\">\n                <div class=\"mr-2\" *ngIf=\"task.createdOn != ''\"><i class=\"ft-clock mr-1\"></i>{{task.createdOn}}</div>\n                <div class=\"mr-2\" *ngIf=\"task.messageCount != ''\"><i\n                    class=\"ft-message-square mr-1\"></i>{{task.messageCount}}</div>\n                <div *ngIf=\"task.linkCount != ''\"><i class=\"ft-link mr-1\"></i>{{task.linkCount}}</div>\n              </div>\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"task.isUserImg\">\n                <li *ngFor=\"let img of task.assignedTo\">\n                  <img class=\"rounded-circle\" [src]=\"img\" alt=\"Avatar\" height=\"24\" width=\"24\">\n                </li>\n              </ul>\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"!task.isUserImg\">\n                <li *ngFor=\"let badge of task.assignedTo\">\n                  <span class=\"badge badge-pill badge-round bg-light-{{badge.class}} font-small-1\">{{badge.name}}</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-xl-3 col-sm-6 col-12\">\n      <h5 class=\"mt-2 mb-0\">\n        <span class=\"d-flex align-items-center\">\n          <i class=\"ft-briefcase mr-2\"></i>\n          <span>Management</span>\n        </span>\n      </h5>\n      <div class='dragdrop-container' [dragula]='\"task-group\"' id=\"Management\" [dragulaModel]='managementTasks'>\n        <div class=\"card mb-3\" *ngFor='let task of managementTasks' [attr.task-id]=\"task.taskId\">\n          <div class=\"card-body\">\n            <div class=\"d-flex justify-content-between mb-2\">\n              <span class=\"badge bg-light-{{task.badgeClass}}\">{{task.taskTitle}}</span>\n              <div>\n                <i class=\"ft-edit mr-1 primary cursor-pointer\" (click)=\"editTask(task);\"></i>\n                <i class=\"ft-trash-2 danger cursor-pointer\" (click)=\"deleteTask(task.taskId);\"></i>\n              </div>\n            </div>\n            <p *ngIf=\"task.messageType === 'text'\">{{task.taskMessage}}</p>\n            <div *ngIf=\"task.messageType === 'image'\"\n              class=\"d-flex justify-content-center overflow-hidden rounded my-3\">\n              <img [src]=\"task.taskMessage\" alt=\"ToDo Pic\" height=\"350\">\n            </div>\n            <div class=\"d-flex justify-content-between align-items-center\">\n              <div class=\"d-flex font-small-2\">\n                <div class=\"mr-2\" *ngIf=\"task.createdOn != ''\"><i class=\"ft-clock mr-1\"></i>{{task.createdOn}}</div>\n                <div class=\"mr-2\" *ngIf=\"task.messageCount != ''\"><i\n                    class=\"ft-message-square mr-1\"></i>{{task.messageCount}}</div>\n                <div *ngIf=\"task.linkCount != ''\"><i class=\"ft-link mr-1\"></i>{{task.linkCount}}</div>\n              </div>\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"task.isUserImg\">\n                <li *ngFor=\"let img of task.assignedTo\">\n                  <img class=\"rounded-circle\" [src]=\"img\" alt=\"Avatar\" height=\"24\" width=\"24\">\n                </li>\n              </ul>\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"!task.isUserImg\">\n                <li *ngFor=\"let badge of task.assignedTo\">\n                  <span class=\"badge badge-pill badge-round bg-light-{{badge.class}} font-small-1\">{{badge.name}}</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- Taskboard Ends -->\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\nimport { StoreModule } from '@ngrx/store';\n\nimport { DragulaModule } from 'ng2-dragula';\nimport { TaskboardNGRXRoutingModule } from \"./taskboard-ngrx-routing.module\";\n\nimport { TaskboardNGRXComponent } from \"./taskboard-ngrx.component\";\nimport { taskReducer } from '../taskboard-ngrx/store/taskboard.reducers';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TaskboardNGRXRoutingModule,\n        DragulaModule.forRoot(),\n        StoreModule.forFeature('task', taskReducer)\n    ],\n    declarations: [\n        TaskboardNGRXComponent\n    ]\n})\nexport class TaskboardNGRXModule { }\n"],"sourceRoot":"webpack:///"}
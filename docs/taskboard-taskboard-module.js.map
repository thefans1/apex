{"version":3,"sources":["./src/app/taskboard/taskboard-routing.module.ts","./src/app/taskboard/taskboard.component.ts","./src/app/taskboard/taskboard.component.html","./src/app/taskboard/taskboard.model.ts","./src/app/taskboard/taskboard.module.ts","./src/app/taskboard/taskboard.service.ts"],"names":[],"mappings":"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","file":"taskboard-taskboard-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TaskboardComponent } from './taskboard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n     component: TaskboardComponent,\n    data: {\n      title: 'Taskboard'\n    },\n    \n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TaskboardRoutingModule { }","import { Component, ViewEncapsulation, ViewChild, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { TaskBoardService } from './taskboard.service';\nimport { CrudModalComponent } from './crud-modal/crud-modal.component';\nimport { Task } from './taskboard.model';\nimport { DragulaService } from 'ng2-dragula';\n\n@Component({\n  selector: 'app-taskboard',\n  templateUrl: './taskboard.component.html',\n  styleUrls: ['./taskboard.component.scss'],\n  providers: [TaskBoardService],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TaskboardComponent {\n\n  @ViewChild('marketingTitle') titleInputRef: ElementRef;\n  @ViewChild('marketingMessage') messageInputRef: ElementRef;\n\n  BAG = \"task-group\";\n\n  tasks: Task[];\n  marketingTasks: Task[];\n  uiDesigningTasks: Task[];\n  developingTasks: Task[];\n  managementTasks: Task[];\n\n  constructor(private dragulaService: DragulaService, private elRef: ElementRef,\n     private taskBoardService: TaskBoardService, private modalService: NgbModal,\n     private ref: ChangeDetectorRef) {\n    this.tasks = this.taskBoardService.tasks;\n    this.loadTasks();\n    dragulaService.drop(this.BAG)\n      .subscribe(({ el, target }) => {\n        this.updateTaskStatus(el.getAttribute('task-id'), target.id)\n      });\n  }\n\n  loadTasks() {\n    this.marketingTasks = this.tasks.filter((task: Task) => task.status === 'Marketing');\n    this.uiDesigningTasks = this.tasks.filter((task: Task) => task.status === 'UI-Designing');\n    this.developingTasks = this.tasks.filter((task: Task) => task.status === 'Developing');\n    this.managementTasks = this.tasks.filter((task: Task) => task.status === 'Management');\n    this.ref.markForCheck();\n  }\n\n  editTask(task: Task) {\n    const modalRef = this.modalService.open(CrudModalComponent);\n    modalRef.componentInstance.id = task.taskId; // should be the id\n    modalRef.componentInstance.data = { title: task.taskTitle, message: task.taskMessage, type: task.status }; // should be the data\n\n    modalRef.result.then((result) => {\n\n      task.taskTitle = result.title;\n      task.taskMessage = result.message;\n      task.status = result.type;\n\n      this.updateTaskStatus(task.taskId.toString(), task.status, task);\n\n\n    }).catch((error) => {\n      console.log(error);\n    });\n  }\n\n  updateTaskStatus(id: string, status: string, task?: Task) {\n    let badgeClass = 'primary';\n\n    if (status === 'Marketing') {\n      badgeClass = 'primary'\n    }\n    else if (status === 'UI-Designing') {\n      badgeClass = 'warning'\n    }\n    else if (status === 'Developing') {\n      badgeClass = 'success'\n    }\n    else if (status === 'Management') {\n      badgeClass = 'info'\n    }\n\n    let currentTask: Task;\n\n    if (task) {\n      currentTask = task;\n    }\n    else {\n      currentTask = this.tasks.find(x => x.taskId === +id);\n    }\n\n    let index = this.tasks.indexOf(currentTask);\n    currentTask.status = status;\n    currentTask.badgeClass = badgeClass;\n    this.tasks.splice(index, 1, currentTask);\n    this.tasks = [...this.tasks];\n    this.loadTasks();\n  }\n\n  deleteTask(id: number) {\n    let task: Task = this.tasks.find(x => x.taskId === id);\n    let index = this.tasks.indexOf(task);\n    this.tasks.splice(index, 1);\n    this.tasks = [...this.tasks];\n    this.loadTasks();\n  }\n\n  addTask() {\n    const modalRef = this.modalService.open(CrudModalComponent);\n    modalRef.componentInstance.id = 0; // should be the id\n    modalRef.componentInstance.data = { title: '', message: '', type: 'Marketing' }; // should be the data\n\n    modalRef.result.then((result) => {\n      this.taskBoardService.addNewTask(result.title, result.message, result.type).subscribe(data => {\n        this.tasks = data;\n        this.loadTasks();\n      });\n    }).catch((error) => {\n      console.log(error);\n    });\n  }\n\n\n}\n","<!-- Taskboard Starts -->\n<section id=\"taskboard\" class=\"app-taskboard\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"my-3\">\n        <button type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"addTask()\">\n          <span class=\"d-flex align-items-center\">\n            <i class=\"ft-plus mr-1\"></i>\n            <span>Create</span>\n          </span>\n        </button>\n        <button type=\"button\" class=\"btn bg-light-primary\">\n          <span class=\"d-flex align-items-center\">\n            <i class=\"ft-filter mr-1\"></i>\n            <span>Filter</span>\n          </span>\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-xl-3 col-sm-6 col-12\">\n      <h5 class=\"mt-2 mb-0\">\n        <span class=\"d-flex align-items-center\">\n          <i class=\"ft-cast mr-2\"></i>\n          <span>Marketing</span>\n        </span>\n      </h5>\n      <div class='dragdrop-container' [dragula]='\"task-group\"' id=\"Marketing\" [dragulaModel]='marketingTasks'>\n\n        <div class=\"card mb-3\" *ngFor='let task of marketingTasks' [attr.task-id]=\"task.taskId\">\n          <div class=\"card-body\">\n            <div class=\"d-flex justify-content-between mb-2\">\n              <span class=\"badge bg-light-{{task.badgeClass}}\">{{task.taskTitle}}</span>\n              <div>\n                <i class=\"ft-edit mr-1 primary cursor-pointer\" (click)=\"editTask(task);\"></i>\n                <i class=\"ft-trash-2 danger cursor-pointer\" (click)=\"deleteTask(task.taskId);\"></i>\n              </div>\n            </div>\n            <p *ngIf=\"task.messageType === 'text'\">{{task.taskMessage}}</p>\n            <div *ngIf=\"task.messageType === 'image'\"\n              class=\"d-flex justify-content-center overflow-hidden rounded my-3\">\n              <img [src]=\"task.taskMessage\" alt=\"ToDo Pic\" height=\"350\">\n            </div>\n            <div class=\"d-flex justify-content-between align-items-center\">\n              <div class=\"d-flex font-small-2\">\n                <div class=\"mr-2\" *ngIf=\"task.createdOn != ''\"><i class=\"ft-clock mr-1\"></i>{{task.createdOn}}</div>\n                <div class=\"mr-2\" *ngIf=\"task.messageCount != ''\"><i\n                    class=\"ft-message-square mr-1\"></i>{{task.messageCount}}</div>\n                <div *ngIf=\"task.linkCount != ''\"><i class=\"ft-link mr-1\"></i>{{task.linkCount}}</div>\n              </div>\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"task.isUserImg\">\n                <li *ngFor=\"let img of task.assignedTo\">\n                  <img class=\"rounded-circle\" [src]=\"img\" alt=\"Avatar\" height=\"24\" width=\"24\">\n                </li>\n              </ul>\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"!task.isUserImg\">\n                <li *ngFor=\"let badge of task.assignedTo\">\n                  <span class=\"badge badge-pill badge-round bg-light-{{badge.class}} font-small-1\">{{badge.name}}</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-xl-3 col-sm-6 col-12\">\n      <h5 class=\"mt-2 mb-0\">\n        <span class=\"d-flex align-items-center\">\n          <i class=\"ft-codepen mr-2\"></i>\n          <span>UI Designing</span>\n        </span>\n      </h5>\n      <div class='dragdrop-container' [dragula]='\"task-group\"' id=\"UI-Designing\" [dragulaModel]='uiDesigningTasks'>\n        <div class=\"card mb-3\" *ngFor='let task of uiDesigningTasks' [attr.task-id]=\"task.taskId\">\n          <div class=\"card-body\">\n            <div class=\"d-flex justify-content-between mb-2\">\n              <span class=\"badge bg-light-{{task.badgeClass}}\">{{task.taskTitle}}</span>\n              <div>\n                <i class=\"ft-edit mr-1 primary cursor-pointer\" (click)=\"editTask(task);\"></i>\n                <i class=\"ft-trash-2 danger cursor-pointer\" (click)=\"deleteTask(task.taskId);\"></i>\n              </div>\n            </div>\n            <p *ngIf=\"task.messageType === 'text'\">{{task.taskMessage}}</p>\n            <div *ngIf=\"task.messageType === 'image'\"\n              class=\"d-flex justify-content-center overflow-hidden rounded my-3\">\n              <img [src]=\"task.taskMessage\" alt=\"ToDo Pic\" height=\"350\">\n            </div>\n            <div class=\"d-flex justify-content-between align-items-center\">\n              <div class=\"d-flex font-small-2\">\n                <div class=\"mr-2\" *ngIf=\"task.createdOn != ''\"><i class=\"ft-clock mr-1\"></i>{{task.createdOn}}</div>\n                <div class=\"mr-2\" *ngIf=\"task.messageCount != ''\"><i\n                    class=\"ft-message-square mr-1\"></i>{{task.messageCount}}</div>\n                <div *ngIf=\"task.linkCount != ''\"><i class=\"ft-link mr-1\"></i>{{task.linkCount}}</div>\n              </div>\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"task.isUserImg\">\n                <li *ngFor=\"let img of task.assignedTo\">\n                  <img class=\"rounded-circle\" [src]=\"img\" alt=\"Avatar\" height=\"24\" width=\"24\">\n                </li>\n              </ul>\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"!task.isUserImg\">\n                <li *ngFor=\"let badge of task.assignedTo\">\n                  <span class=\"badge badge-pill badge-round bg-light-{{badge.class}} font-small-1\">{{badge.name}}</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-xl-3 col-sm-6 col-12\">\n      <h5 class=\"mt-2 mb-0\">\n        <span class=\"d-flex align-items-center\">\n          <i class=\"ft-trending-up mr-2\"></i>\n          <span>Developing</span>\n        </span>\n      </h5>\n      <div class='dragdrop-container' [dragula]='\"task-group\"' id=\"Developing\" [dragulaModel]='developingTasks'>\n        <div class=\"card mb-3\" *ngFor='let task of developingTasks' [attr.task-id]=\"task.taskId\">\n          <div class=\"card-body\">\n            <div class=\"d-flex justify-content-between mb-2\">\n              <span class=\"badge bg-light-{{task.badgeClass}}\">{{task.taskTitle}}</span>\n              <div>\n                <i class=\"ft-edit mr-1 primary cursor-pointer\" (click)=\"editTask(task);\"></i>\n                <i class=\"ft-trash-2 danger cursor-pointer\" (click)=\"deleteTask(task.taskId);\"></i>\n              </div>\n            </div>\n            <p *ngIf=\"task.messageType === 'text'\">{{task.taskMessage}}</p>\n            <div *ngIf=\"task.messageType === 'image'\"\n              class=\"d-flex justify-content-center overflow-hidden rounded my-3\">\n              <img [src]=\"task.taskMessage\" alt=\"ToDo Pic\" height=\"350\">\n            </div>\n            <div class=\"d-flex justify-content-between align-items-center\">\n              <div class=\"d-flex font-small-2\">\n                <div class=\"mr-2\" *ngIf=\"task.createdOn != ''\"><i class=\"ft-clock mr-1\"></i>{{task.createdOn}}</div>\n                <div class=\"mr-2\" *ngIf=\"task.messageCount != ''\"><i\n                    class=\"ft-message-square mr-1\"></i>{{task.messageCount}}</div>\n                <div *ngIf=\"task.linkCount != ''\"><i class=\"ft-link mr-1\"></i>{{task.linkCount}}</div>\n              </div>\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"task.isUserImg\">\n                <li *ngFor=\"let img of task.assignedTo\">\n                  <img class=\"rounded-circle\" [src]=\"img\" alt=\"Avatar\" height=\"24\" width=\"24\">\n                </li>\n              </ul>\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"!task.isUserImg\">\n                <li *ngFor=\"let badge of task.assignedTo\">\n                  <span class=\"badge badge-pill badge-round bg-light-{{badge.class}} font-small-1\">{{badge.name}}</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-xl-3 col-sm-6 col-12\">\n      <h5 class=\"mt-2 mb-0\">\n        <span class=\"d-flex align-items-center\">\n          <i class=\"ft-briefcase mr-2\"></i>\n          <span>Management</span>\n        </span>\n      </h5>\n      <div class='dragdrop-container' [dragula]='\"task-group\"' id=\"Management\" [dragulaModel]='managementTasks'>\n        <div class=\"card mb-3\" *ngFor='let task of managementTasks' [attr.task-id]=\"task.taskId\">\n          <div class=\"card-body\">\n            <div class=\"d-flex justify-content-between mb-2\">\n              <span class=\"badge bg-light-{{task.badgeClass}}\">{{task.taskTitle}}</span>\n              <div>\n                <i class=\"ft-edit mr-1 primary cursor-pointer\" (click)=\"editTask(task);\"></i>\n                <i class=\"ft-trash-2 danger cursor-pointer\" (click)=\"deleteTask(task.taskId);\"></i>\n              </div>\n            </div>\n            <p *ngIf=\"task.messageType === 'text'\">{{task.taskMessage}}</p>\n            <div *ngIf=\"task.messageType === 'image'\"\n              class=\"d-flex justify-content-center overflow-hidden rounded my-3\">\n              <img [src]=\"task.taskMessage\" alt=\"ToDo Pic\" height=\"350\">\n            </div>\n            <div class=\"d-flex justify-content-between align-items-center\">\n              <div class=\"d-flex font-small-2\">\n                <div class=\"mr-2\" *ngIf=\"task.createdOn != ''\"><i class=\"ft-clock mr-1\"></i>{{task.createdOn}}</div>\n                <div class=\"mr-2\" *ngIf=\"task.messageCount != ''\"><i\n                    class=\"ft-message-square mr-1\"></i>{{task.messageCount}}</div>\n                <div *ngIf=\"task.linkCount != ''\"><i class=\"ft-link mr-1\"></i>{{task.linkCount}}</div>\n              </div>\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"task.isUserImg\">\n                <li *ngFor=\"let img of task.assignedTo\">\n                  <img class=\"rounded-circle\" [src]=\"img\" alt=\"Avatar\" height=\"24\" width=\"24\">\n                </li>\n              </ul>\n              <ul class=\"list-unstyled users-list m-0 d-flex align-items-center\" *ngIf=\"!task.isUserImg\">\n                <li *ngFor=\"let badge of task.assignedTo\">\n                  <span class=\"badge badge-pill badge-round bg-light-{{badge.class}} font-small-1\">{{badge.name}}</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- Taskboard Ends -->\n","export class Task {\n    public taskId: number;\n    public taskTitle: string;\n    public badgeClass: string\n    public taskMessage: string;\n    public messageType: string; //text, image\n    public messageCount: string;\n    public linkCount: string;\n    public createdOn: string;\n    public createdBy: string;\n    public assignedTo: any;\n    public isUserImg: boolean;\n    public status: string;\n\n    constructor(taskId: number, taskTitle: string, badgeClass: string, taskMessage: string, messageType: string, messageCount: string,linkCount: string, createdOn: string, createdBy: string, assignedTo: any, isUserImg: boolean, status: string) {\n      this.taskId = taskId;\n      this.taskTitle = taskTitle;\n      this.badgeClass = badgeClass;\n      this.taskMessage = taskMessage;\n      this.messageType = messageType;\n      this.messageCount = messageCount;\n      this.linkCount =linkCount;\n      this.createdOn = createdOn;\n      this.createdBy = createdBy;\n      this.assignedTo = assignedTo;\n      this.isUserImg = isUserImg;\n      this.status = status;\n    }\n  }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\n\nimport { DragulaModule } from 'ng2-dragula';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { TaskboardRoutingModule } from \"./taskboard-routing.module\";\n\nimport { TaskboardComponent } from \"./taskboard.component\";\nimport { CrudModalComponent } from './crud-modal/crud-modal.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TaskboardRoutingModule,\n        DragulaModule.forRoot(),\n        FormsModule,\n        ReactiveFormsModule,\n        NgbModule\n    ],\n    declarations: [\n        TaskboardComponent,\n        CrudModalComponent\n    ]\n})\nexport class TaskboardModule { }\n","import { Injectable } from '@angular/core';\nimport { Task } from './taskboard.model';\nimport { Observable, of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\n\n@Injectable()\nexport class TaskBoardService {\n\n  constructor() { }\n\n  public tasks: Task[] = [\n    new Task(\n      1,\n      'Responsive',\n      'primary',\n      'Check responsive and change SCSS accordingly.',\n      'text',\n      \"1\",\n      \"3\",\n      'Feb 6',\n      'Elizabeth Elliott',\n      ['assets/img/portrait/small/avatar-s-2.png', 'assets/img/portrait/small/avatar-s-3.png'],\n      true,\n      'Marketing'),\n    new Task(\n      2,\n      'Users',\n      'primary',\n      'Companies of all shapes and sizes use Apex.',\n      'text',\n      \"\",\n      \"\",\n      'March 19',\n      'Elizabeth Elliott',\n      [{name: 'E', class: 'warning'}],\n      false,\n      'Marketing'),\n    new Task(\n      3,\n      'Laptops',\n      'primary',\n      'Dell laptops are among the most well known laptops.',\n      'text',\n      \"2\",\n      \"1\",\n      '',\n      'Elizabeth Elliott',\n      ['assets/img/portrait/small/avatar-s-6.png'],\n      true,\n      'Marketing'),\n    new Task(\n      4,\n      'Pick up Jane',\n      'warning',\n      'assets/img/banner/banner-10.jpg',\n      'image',\n      \"\",\n      \"\",\n      '',\n      'Elizabeth Elliott',\n      [],\n      true,\n      'UI-Designing'),\n    new Task(\n      5,\n      'Navigation',\n      'warning',\n      'Design a prototype.',\n      'text',\n      \"\",\n      \"6\",\n      '',\n      'Elizabeth Elliott',\n      ['assets/img/portrait/small/avatar-s-7.png', 'assets/img/portrait/small/avatar-s-8.png', 'assets/img/portrait/small/avatar-s-9.png', 'assets/img/portrait/small/avatar-s-10.png'],\n      true,\n      'UI-Designing'),\n    new Task(\n      6,\n      'Bootstrap 4',\n      'warning',\n      'Bootstrap is an open source toolkit for developing with HTML, CSS, and JS.',\n      'text',\n      \"4\",\n      \"\",\n      'Dec 3',\n      'Elizabeth Elliott',\n      ['assets/img/portrait/small/avatar-s-11.png', 'assets/img/portrait/small/avatar-s-12.png'],\n      true,\n      'UI-Designing'),\n    new Task(\n      7,\n      'Meeting Agenda',\n      'success',\n      'Polish brand idea.',\n      'text',\n      \"3\",\n      \"2\",\n      '',\n      'Elizabeth Elliott',\n      ['assets/img/portrait/small/avatar-s-13.png', 'assets/img/portrait/small/avatar-s-14.png', 'assets/img/portrait/small/avatar-s-15.png'],\n      true,\n      'Developing'),\n    new Task(\n      8,\n      'Angular 9',\n      'success',\n      'Angular is a platform for building mobile and desktop web applications.',\n      'text',\n      \"\",\n      \"\",\n      'Oct 16',\n      'Elizabeth Elliott',\n      ['assets/img/portrait/small/avatar-s-16.png', 'assets/img/portrait/small/avatar-s-17.png'],\n      true,\n      'Developing'),\n    new Task(\n      9,\n      'Task',\n      'success',\n      'Develop & design feedback form.',\n      'text',\n      \"8\",\n      \"\",\n      '',\n      'Elizabeth Elliott',\n      [{name: 'S', class: 'primary'}, {name: 'J', class: 'success'}],\n      false,\n      'Developing'),\n    new Task(\n      10,\n      'Assessment',\n      'info',\n      `Don't let the outtakes take you out!`,\n      'text',\n      \"\",\n      \"\",\n      'Sept 10',\n      'Elizabeth Elliott',\n      ['assets/img/portrait/small/avatar-s-26.png'],\n      true,\n      'Management'),\n    new Task(\n      11,\n      'Photo shoot',\n      'info',\n      'assets/img/banner/banner-22.jpg',\n      'image',\n      \"2\",\n      \"5\",\n      '',\n      'Elizabeth Elliott',\n      [{name: 'L', class: 'secondary'}, {name: 'F', class: 'danger'}, {name: 'T', class: 'info'}],\n      false,\n      'Management'),\n    new Task(\n      12,\n      'Unit tests',\n      'info',\n      'Implement performance improvements.',\n      'text',\n      \"5\",\n      \"4\",\n      'Jan 14',\n      'Elizabeth Elliott',\n      ['assets/img/portrait/small/avatar-s-24.png', 'assets/img/portrait/small/avatar-s-20.png'],\n      true,\n      'Management')\n  ];\n\n\n  addNewTask(title: string, message: string, type: string) {\n\n    let badgeClass = 'primary';\n\n    if(type === 'Marketing') {\n      badgeClass = 'primary'\n    }\n    else if(type === 'UI-Designing') {\n      badgeClass = 'warning'\n    }\n    else if(type === 'Developing') {\n      badgeClass = 'success'\n    }\n    else if(type === 'Management') {\n      badgeClass = 'info'\n    }\n\n\n    let task: Task = {\n      taskId: Math.round(Math.random() * 10000000000),\n      taskTitle: title,\n      taskMessage: message,\n      createdOn: 'Nov 12',\n      createdBy: 'Elizabeth Elliott',\n      assignedTo: ['assets/img/portrait/small/avatar-s-4.png'],\n      status: type,\n      badgeClass: badgeClass,\n      messageType: 'text',\n      messageCount: '',\n      linkCount: '',\n      isUserImg: true,\n    }\n    this.tasks.unshift(task);\n    return of(this.tasks.slice()).pipe(delay(100));\n\n  }\n\n}\n"],"sourceRoot":"webpack:///"}
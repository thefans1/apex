{"version":3,"sources":["ng:/angular-archwizard/lib/directives/wizard-step-symbol.directive.ts","ng:/angular-archwizard/lib/directives/wizard-step-title.directive.ts","ng:/angular-archwizard/lib/util/wizard-step.interface.ts","ng:/angular-archwizard/lib/util/wizard-completion-step.interface.ts","ng:/angular-archwizard/lib/components/wizard-completion-step.component.ts","ng:/angular-archwizard/lib/util/moving-direction.enum.ts","ng:/angular-archwizard/lib/navigation/base-navigation-mode.interface.ts","ng:/angular-archwizard/lib/navigation/configurable-navigation-mode.ts","ng:/angular-archwizard/lib/components/wizard.component.ts","ng:/angular-archwizard/lib/components/wizard-navigation-bar.component.ts","ng:/angular-archwizard/lib/components/wizard-step.component.ts","ng:/angular-archwizard/lib/directives/enable-back-links.directive.ts","ng:/angular-archwizard/lib/util/step-id.interface.ts","ng:/angular-archwizard/lib/util/step-index.interface.ts","ng:/angular-archwizard/lib/util/step-offset.interface.ts","ng:/angular-archwizard/lib/directives/go-to-step.directive.ts","ng:/angular-archwizard/lib/directives/next-step.directive.ts","ng:/angular-archwizard/lib/directives/optional-step.directive.ts","ng:/angular-archwizard/lib/directives/previous-step.directive.ts","ng:/angular-archwizard/lib/directives/reset-wizard.directive.ts","ng:/angular-archwizard/lib/directives/selected-step.directive.ts","ng:/angular-archwizard/lib/directives/wizard-completion-step.directive.ts","ng:/angular-archwizard/lib/directives/wizard-step.directive.ts","ng:/angular-archwizard/lib/directives/navigation-mode.directive.ts","ng:/angular-archwizard/lib/directives/completed-step.directive.ts","ng:/angular-archwizard/lib/archwizard.module.ts","ng:/angular-archwizard/index.ts","ng:/angular-archwizard/angular-archwizard.ts","ng:/ng2-material-dropdown/src/modules/components/button/ng2-dropdown-button.ts","ng:/ng2-material-dropdown/src/modules/components/menu/actions.ts","ng:/ng2-material-dropdown/src/modules/services/ng2-dropdown-state.ts","ng:/ng2-material-dropdown/src/modules/services/dropdown-state.service.ts","ng:/ng2-material-dropdown/src/modules/components/menu-item/ng2-menu-item.ts","ng:/ng2-material-dropdown/src/modules/components/menu/ng2-dropdown-menu.ts","ng:/ng2-material-dropdown/src/modules/components/dropdown/ng2-dropdown.ts","ng:/ng2-material-dropdown/src/modules/ng2-dropdown.module.ts","ng:/ng2-material-dropdown/ng2-material-dropdown.ts","ng:/ngx-chips/core/pipes/highlight.pipe.ts","ng:/ngx-chips/core/constants/index.ts","ng:/ngx-chips/core/providers/drag-provider.ts","ng:/ngx-chips/defaults.ts","ng:/ngx-chips/core/providers/options-provider.ts","ng:/ngx-chips/core/accessor.ts","ng:/ngx-chips/core/helpers/listen.ts","ng:/ngx-chips/components/tag-input-form/tag-input-form.component.ts","ng:/ngx-chips/components/tag/tag-ripple.component.ts","ng:/ngx-chips/components/tag/tag.component.ts","ng:/ngx-chips/components/tag-input/animations.ts","ng:/ngx-chips/components/dropdown/tag-input-dropdown.component.ts","ng:/ngx-chips/components/tag-input/tag-input.ts","ng:/ngx-chips/components/icon/icon.ts","ng:/ngx-chips/tag-input.module.ts","ng:/ngx-chips/ngx-chips.ts","ng:/ngx-custom-validators/src/app/util/lang.ts","ng:/ngx-custom-validators/src/app/array-length/validator.ts","ng:/ngx-custom-validators/src/app/base64/validator.ts","ng:/ngx-custom-validators/src/app/credit-card/validator.ts","ng:/ngx-custom-validators/src/app/date/validator.ts","ng:/ngx-custom-validators/src/app/date-iso/validator.ts","ng:/ngx-custom-validators/src/app/digits/validator.ts","ng:/ngx-custom-validators/src/app/email/validator.ts","ng:/ngx-custom-validators/src/app/equal/validator.ts","ng:/ngx-custom-validators/src/app/equal-to/validator.ts","ng:/ngx-custom-validators/src/app/greater-than/validator.ts","ng:/ngx-custom-validators/src/app/greater-than-equal/validator.ts","ng:/ngx-custom-validators/src/app/json/validator.ts","ng:/ngx-custom-validators/src/app/less-than/validator.ts","ng:/ngx-custom-validators/src/app/less-than-equal/validator.ts","ng:/ngx-custom-validators/src/app/max/validator.ts","ng:/ngx-custom-validators/src/app/max-date/validator.ts","ng:/ngx-custom-validators/src/app/min/validator.ts","ng:/ngx-custom-validators/src/app/min-date/validator.ts","ng:/ngx-custom-validators/src/app/not-equal/validator.ts","ng:/ngx-custom-validators/src/app/not-equal-to/validator.ts","ng:/ngx-custom-validators/src/app/number/validator.ts","ng:/ngx-custom-validators/src/app/property/validator.ts","ng:/ngx-custom-validators/src/app/range/validator.ts","ng:/ngx-custom-validators/src/app/range-length/validator.ts","ng:/ngx-custom-validators/src/app/uuid/validator.ts","ng:/ngx-custom-validators/src/app/url/validator.ts","ng:/ngx-custom-validators/src/app/array-length/directive.ts","ng:/ngx-custom-validators/src/app/base64/directive.ts","ng:/ngx-custom-validators/src/app/credit-card/directive.ts","ng:/ngx-custom-validators/src/app/date/directive.ts","ng:/ngx-custom-validators/src/app/date-iso/directive.ts","ng:/ngx-custom-validators/src/app/digits/directive.ts","ng:/ngx-custom-validators/src/app/email/directive.ts","ng:/ngx-custom-validators/src/app/equal/directive.ts","ng:/ngx-custom-validators/src/app/equal-to/directive.ts","ng:/ngx-custom-validators/src/app/greater-than/directive.ts","ng:/ngx-custom-validators/src/app/greater-than-equal/directive.ts","ng:/ngx-custom-validators/src/app/json/directive.ts","ng:/ngx-custom-validators/src/app/less-than/directive.ts","ng:/ngx-custom-validators/src/app/less-than-equal/directive.ts","ng:/ngx-custom-validators/src/app/max/directive.ts","ng:/ngx-custom-validators/src/app/max-date/directive.ts","ng:/ngx-custom-validators/src/app/min/directive.ts","ng:/ngx-custom-validators/src/app/min-date/directive.ts","ng:/ngx-custom-validators/src/app/not-equal/directive.ts","ng:/ngx-custom-validators/src/app/not-equal-to/directive.ts","ng:/ngx-custom-validators/src/app/number/directive.ts","ng:/ngx-custom-validators/src/app/property/directive.ts","ng:/ngx-custom-validators/src/app/range/directive.ts","ng:/ngx-custom-validators/src/app/range-length/directive.ts","ng:/ngx-custom-validators/src/app/url/directive.ts","ng:/ngx-custom-validators/src/app/uuid/directive.ts","ng:/ngx-custom-validators/src/app/custom-forms.module.ts","ng:/ngx-custom-validators/ngx-custom-validators.ts","../../src/lib/ui-switch/ui-switch.token.ts","../../src/lib/ui-switch/ui-switch.component.ts","../../src/lib/ui-switch/ui-switch.module.ts","./src/app/forms/archwizard/archwizard.component.ts","./src/app/forms/archwizard/archwizard.component.html","./src/app/forms/elements/checkbox/checkbox.component.ts","./src/app/forms/elements/checkbox/checkbox.component.html","./src/app/forms/elements/datepicker/datepicker.component.ts","./src/app/forms/elements/datepicker/datepicker.component.html","./src/app/forms/elements/editor/editor.component.ts","./src/app/forms/elements/editor/editor.component.html","./src/app/forms/elements/input-groups/input-groups.component.ts","./src/app/forms/elements/input-groups/input-groups.component.html","./src/app/forms/elements/inputs/inputs.component.ts","./src/app/forms/elements/inputs/inputs.component.html","./src/app/forms/elements/radio/radio.component.ts","./src/app/forms/elements/radio/radio.component.html","./src/app/forms/elements/select/select.component.ts","./src/app/forms/elements/select/select.component.html","./src/app/forms/elements/switch/switch.component.ts","./src/app/forms/elements/switch/switch.component.html","./src/app/forms/elements/tags-input/tags-input.component.ts","./src/app/forms/elements/tags-input/tags-input.component.html","./src/app/forms/elements/timepicker/timepicker.component.ts","./src/app/forms/elements/timepicker/timepicker.component.html","./src/app/forms/forms-routing.module.ts","./src/app/forms/forms.module.ts","./src/app/forms/layout/layout.component.ts","./src/app/forms/layout/layout.component.html","./src/app/forms/validation/validation-forms.component.ts","./src/app/forms/validation/validation-forms.component.html","./src/app/shared/directives/match-height.directive.ts"],"names":["tslib_1.__decorate","constants.KEYDOWN","constants.KEYUP","constants.MAX_ITEMS_WARNING","constants.KEY_PRESS_ACTIONS","constants.ACTIONS_KEYS","constants.PREV","constants.NEXT"],"mappings":"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","file":"forms-forms-module.js","sourcesContent":["import {Directive, TemplateRef} from '@angular/core';\n\n/**\n * The `awWizardStepSymbol` directive can be used as an alternative to the `navigationSymbol` input of a [[WizardStep]]\n * to define the step symbol inside the navigation bar.  This way step symbol may contain arbitrary content.\n *\n * ### Syntax\n *\n * ```html\n * <ng-template awWizardStepSymbol>\n *     ...\n * </ng-template>\n * ```\n */\n@Directive({\n  selector: 'ng-template[awStepSymbol], ng-template[awWizardStepSymbol]'\n})\nexport class WizardStepSymbolDirective {\n  /**\n   * Constructor\n   *\n   * @param templateRef A reference to the content of the `ng-template` that contains this [[WizardStepSymbolDirective]]\n   */\n  constructor(public templateRef: TemplateRef<any>) {\n  }\n}\n","import {Directive, TemplateRef} from '@angular/core';\n\n/**\n * The `awWizardStepTitle` directive can be used as an alternative to the `stepTitle` input of a [[WizardStep]]\n * to define the content of a step title inside the navigation bar.\n * This step title can be freely created and can contain more than only plain text\n *\n * ### Syntax\n *\n * ```html\n * <ng-template awWizardStepTitle>\n *     ...\n * </ng-template>\n * ```\n *\n * @author Marc Arndt\n */\n@Directive({\n  selector: 'ng-template[awStepTitle], ng-template[awWizardStepTitle]'\n})\nexport class WizardStepTitleDirective {\n  /**\n   * Constructor\n   *\n   * @param templateRef A reference to the content of the `ng-template` that contains this [[WizardStepTitleDirective]]\n   */\n  constructor(public templateRef: TemplateRef<any>) {\n  }\n}\n","import { ContentChild, EventEmitter, HostBinding, Input, Output, Directive } from '@angular/core';\nimport {WizardStepSymbolDirective} from '../directives/wizard-step-symbol.directive';\nimport {WizardStepTitleDirective} from '../directives/wizard-step-title.directive';\nimport {MovingDirection} from './moving-direction.enum';\nimport {NavigationSymbol} from './navigation-symbol.interface';\n\n/**\n * Basic functionality every type of wizard step needs to provide\n *\n * @author Marc Arndt\n */\n@Directive()\nexport abstract class WizardStep {\n  /**\n   * A step title property, which contains the visible header title of the step.\n   * This title is then shown inside the navigation bar.\n   * Compared to `stepTitle` this property can contain any html content and not only plain text\n   */\n  @ContentChild(WizardStepTitleDirective)\n  public stepTitleTemplate: WizardStepTitleDirective;\n\n  /**\n   * A step symbol property that, if defined, overrides `navigationSymbol`.\n   * Allows to display arbitrary content as a step symbol instead of plain text.\n   */\n  @ContentChild(WizardStepSymbolDirective)\n  public stepSymbolTemplate: WizardStepSymbolDirective;\n\n  /**\n   * A step id, unique to the step\n   */\n  @Input()\n  public stepId: string;\n\n  /**\n   * A step title property, which contains the visible header title of the step.\n   * This title is only shown inside the navigation bar, if `stepTitleTemplate` is not defined or null.\n   */\n  @Input()\n  public stepTitle: string;\n\n  /**\n   * A symbol property, which contains an optional symbol for the step inside the navigation bar.\n   * Takes effect when `stepSymbolTemplate` is not defined or null.\n   */\n  @Input()\n  public navigationSymbol: NavigationSymbol = {symbol: ''};\n\n  /**\n   * A boolean describing if the wizard step is currently selected\n   */\n  public selected = false;\n\n  /**\n   * A boolean describing if the wizard step has been completed\n   */\n  public completed = false;\n\n  /**\n   * A boolean describing if the wizard step is shown as completed when the wizard is presented to the user\n   *\n   * Users will typically use `CompletedStepDirective` to set this flag\n   */\n  public initiallyCompleted = false;\n\n  /**\n   * A boolean describing if the wizard step is being edited after being competed\n   *\n   * This flag can only be true when `selected` is true.\n   */\n  public editing = false;\n\n  /**\n   * A boolean describing, if the wizard step should be selected by default, i.e. after the wizard has been initialized as the initial step\n   */\n  public defaultSelected = false;\n\n  /**\n   * A boolean describing if the wizard step is an optional step\n   */\n  public optional = false;\n\n  /**\n   * A function or boolean deciding, if this step can be entered\n   */\n  @Input()\n  public canEnter: ((direction: MovingDirection) => boolean) | ((direction: MovingDirection) => Promise<boolean>) | boolean = true;\n\n  /**\n   * A function or boolean deciding, if this step can be exited\n   */\n  @Input()\n  public canExit: ((direction: MovingDirection) => boolean) | ((direction: MovingDirection) => Promise<boolean>) | boolean = true;\n\n  /**\n   * This [[EventEmitter]] is called when the step is entered.\n   * The bound method should be used to do initialization work.\n   */\n  @Output()\n  public stepEnter: EventEmitter<MovingDirection> = new EventEmitter<MovingDirection>();\n\n  /**\n   * This [[EventEmitter]] is called when the step is exited.\n   * The bound method can be used to do cleanup work.\n   */\n  @Output()\n  public stepExit: EventEmitter<MovingDirection> = new EventEmitter<MovingDirection>();\n\n  /**\n   * Returns true if this wizard step should be visible to the user.\n   * If the step should be visible to the user false is returned, otherwise true\n   */\n  @HostBinding('hidden')\n  public get hidden(): boolean {\n    return !this.selected;\n  }\n\n  /**\n   * This method returns true, if this wizard step can be transitioned with a given direction.\n   * Transitioned in this case means either entered or exited, depending on the given `condition` parameter.\n   *\n   * @param condition A condition variable, deciding if the step can be transitioned\n   * @param direction The direction in which this step should be transitioned\n   * @returns A [[Promise]] containing `true`, if this step can transitioned in the given direction\n   * @throws An `Error` is thrown if `condition` is neither a function nor a boolean\n   */\n  private static canTransitionStep(condition: ((direction: MovingDirection) => boolean) |\n                                     ((direction: MovingDirection) => Promise<boolean>) |\n                                     boolean,\n                                   direction: MovingDirection): Promise<boolean> {\n    if (typeof(condition) === typeof(true)) {\n      return Promise.resolve(condition as boolean);\n    } else if (condition instanceof Function) {\n      return Promise.resolve(condition(direction));\n    } else {\n      return Promise.reject(new Error(`Input value '${condition}' is neither a boolean nor a function`));\n    }\n  }\n\n  /**\n   * A function called when the step is entered\n   *\n   * @param direction The direction in which the step is entered\n   */\n  public enter(direction: MovingDirection): void {\n    this.stepEnter.emit(direction);\n  }\n\n  /**\n   * A function called when the step is exited\n   *\n   * @param direction The direction in which the step is exited\n   */\n  public exit(direction: MovingDirection) {\n    this.stepExit.emit(direction);\n  }\n\n  /**\n   * This method returns true, if this wizard step can be entered from the given direction.\n   * Because this method depends on the value `canEnter`, it will throw an error, if `canEnter` is neither a boolean\n   * nor a function.\n   *\n   * @param direction The direction in which this step should be entered\n   * @returns A [[Promise]] containing `true`, if the step can be entered in the given direction, false otherwise\n   * @throws An `Error` is thrown if `anEnter` is neither a function nor a boolean\n   */\n  public canEnterStep(direction: MovingDirection): Promise<boolean> {\n    return WizardStep.canTransitionStep(this.canEnter, direction);\n  }\n\n  /**\n   * This method returns true, if this wizard step can be exited into given direction.\n   * Because this method depends on the value `canExit`, it will throw an error, if `canExit` is neither a boolean\n   * nor a function.\n   *\n   * @param direction The direction in which this step should be left\n   * @returns A [[Promise]] containing `true`, if the step can be exited in the given direction, false otherwise\n   * @throws An `Error` is thrown if `canExit` is neither a function nor a boolean\n   */\n  public canExitStep(direction: MovingDirection): Promise<boolean> {\n    return WizardStep.canTransitionStep(this.canExit, direction);\n  }\n}\n","import {EventEmitter, Directive} from '@angular/core';\nimport {WizardStep} from './wizard-step.interface';\nimport {MovingDirection} from './moving-direction.enum';\n\n/**\n * Basic functionality every wizard completion step needs to provide\n *\n * @author Marc Arndt\n */\n@Directive()\nexport abstract class WizardCompletionStep extends WizardStep {\n  /**\n   * @inheritDoc\n   */\n  public stepExit = new EventEmitter<MovingDirection>();\n\n  /**\n   * @inheritDoc\n   */\n  public canExit: ((direction: MovingDirection) => boolean) | boolean = false;\n\n  /**\n   * @inheritDoc\n   */\n  public enter(direction: MovingDirection): void {\n    this.completed = true;\n    this.stepEnter.emit(direction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public exit(direction: MovingDirection): void {\n    // set this completion step as incomplete (unless it happens to be initiallyCompleted)\n    this.completed = this.initiallyCompleted;\n    this.stepExit.emit(direction);\n  }\n}\n","import {Component, forwardRef} from '@angular/core';\nimport {WizardCompletionStep} from '../util/wizard-completion-step.interface';\nimport {WizardStep} from '../util/wizard-step.interface';\n\n/**\n * The `aw-wizard-completion-step` component can be used to define a completion/success step at the end of your wizard\n * After a `aw-wizard-completion-step` has been entered, it has the characteristic that the user is blocked from\n * leaving it again to a previous step.\n * In addition entering a `aw-wizard-completion-step` automatically sets the `aw-wizard` and all steps inside the `aw-wizard`\n * as completed.\n *\n * ### Syntax\n *\n * ```html\n * <aw-wizard-completion-step [stepTitle]=\"title of the wizard step\"\n *    [navigationSymbol]=\"{ symbol: 'navigation symbol', fontFamily: 'navigation symbol font family' }\"\n *    (stepEnter)=\"event emitter to be called when the wizard step is entered\"\n *    (stepExit)=\"event emitter to be called when the wizard step is exited\">\n *    ...\n * </aw-wizard-completion-step>\n * ```\n *\n * ### Example\n *\n * ```html\n * <aw-wizard-completion-step stepTitle=\"Step 1\" [navigationSymbol]=\"{ symbol: '1' }\">\n *    ...\n * </aw-wizard-completion-step>\n * ```\n *\n * With a navigation symbol from the `font-awesome` font:\n *\n * ```html\n * <aw-wizard-completion-step stepTitle=\"Step 1\" [navigationSymbol]=\"{ symbol: '&#xf1ba;', fontFamily: 'FontAwesome' }\">\n *    ...\n * </aw-wizard-completion-step>\n * ```\n *\n * @author Marc Arndt\n */\n@Component({\n  selector: 'aw-wizard-completion-step',\n  templateUrl: 'wizard-completion-step.component.html',\n  providers: [\n    {provide: WizardStep, useExisting: forwardRef(() => WizardCompletionStepComponent)},\n    {provide: WizardCompletionStep, useExisting: forwardRef(() => WizardCompletionStepComponent)}\n  ]\n})\nexport class WizardCompletionStepComponent extends WizardCompletionStep {\n}\n","/**\n * The direction in which a step transition was made\n *\n * @author Marc Arndt\n */\n\n/**\n * This enum contains the different possible moving directions in which a wizard can be traversed\n *\n * @author Marc Arndt\n */\nexport enum MovingDirection {\n  /**\n   * A forward step transition\n   */\n  Forwards,\n  /**\n   * A backward step transition\n   */\n  Backwards,\n  /**\n   * No step transition was done\n   */\n  Stay\n}\n","import {EventEmitter} from '@angular/core';\nimport {MovingDirection} from '../util/moving-direction.enum';\nimport {NavigationMode} from './navigation-mode.interface';\nimport {WizardComponent} from '../components/wizard.component';\n\n/**\n * Base implementation of [[NavigationMode]]\n *\n * Note: Built-in [[NavigationMode]] classes should be stateless, allowing the library user to easily create\n * an instance of a particular [[NavigationMode]] class and pass it to `<aw-wizard [navigationMode]=\"...\">`.\n *\n * @author Marc Arndt\n */\nexport abstract class BaseNavigationMode implements NavigationMode {\n\n  /**\n   * Checks, whether a wizard step, as defined by the given destination index, can be transitioned to.\n   *\n   * This method controls navigation by [[goToStep]], [[goToPreviousStep]], and [[goToNextStep]] directives.\n   * Navigation by navigation bar is governed by [[isNavigable]].\n   *\n   * In this implementation, a destination wizard step can be entered if:\n   * - it exists\n   * - the current step can be exited in the direction of the destination step\n   * - the destination step can be entered in the direction from the current step\n   *\n   * Subclasses can impose additional restrictions, see [[canTransitionToStep]].\n   *\n   * @param wizard The wizard component to operate on\n   * @param destinationIndex The index of the destination step\n   * @returns A [[Promise]] containing `true`, if the destination step can be transitioned to and `false` otherwise\n   */\n  public canGoToStep(wizard: WizardComponent, destinationIndex: number): Promise<boolean> {\n    const hasStep = wizard.hasStep(destinationIndex);\n\n    const movingDirection = wizard.getMovingDirection(destinationIndex);\n\n    const canExitCurrentStep = (previous: boolean) => {\n      return previous && wizard.currentStep.canExitStep(movingDirection);\n    };\n\n    const canEnterDestinationStep = (previous: boolean) => {\n      return previous && wizard.getStepAtIndex(destinationIndex).canEnterStep(movingDirection);\n    };\n\n    const canTransitionToStep = (previous: boolean) => {\n      return previous && this.canTransitionToStep(wizard, destinationIndex);\n    };\n\n    return Promise.resolve(hasStep)\n      .then(canTransitionToStep)\n      // Apply user-defined checks at the end.  They can involve user interaction\n      // which is better to be avoided if navigation mode does not actually allow the transition\n      // (`canTransitionToStep` returns `false`).\n      .then(canExitCurrentStep)\n      .then(canEnterDestinationStep);\n  }\n\n  /**\n   * Imposes additional restrictions for `canGoToStep` in current navigation mode.\n   *\n   * The base implementation allows transition iff the given step is navigable from the navigation bar (see `isNavigable`).\n   * However, in some navigation modes `canTransitionToStep` can be more relaxed to allow navigation to certain steps\n   * by previous/next buttons, but not using the navigation bar.\n   *\n   * @param wizard The wizard component to operate on\n   * @param destinationIndex The index of the destination step\n   * @returns `true`, if the destination step can be transitioned to and `false` otherwise\n   */\n  protected canTransitionToStep(wizard: WizardComponent, destinationIndex: number): boolean {\n    return this.isNavigable(wizard, destinationIndex);\n  }\n\n  /**\n   * Tries to transition to the wizard step, as denoted by the given destination index.\n   *\n   * When entering the destination step, the following actions are done:\n   * - the old current step is set as completed\n   * - the old current step is set as unselected\n   * - the old current step is exited\n   * - the destination step is set as selected\n   * - the destination step is entered\n   *\n   * When the destination step couldn't be entered, the following actions are done:\n   * - the current step is exited and entered in the direction `MovingDirection.Stay`\n   *\n   * @param wizard The wizard component to operate on\n   * @param destinationIndex The index of the destination wizard step, which should be entered\n   * @param preFinalize An event emitter, to be called before the step has been transitioned\n   * @param postFinalize An event emitter, to be called after the step has been transitioned\n   */\n  public goToStep(\n    wizard: WizardComponent,\n    destinationIndex: number,\n    preFinalize?: EventEmitter<void>,\n    postFinalize?: EventEmitter<void>): void {\n\n    this.canGoToStep(wizard, destinationIndex).then(navigationAllowed => {\n      if (navigationAllowed) {\n        // the current step can be exited in the given direction\n        const movingDirection: MovingDirection = wizard.getMovingDirection(destinationIndex);\n\n        /* istanbul ignore if */\n        if (preFinalize) {\n          preFinalize.emit();\n        }\n\n        // leave current step\n        wizard.currentStep.completed = true;\n        wizard.currentStep.exit(movingDirection);\n        wizard.currentStep.editing = false;\n        wizard.currentStep.selected = false;\n\n        this.transition(wizard, destinationIndex);\n\n        // remember if the next step is already completed before entering it to properly set `editing` flag\n        const wasCompleted = wizard.completed || wizard.currentStep.completed;\n\n        // go to next step\n        wizard.currentStep.enter(movingDirection);\n        wizard.currentStep.selected = true;\n        if (wasCompleted) {\n          wizard.currentStep.editing = true;\n        }\n\n        /* istanbul ignore if */\n        if (postFinalize) {\n          postFinalize.emit();\n        }\n      } else {\n        // if the current step can't be left, reenter the current step\n        wizard.currentStep.exit(MovingDirection.Stay);\n        wizard.currentStep.enter(MovingDirection.Stay);\n      }\n    });\n  }\n\n  /**\n   * Transitions the wizard to the given step index.\n   *\n   * Can perform additional actions in particular navigation mode implementations.\n   *\n   * @param wizard The wizard component to operate on\n   * @param destinationIndex The index of the destination wizard step\n   */\n  protected transition(wizard: WizardComponent, destinationIndex: number): void {\n    wizard.currentStepIndex = destinationIndex;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public abstract isNavigable(WizardComponent: WizardComponent, destinationIndex: number): boolean;\n\n  /**\n   * Resets the state of this wizard.\n   *\n   * A reset transitions the wizard automatically to the first step and sets all steps as incomplete.\n   * In addition the whole wizard is set as incomplete.\n   *\n   * @param wizard The wizard component to operate on\n   */\n  public reset(wizard: WizardComponent): void {\n    this.ensureCanReset(wizard);\n\n    // reset the step internal state\n    wizard.wizardSteps.forEach(step => {\n      step.completed = step.initiallyCompleted;\n      step.selected = false;\n      step.editing = false;\n    });\n\n    // set the first step as the current step\n    wizard.currentStepIndex = wizard.defaultStepIndex;\n    wizard.currentStep.selected = true;\n    wizard.currentStep.enter(MovingDirection.Forwards);\n  }\n\n  /**\n   * Checks if wizard configuration allows to perform reset.\n   *\n   * A check failure is indicated by throwing an `Error` with the message discribing the discovered misconfiguration issue.\n   *\n   * Can include additional checks in particular navigation mode implementations.\n   *\n   * @param wizard The wizard component to operate on\n   * @throws An `Error` is thrown, if a micconfiguration issue is discovered.\n   */\n  protected ensureCanReset(wizard: WizardComponent): void {\n    // the wizard doesn't contain a step with the default step index\n    if (!wizard.hasStep(wizard.defaultStepIndex)) {\n      throw new Error(`The wizard doesn't contain a step with index ${wizard.defaultStepIndex}`);\n    }\n  }\n}\n","import {BaseNavigationMode} from './base-navigation-mode.interface';\nimport {WizardComponent} from '../components/wizard.component';\nimport {WizardCompletionStep} from '../util/wizard-completion-step.interface';\n\n/**\n * The default navigation mode used by [[WizardComponent]] and [[NavigationModeDirective]].\n *\n * It is parameterized with two navigation policies passed to constructor:\n *\n * - [[navigateBackward]] policy controls whether wizard steps before the current step are navigable:\n *\n *   - `\"deny\"` -- the steps are not navigable\n *   - `\"allow\"` -- the steps are navigable\n *   - If the corresponding constructor argument is omitted or is `null` or `undefined`,\n *     then the default value is applied which is `\"deny\"`\n *\n * - [[navigateForward]] policy controls whether wizard steps after the current step are navigable:\n *\n *   - `\"deny\"` -- the steps are not navigable\n *   - `\"allow\"` -- the steps are navigable\n *   - `\"visited\"` -- a step is navigable iff it was already visited before\n *   - If the corresponding constructor argument is omitted or is `null` or `undefined`,\n *     then the default value is applied which is `\"allow\"`\n */\nexport class ConfigurableNavigationMode extends BaseNavigationMode {\n\n  /**\n   * Constructor\n   *\n   * @param navigateBackward Controls whether wizard steps before the current step are navigable\n   * @param navigateForward Controls whether wizard steps before the current step are navigable\n   */\n  constructor(\n    private navigateBackward: 'allow'|'deny'|null = null,\n    private navigateForward: 'allow'|'deny'|'visited'|null = null,\n  ) {\n    super();\n    this.navigateBackward = this.navigateBackward || 'allow';\n    this.navigateForward = this.navigateForward || 'deny';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected canTransitionToStep(wizard: WizardComponent, destinationIndex: number): boolean {\n    // if the destination step can be navigated to using the navigation bar,\n    // it should be accessible with [goToStep] as well\n    if (this.isNavigable(wizard, destinationIndex)) {\n      return true;\n    }\n\n    // navigation with [goToStep] is permitted if all previous steps\n    // to the destination step have been completed or are optional\n    return wizard.wizardSteps\n        .filter((step, index) => index < destinationIndex && index !== wizard.currentStepIndex)\n        .every(step => step.completed || step.optional);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected transition(wizard: WizardComponent, destinationIndex: number): void {\n    if (this.navigateForward === 'deny') {\n      // set all steps after the destination step to incomplete\n      wizard.wizardSteps\n        .filter((step, index) => wizard.currentStepIndex > destinationIndex && index > destinationIndex)\n        .forEach(step => step.completed = false);\n    }\n\n    super.transition(wizard, destinationIndex);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isNavigable(wizard: WizardComponent, destinationIndex: number): boolean {\n    // Check if the destination step can be navigated to\n    const destinationStep = wizard.getStepAtIndex(destinationIndex);\n    if (destinationStep instanceof WizardCompletionStep) {\n      // A completion step can only be entered, if all previous steps have been completed, are optional, or selected\n      const previousStepsCompleted = wizard.wizardSteps\n        .filter((step, index) => index < destinationIndex)\n        .every(step => step.completed || step.optional || step.selected);\n      if (!previousStepsCompleted) {\n        return false;\n      }\n    }\n\n    // Apply navigation pocicies\n    if (destinationIndex < wizard.currentStepIndex) {\n      // If the destination step is before current, apply the `navigateBackward` policy\n      switch (this.navigateBackward) {\n        case 'allow': return true;\n        case 'deny': return false;\n        default:\n          throw new Error(`Invalid value for navigateBackward: ${this.navigateBackward}`);\n      }\n    } else if (destinationIndex > wizard.currentStepIndex) {\n      // If the destination step is after current, apply the `navigateForward` policy\n      switch (this.navigateForward) {\n        case 'allow': return true;\n        case 'deny': return false;\n        case 'visited': return destinationStep.completed;\n        default:\n          throw new Error(`Invalid value for navigateForward: ${this.navigateForward}`);\n      }\n    } else {\n      // Re-entering the current step is not allowed\n      return false;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected ensureCanReset(wizard: WizardComponent): void {\n    super.ensureCanReset(wizard);\n\n    // the default step is a completion step and the wizard contains more than one step\n    const defaultWizardStep = wizard.getStepAtIndex(wizard.defaultStepIndex);\n    const defaultCompletionStep = defaultWizardStep instanceof WizardCompletionStep;\n    if (defaultCompletionStep && wizard.wizardSteps.length !== 1) {\n      throw new Error(`The default step index ${wizard.defaultStepIndex} references a completion step`);\n    }\n  }\n}\n","import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  HostBinding,\n  Input,\n  QueryList,\n  EventEmitter,\n} from '@angular/core';\nimport {NavigationMode} from '../navigation/navigation-mode.interface';\nimport {WizardStep} from '../util/wizard-step.interface';\nimport {MovingDirection} from '../util/moving-direction.enum';\nimport {ConfigurableNavigationMode} from '../navigation/configurable-navigation-mode';\n\n/**\n * The `aw-wizard` component defines the root component of a wizard.\n * Through the setting of input parameters for the `aw-wizard` component it's possible to change the location and size\n * of its navigation bar.\n *\n * ### Syntax\n * ```html\n * <aw-wizard [navBarLocation]=\"location of navigation bar\" [navBarLayout]=\"layout of navigation bar\">\n *     ...\n * </aw-wizard>\n * ```\n *\n * ### Example\n *\n * Without completion step:\n *\n * ```html\n * <aw-wizard navBarLocation=\"top\" navBarLayout=\"small\">\n *     <aw-wizard-step>...</aw-wizard-step>\n *     <aw-wizard-step>...</aw-wizard-step>\n * </aw-wizard>\n * ```\n *\n * With completion step:\n *\n * ```html\n * <aw-wizard navBarLocation=\"top\" navBarLayout=\"small\">\n *     <aw-wizard-step>...</aw-wizard-step>\n *     <aw-wizard-step>...</aw-wizard-step>\n *     <aw-wizard-completion-step>...</aw-wizard-completion-step>\n * </aw-wizard>\n * ```\n *\n * @author Marc Arndt\n */\n@Component({\n  selector: 'aw-wizard',\n  templateUrl: 'wizard.component.html',\n})\nexport class WizardComponent implements AfterContentInit {\n  /**\n   * A QueryList containing all [[WizardStep]]s inside this wizard\n   */\n  @ContentChildren(WizardStep, { descendants: true })\n  public wizardStepsQueryList: QueryList<WizardStep>;\n\n  /**\n   * The location of the navigation bar inside the wizard.\n   * This location can be either top, bottom, left or right\n   */\n  @Input()\n  public navBarLocation = 'top';\n\n  /**\n   * The layout of the navigation bar inside the wizard.\n   * The layout can be either small, large-filled, large-empty or large-symbols\n   */\n  @Input()\n  public navBarLayout = 'small';\n\n  /**\n   * The direction in which the steps inside the navigation bar should be shown.\n   * The direction can be either `left-to-right` or `right-to-left`\n   */\n  @Input()\n  public navBarDirection = 'left-to-right';\n\n  /**\n   * The initially selected step, represented by its index\n   * Beware: This initial default is only used if no wizard step has been enhanced with the `selected` directive\n   */\n  @Input()\n  public get defaultStepIndex(): number {\n    // This value can be either:\n    // - the index of a wizard step with a `selected` directive, or\n    // - the default step index, set in the [[WizardComponent]]\n\n    const foundDefaultStep = this.wizardSteps.find(step => step.defaultSelected);\n\n    if (foundDefaultStep) {\n      return this.getIndexOfStep(foundDefaultStep);\n    } else {\n      return this._defaultStepIndex;\n    }\n  }\n  public set defaultStepIndex(defaultStepIndex: number) {\n    this._defaultStepIndex = defaultStepIndex;\n  }\n  private _defaultStepIndex = 0;\n\n  /**\n   * True, if the navigation bar shouldn't be used for navigating\n   */\n  @Input()\n  public disableNavigationBar = false;\n\n  /**\n   * The navigation mode used to navigate inside the wizard\n   *\n   * For outside access, use the [[navigation]] getter.\n   */\n  private _navigation: NavigationMode = new ConfigurableNavigationMode();\n\n  /**\n   * An array representation of all wizard steps belonging to this model\n   *\n   * For outside access, use the [[wizardSteps]] getter.\n   */\n  private _wizardSteps: WizardStep[] = [];\n\n  /**\n   * The index of the currently visible and selected step inside the wizardSteps QueryList.\n   * If this wizard contains no steps, currentStepIndex is -1\n   *\n   * Note: Do not modify this field directly.  Instead, use navigation methods:\n   * [[goToStep]], [[goToPreviousStep]], [[goToNextStep]].\n   */\n  public currentStepIndex = -1;\n\n  /**\n   * Constructor\n   */\n  constructor() {\n  }\n\n  /**\n   * Returns true if this wizard uses a horizontal orientation.\n   * The wizard uses a horizontal orientation, iff the navigation bar is shown at the top or bottom of this wizard\n   *\n   * @returns True if this wizard uses a horizontal orientation\n   */\n  @HostBinding('class.horizontal')\n  public get horizontalOrientation(): boolean {\n    return this.navBarLocation === 'top' || this.navBarLocation === 'bottom';\n  }\n\n  /**\n   * Returns true if this wizard uses a vertical orientation.\n   * The wizard uses a vertical orientation, iff the navigation bar is shown at the left or right of this wizard\n   *\n   * @returns True if this wizard uses a vertical orientation\n   */\n  @HostBinding('class.vertical')\n  public get verticalOrientation(): boolean {\n    return this.navBarLocation === 'left' || this.navBarLocation === 'right';\n  }\n\n  /**\n   * Initialization work\n   */\n  public ngAfterContentInit(): void {\n    // add a subscriber to the wizard steps QueryList to listen to changes in the DOM\n    this.wizardStepsQueryList.changes.subscribe(changedWizardSteps => {\n      this.updateWizardSteps(changedWizardSteps.toArray());\n    });\n\n    // initialize the model\n    this.updateWizardSteps(this.wizardStepsQueryList.toArray());\n\n    // finally reset the whole wizard component\n    setTimeout(() => this.reset());\n  }\n\n  /**\n   * The WizardStep object belonging to the currently visible and selected step.\n   * The currentStep is always the currently selected wizard step.\n   * The currentStep can be either completed, if it was visited earlier,\n   * or not completed, if it is visited for the first time or its state is currently out of date.\n   *\n   * If this wizard contains no steps, currentStep is null\n   */\n  public get currentStep(): WizardStep {\n    if (this.hasStep(this.currentStepIndex)) {\n      return this.wizardSteps[this.currentStepIndex];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * The completeness of the wizard.\n   * If the wizard has been completed, i.e. all steps are either completed or optional, this value is true, otherwise it is false\n   */\n  public get completed(): boolean {\n    return this.wizardSteps.every(step => step.completed || step.optional);\n  }\n\n  /**\n   * An array representation of all wizard steps belonging to this model\n   */\n  public get wizardSteps(): WizardStep[] {\n    return this._wizardSteps;\n  }\n\n  /**\n   * Updates the wizard steps to the new array\n   *\n   * @param wizardSteps The updated wizard steps\n   */\n  private updateWizardSteps(wizardSteps: WizardStep[]): void {\n    // the wizard is currently not in the initialization phase\n    if (this.wizardSteps.length > 0 && this.currentStepIndex > -1) {\n      this.currentStepIndex = wizardSteps.indexOf(this.wizardSteps[this.currentStepIndex]);\n    }\n\n    this._wizardSteps = wizardSteps;\n  }\n\n  /**\n   * The navigation mode used to navigate inside the wizard\n   */\n  public get navigation(): NavigationMode {\n    return this._navigation;\n  }\n\n  /**\n   * Updates the navigation mode for this wizard component\n   *\n   * @param navigation The updated navigation mode\n   */\n  public set navigation(navigation: NavigationMode) {\n    this._navigation = navigation;\n  }\n\n  /**\n   * Checks if a given index `stepIndex` is inside the range of possible wizard steps inside this wizard\n   *\n   * @param stepIndex The to be checked index of a step inside this wizard\n   * @returns True if the given `stepIndex` is contained inside this wizard, false otherwise\n   */\n  public hasStep(stepIndex: number): boolean {\n    return this.wizardSteps.length > 0 && 0 <= stepIndex && stepIndex < this.wizardSteps.length;\n  }\n\n  /**\n   * Checks if this wizard has a previous step, compared to the current step\n   *\n   * @returns True if this wizard has a previous step before the current step\n   */\n  public hasPreviousStep(): boolean {\n    return this.hasStep(this.currentStepIndex - 1);\n  }\n\n  /**\n   * Checks if this wizard has a next step, compared to the current step\n   *\n   * @returns True if this wizard has a next step after the current step\n   */\n  public hasNextStep(): boolean {\n    return this.hasStep(this.currentStepIndex + 1);\n  }\n\n  /**\n   * Checks if this wizard is currently inside its last step\n   *\n   * @returns True if the wizard is currently inside its last step\n   */\n  public isLastStep(): boolean {\n    return this.wizardSteps.length > 0 && this.currentStepIndex === this.wizardSteps.length - 1;\n  }\n\n  /**\n   * Finds the [[WizardStep]] at the given index `stepIndex`.\n   * If no [[WizardStep]] exists at the given index an Error is thrown\n   *\n   * @param stepIndex The given index\n   * @returns The found [[WizardStep]] at the given index `stepIndex`\n   * @throws An `Error` is thrown, if the given index `stepIndex` doesn't exist\n   */\n  public getStepAtIndex(stepIndex: number): WizardStep {\n    if (!this.hasStep(stepIndex)) {\n      throw new Error(`Expected a known step, but got stepIndex: ${stepIndex}.`);\n    }\n\n    return this.wizardSteps[stepIndex];\n  }\n\n  /**\n   * Finds the index of the step with the given `stepId`.\n   * If no step with the given `stepId` exists, `-1` is returned\n   *\n   * @param stepId The given step id\n   * @returns The found index of a step with the given step id, or `-1` if no step with the given id is included in the wizard\n   */\n  public getIndexOfStepWithId(stepId: string): number {\n    return this.wizardSteps.findIndex(step => step.stepId === stepId);\n  }\n\n  /**\n   * Finds the index of the given [[WizardStep]] `step`.\n   * If the given [[WizardStep]] is not contained inside this wizard, `-1` is returned\n   *\n   * @param step The given [[WizardStep]]\n   * @returns The found index of `step` or `-1` if the step is not included in the wizard\n   */\n  public getIndexOfStep(step: WizardStep): number {\n    return this.wizardSteps.indexOf(step);\n  }\n\n  /**\n   * Calculates the correct [[MovingDirection]] value for a given `destinationStep` compared to the `currentStepIndex`.\n   *\n   * @param destinationStep The given destination step\n   * @returns The calculated [[MovingDirection]]\n   */\n  public getMovingDirection(destinationStep: number): MovingDirection {\n    let movingDirection: MovingDirection;\n\n    if (destinationStep > this.currentStepIndex) {\n      movingDirection = MovingDirection.Forwards;\n    } else if (destinationStep < this.currentStepIndex) {\n      movingDirection = MovingDirection.Backwards;\n    } else {\n      movingDirection = MovingDirection.Stay;\n    }\n\n    return movingDirection;\n  }\n\n  /**\n   * Checks, whether a wizard step, as defined by the given destination index, can be transitioned to.\n   *\n   * This method controls navigation by [[goToStep]], [[goToPreviousStep]], and [[goToNextStep]] directives.\n   * Navigation by navigation bar is governed by [[isNavigable]].\n   *\n   * @param destinationIndex The index of the destination step\n   * @returns A [[Promise]] containing `true`, if the destination step can be transitioned to and false otherwise\n   */\n  public canGoToStep(destinationIndex: number): Promise<boolean> {\n    return this.navigation.canGoToStep(this, destinationIndex);\n  }\n\n  /**\n   * Tries to transition to the wizard step, as denoted by the given destination index.\n   *\n   * Note: You do not have to call [[canGoToStep]] before calling [[goToStep]].\n   * The [[canGoToStep]] method will be called automatically.\n   *\n   * @param destinationIndex The index of the destination wizard step, which should be entered\n   * @param preFinalize An event emitter, to be called before the step has been transitioned\n   * @param postFinalize An event emitter, to be called after the step has been transitioned\n   */\n  public goToStep(destinationIndex: number, preFinalize?: EventEmitter<void>, postFinalize?: EventEmitter<void>): void {\n    return this.navigation.goToStep(this, destinationIndex, preFinalize, postFinalize);\n  }\n\n  /**\n   * Tries to transition the wizard to the previous step\n   *\n   * @param preFinalize An event emitter, to be called before the step has been transitioned\n   * @param postFinalize An event emitter, to be called after the step has been transitioned\n   */\n  public goToPreviousStep(preFinalize?: EventEmitter<void>, postFinalize?: EventEmitter<void>): void {\n    return this.navigation.goToStep(this, this.currentStepIndex - 1, preFinalize, postFinalize);\n  }\n\n  /**\n   * Tries to transition the wizard to the next step\n   *\n   * @param preFinalize An event emitter, to be called before the step has been transitioned\n   * @param postFinalize An event emitter, to be called after the step has been transitioned\n   */\n  public goToNextStep(preFinalize?: EventEmitter<void>, postFinalize?: EventEmitter<void>): void {\n    return this.navigation.goToStep(this, this.currentStepIndex + 1, preFinalize, postFinalize);\n  }\n\n  /**\n   * Checks, whether the wizard step, located at the given index, can be navigated to using the navigation bar.\n   *\n   * @param destinationIndex The index of the destination step\n   * @returns True if the step can be navigated to, false otherwise\n   */\n  public isNavigable(destinationIndex: number): boolean {\n    return this.navigation.isNavigable(this, destinationIndex);\n  }\n\n  /**\n   * Resets the state of this wizard.\n   */\n  public reset(): void {\n    this.navigation.reset(this);\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {WizardCompletionStep} from '../util/wizard-completion-step.interface';\nimport {WizardStep} from '../util/wizard-step.interface';\nimport {WizardComponent} from './wizard.component';\n\n/**\n * The `aw-wizard-navigation-bar` component contains the navigation bar inside a [[WizardComponent]].\n * To correctly display the navigation bar, it's required to set the right css classes for the navigation bar,\n * otherwise it will look like a normal `ul` component.\n *\n * ### Syntax\n *\n * ```html\n * <aw-wizard-navigation-bar></aw-wizard-navigation-bar>\n * ```\n *\n * @author Marc Arndt\n */\n@Component({\n  selector: 'aw-wizard-navigation-bar',\n  templateUrl: 'wizard-navigation-bar.component.html',\n})\nexport class WizardNavigationBarComponent {\n  /**\n   * The direction in which the wizard steps should be shown in the navigation bar.\n   * This value can be either `left-to-right` or `right-to-left`\n   */\n  @Input()\n  public direction = 'left-to-right';\n\n  /**\n   * Constructor\n   *\n   * @param wizard The state the wizard currently resides in\n   */\n  constructor(public wizard: WizardComponent) {\n  }\n\n  /**\n   * Returns all [[WizardStep]]s contained in the wizard\n   *\n   * @returns An array containing all [[WizardStep]]s\n   */\n  get wizardSteps(): Array<WizardStep> {\n    switch (this.direction) {\n      case 'right-to-left':\n        return this.wizard.wizardSteps.slice().reverse();\n      case 'left-to-right':\n      default:\n        return this.wizard.wizardSteps;\n    }\n  }\n\n  /**\n   * Returns the number of wizard steps, that need to be displaced in the navigation bar\n   *\n   * @returns The number of wizard steps to be displayed\n   */\n  get numberOfWizardSteps(): number {\n    return this.wizard.wizardSteps.length;\n  }\n\n  /**\n   * Checks, whether a [[WizardStep]] can be marked as `current` in the navigation bar\n   *\n   * @param wizardStep The wizard step to be checked\n   * @returns True if the step can be marked as `current`\n   */\n  public isCurrent(wizardStep: WizardStep): boolean {\n    return wizardStep.selected;\n  }\n\n  /**\n   * Checks, whether a [[WizardStep]] can be marked as `editing` in the navigation bar\n   *\n   * @param wizardStep The wizard step to be checked\n   * @returns True if the step can be marked as `editing`\n   */\n  public isEditing(wizardStep: WizardStep): boolean {\n    return wizardStep.editing;\n  }\n\n  /**\n   * Checks, whether a [[WizardStep]] can be marked as `done` in the navigation bar\n   *\n   * @param wizardStep The wizard step to be checked\n   * @returns True if the step can be marked as `done`\n   */\n  public isDone(wizardStep: WizardStep): boolean {\n    return wizardStep.completed;\n  }\n\n  /**\n   * Checks, whether a [[WizardStep]] can be marked as `optional` in the navigation bar\n   *\n   * @param wizardStep The wizard step to be checked\n   * @returns True if the step can be marked as `optional`\n   */\n  public isOptional(wizardStep: WizardStep): boolean {\n    return wizardStep.optional;\n  }\n\n  /**\n   * Checks, whether a [[WizardStep]] can be marked as `completed` in the navigation bar.\n   *\n   * The `completed` class is only applied to completion steps.\n   *\n   * @param wizardStep The wizard step to be checked\n   * @returns True if the step can be marked as `completed`\n   */\n  public isCompleted(wizardStep: WizardStep): boolean {\n    return wizardStep instanceof WizardCompletionStep && this.wizard.completed;\n  }\n\n  /**\n   * Checks, whether a [[WizardStep]] can be marked as `navigable` in the navigation bar.\n   * A wizard step can be navigated to if:\n   * - the step is currently not selected\n   * - the navigation bar isn't disabled\n   * - the navigation mode allows navigation to the step\n   *\n   * @param wizardStep The wizard step to be checked\n   * @returns True if the step can be marked as navigable\n   */\n  public isNavigable(wizardStep: WizardStep): boolean {\n    return !wizardStep.selected && !this.wizard.disableNavigationBar &&\n      this.wizard.isNavigable(this.wizard.getIndexOfStep(wizardStep));\n  }\n}\n","import {Component, forwardRef} from '@angular/core';\nimport {WizardStep} from '../util/wizard-step.interface';\n\n/**\n * The `aw-wizard-step` component is used to define a normal step inside a wizard.\n *\n * ### Syntax\n *\n * With `stepTitle` and `navigationSymbol` inputs:\n *\n * ```html\n * <aw-wizard-step [stepTitle]=\"step title\" [navigationSymbol]=\"{ symbol: 'symbol', fontFamily: 'font-family' }\"\n *    [canExit]=\"deciding function\" (stepEnter)=\"enter function\" (stepExit)=\"exit function\">\n *    ...\n * </aw-wizard-step>\n * ```\n *\n * With `awWizardStepTitle` and `awWizardStepSymbol` directives:\n *\n * ```html\n * <aw-wizard-step\"\n *    [canExit]=\"deciding function\" (stepEnter)=\"enter function\" (stepExit)=\"exit function\">\n *    <ng-template awWizardStepTitle>\n *        step title\n *    </ng-template>\n *    <ng-template awWizardStepSymbol>\n *        symbol\n *    </ng-template>\n *    ...\n * </aw-wizard-step>\n * ```\n *\n * ### Example\n *\n * With `stepTitle` and `navigationSymbol` inputs:\n *\n * ```html\n * <aw-wizard-step stepTitle=\"Address information\" [navigationSymbol]=\"{ symbol: '&#xf1ba;', fontFamily: 'FontAwesome' }\">\n *    ...\n * </aw-wizard-step>\n * ```\n *\n * With `awWizardStepTitle` and `awWizardStepSymbol` directives:\n *\n * ```html\n * <aw-wizard-step>\n *    <ng-template awWizardStepTitle>\n *        Address information\n *    </ng-template>\n *    <ng-template awWizardStepSymbol>\n *        <i class=\"fa fa-taxi\"></i>\n *    </ng-template>\n * </aw-wizard-step>\n * ```\n *\n * @author Marc Arndt\n */\n@Component({\n  selector: 'aw-wizard-step',\n  templateUrl: 'wizard-step.component.html',\n  providers: [\n    {provide: WizardStep, useExisting: forwardRef(() => WizardStepComponent)}\n  ]\n})\nexport class WizardStepComponent extends WizardStep {\n}\n","import {Directive, EventEmitter, Host, OnInit, Output} from '@angular/core';\nimport {MovingDirection} from '../util/moving-direction.enum';\nimport {WizardCompletionStep} from '../util/wizard-completion-step.interface';\n\n/**\n * The `awEnableBackLinks` directive can be used to allow the user to leave a [[WizardCompletionStep]] after is has been entered.\n *\n * ### Syntax\n *\n * ```html\n * <aw-wizard-completion-step awEnableBackLinks (stepExit)=\"exit function\">\n *     ...\n * </aw-wizard-completion-step>\n * ```\n *\n * ### Example\n *\n * ```html\n * <aw-wizard-completion-step stepTitle=\"Final step\" awEnableBackLinks>\n *     ...\n * </aw-wizard-completion-step>\n * ```\n *\n * @author Marc Arndt\n */\n@Directive({\n  selector: '[awEnableBackLinks]'\n})\nexport class EnableBackLinksDirective implements OnInit {\n  /**\n   * This EventEmitter is called when the step is exited.\n   * The bound method can be used to do cleanup work.\n   */\n  @Output()\n  public stepExit = new EventEmitter<MovingDirection>();\n\n  /**\n   * Constructor\n   *\n   * @param completionStep The wizard completion step, which should be exitable\n   */\n  constructor(@Host() private completionStep: WizardCompletionStep) {\n  }\n\n  /**\n   * Initialization work\n   */\n  public ngOnInit(): void {\n    this.completionStep.canExit = true;\n    this.completionStep.stepExit = this.stepExit;\n  }\n}\n","import {WizardStep} from './wizard-step.interface';\n\n/**\n * An unique identifier of a wizard step\n *\n * @author Marc Arndt\n */\nexport interface StepId {\n  /**\n   * The id of the destination step\n   */\n  stepId: string;\n}\n\n/**\n * Checks whether the given `value` implements the interface [[StepId]].\n *\n * @param value The value to be checked\n * @returns True if the given value implements [[StepId]] and false otherwise\n */\nexport function isStepId(value: any): value is StepId {\n  return value.hasOwnProperty('stepId') && !(value instanceof WizardStep);\n}\n","/**\n * An index of a wizard step.\n * This index is the index of the step inside the wizard.\n * The index is always zero based, i.e. the step with index 0 is the first step of the wizard\n *\n * @author Marc Arndt\n */\nexport interface StepIndex {\n  /**\n   * The index of the destination step\n   */\n  stepIndex: number;\n}\n\n/**\n * Checks whether the given `value` implements the interface [[StepIndex]].\n *\n * @param value The value to be checked\n * @returns True if the given value implements [[StepIndex]] and false otherwise\n */\nexport function isStepIndex(value: any): value is StepIndex {\n  return value.hasOwnProperty('stepIndex');\n}\n","/**\n * An offset between two steps.\n * This offset can be either positive or negative.\n * A positive offset means, that the offset step is after the other step, while a negative offset means,\n * that the offset step is ahead of the other step.\n *\n * @author Marc Arndt\n */\nexport interface StepOffset {\n  /**\n   * The offset to the destination step\n   */\n  stepOffset: number;\n}\n\n/**\n * Checks whether the given `value` implements the interface [[StepOffset]].\n *\n * @param value The value to be checked\n * @returns True if the given value implements [[StepOffset]] and false otherwise\n */\nexport function isStepOffset(value: any): value is StepOffset {\n  return value.hasOwnProperty('stepOffset');\n}\n","import {Directive, EventEmitter, HostListener, Input, Optional, Output} from '@angular/core';\nimport {NavigationMode} from '../navigation/navigation-mode.interface';\nimport {isStepId, StepId} from '../util/step-id.interface';\nimport {isStepIndex, StepIndex} from '../util/step-index.interface';\nimport {isStepOffset, StepOffset} from '../util/step-offset.interface';\nimport {WizardStep} from '../util/wizard-step.interface';\nimport {WizardComponent} from '../components/wizard.component';\n\n/**\n * The `awGoToStep` directive can be used to navigate to a given step.\n * This step can be defined in one of multiple formats\n *\n * ### Syntax\n *\n * With absolute step index:\n *\n * ```html\n * <button [awGoToStep]=\"{ stepIndex: absolute step index }\" (finalize)=\"finalize method\">...</button>\n * ```\n *\n * With unique step id:\n *\n * ```html\n * <button [awGoToStep]=\"{ stepId: 'step id of destination step' }\" (finalize)=\"finalize method\">...</button>\n * ```\n *\n * With a wizard step object:\n *\n * ```html\n * <button [awGoToStep]=\"wizard step object\" (finalize)=\"finalize method\">...</button>\n * ```\n *\n * With an offset to the defining step:\n *\n * ```html\n * <button [awGoToStep]=\"{ stepOffset: offset }\" (finalize)=\"finalize method\">...</button>\n * ```\n *\n * @author Marc Arndt\n */\n@Directive({\n  selector: '[awGoToStep]'\n})\nexport class GoToStepDirective {\n  /**\n   * This [[EventEmitter]] is called directly before the current step is exited during a transition through a component with this directive.\n   */\n  @Output()\n  public preFinalize: EventEmitter<void> = new EventEmitter();\n\n  /**\n   * This [[EventEmitter]] is called directly after the current step is exited during a transition through a component with this directive.\n   */\n  @Output()\n  public postFinalize: EventEmitter<void> = new EventEmitter();\n  /**\n   * The destination step, to which the wizard should navigate, after the component, having this directive has been activated.\n   * This destination step can be given either as a [[WizardStep]] containing the step directly,\n   * a [[StepOffset]] between the current step and the `wizardStep`, in which this directive has been used,\n   * or a step index as a number or string\n   */\n    // tslint:disable-next-line:no-input-rename\n  @Input('awGoToStep')\n  public targetStep: WizardStep | StepOffset | StepIndex | StepId;\n\n  /**\n   * Constructor\n   *\n   * @param wizard The wizard component\n   * @param wizardStep The wizard step, which contains this [[GoToStepDirective]]\n   */\n  constructor(private wizard: WizardComponent, @Optional() private wizardStep: WizardStep) {\n  }\n\n  /**\n   * A convenience field for `preFinalize`\n   */\n  public get finalize(): EventEmitter<void> {\n    return this.preFinalize;\n  }\n\n  /**\n   * A convenience name for `preFinalize`\n   *\n   * @param emitter The [[EventEmitter]] to be set\n   */\n  @Output()\n  public set finalize(emitter: EventEmitter<void>) {\n    /* istanbul ignore next */\n    this.preFinalize = emitter;\n  }\n\n  /**\n   * Returns the destination step of this directive as an absolute step index inside the wizard\n   *\n   * @returns The index of the destination step\n   * @throws If `targetStep` is of an unknown type an `Error` is thrown\n   */\n  public get destinationStep(): number {\n    let destinationStep: number;\n\n    if (isStepIndex(this.targetStep)) {\n      destinationStep = this.targetStep.stepIndex;\n    } else if (isStepId(this.targetStep)) {\n      destinationStep = this.wizard.getIndexOfStepWithId(this.targetStep.stepId);\n    } else if (isStepOffset(this.targetStep) && this.wizardStep !== null) {\n      destinationStep = this.wizard.getIndexOfStep(this.wizardStep) + this.targetStep.stepOffset;\n    } else if (this.targetStep instanceof WizardStep) {\n      destinationStep = this.wizard.getIndexOfStep(this.targetStep);\n    } else {\n      throw new Error(`Input 'targetStep' is neither a WizardStep, StepOffset, StepIndex or StepId`);\n    }\n\n    return destinationStep;\n  }\n\n  /**\n   * Listener method for `click` events on the component with this directive.\n   * After this method is called the wizard will try to transition to the `destinationStep`\n   */\n  @HostListener('click')\n  public onClick(): void {\n    this.wizard.goToStep(this.destinationStep, this.preFinalize, this.postFinalize);\n  }\n}\n","import {Directive, EventEmitter, HostListener, Output} from '@angular/core';\nimport {WizardComponent} from '../components/wizard.component';\n\n/**\n * The `awNextStep` directive can be used to navigate to the next step.\n *\n * ### Syntax\n *\n * ```html\n * <button awNextStep (finalize)=\"finalize method\">...</button>\n * ```\n *\n * @author Marc Arndt\n */\n@Directive({\n  selector: '[awNextStep]'\n})\nexport class NextStepDirective {\n  /**\n   * This [[EventEmitter]] is called directly before the current step is exited during a transition through a component with this directive.\n   */\n  @Output()\n  public preFinalize: EventEmitter<void> = new EventEmitter();\n\n  /**\n   * This [[EventEmitter]] is called directly after the current step is exited during a transition through a component with this directive.\n   */\n  @Output()\n  public postFinalize: EventEmitter<void> = new EventEmitter();\n\n  /**\n   * Constructor\n   *\n   * @param wizard The state of the wizard\n   */\n  constructor(private wizard: WizardComponent) {\n  }\n\n  /**\n   * A convenience field for `preFinalize`\n   */\n  public get finalize(): EventEmitter<void> {\n    return this.preFinalize;\n  }\n\n  /**\n   * A convenience name for `preFinalize`\n   *\n   * @param emitter The [[EventEmitter]] to be set\n   */\n  @Output()\n  public set finalize(emitter: EventEmitter<void>) {\n    /* istanbul ignore next */\n    this.preFinalize = emitter;\n  }\n\n  /**\n   * Listener method for `click` events on the component with this directive.\n   * After this method is called the wizard will try to transition to the next step\n   */\n  @HostListener('click')\n  public onClick(): void {\n    this.wizard.goToNextStep(this.preFinalize, this.postFinalize);\n  }\n}\n","import {Directive, Host, Input, OnInit} from '@angular/core';\nimport {WizardStep} from '../util/wizard-step.interface';\n\n/**\n * The `awOptionalStep` directive can be used to define an optional `wizard-step`.\n * An optional wizard step is a [[WizardStep]] that doesn't need to be completed to transition to later wizard steps.\n *\n * ### Syntax\n *\n * ```html\n * <aw-wizard-step awOptionalStep>\n *     ...\n * </aw-wizard-step>\n * ```\n *\n * ### Example\n *\n * ```html\n * <aw-wizard-step stepTitle=\"Second step\" awOptionalStep>\n *     ...\n * </aw-wizard-step>\n * ```\n *\n * @author Marc Arndt\n */\n@Directive({\n  selector: '[awOptionalStep]'\n})\nexport class OptionalStepDirective implements OnInit {\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('awOptionalStep')\n  public optional = true;\n\n  /**\n   * Constructor\n   *\n   * @param wizardStep The wizard step, which contains this [[OptionalStepDirective]]\n   */\n  constructor(@Host() private wizardStep: WizardStep) {\n  }\n\n  /**\n   * Initialization work\n   */\n  public ngOnInit(): void {\n    // The input receives '' when specified in the template without a value.  In this case, apply the default value (`true`).\n    this.wizardStep.optional = this.optional || this.optional as any === '';\n  }\n}\n","import {Directive, EventEmitter, HostListener, Output} from '@angular/core';\nimport {WizardComponent} from '../components/wizard.component';\n\n/**\n * The `awPreviousStep` directive can be used to navigate to the previous step.\n * Compared to the [[NextStepDirective]] it's important to note, that this directive doesn't contain a `finalize` output method.\n *\n * ### Syntax\n *\n * ```html\n * <button awPreviousStep>...</button>\n * ```\n *\n * @author Marc Arndt\n */\n@Directive({\n  selector: '[awPreviousStep]'\n})\nexport class PreviousStepDirective {\n  /**\n   * This [[EventEmitter]] is called directly before the current step is exited during a transition through a component with this directive.\n   */\n  @Output()\n  public preFinalize: EventEmitter<void> = new EventEmitter();\n\n  /**\n   * This [[EventEmitter]] is called directly after the current step is exited during a transition through a component with this directive.\n   */\n  @Output()\n  public postFinalize: EventEmitter<void> = new EventEmitter();\n\n  /**\n   * Constructor\n   *\n   * @param wizard The state of the wizard\n   */\n  constructor(private wizard: WizardComponent) {\n  }\n\n  /**\n   * A convenience field for `preFinalize`\n   */\n  public get finalize(): EventEmitter<void> {\n    return this.preFinalize;\n  }\n\n  /**\n   * A convenience field for `preFinalize`\n   *\n   * @param emitter The [[EventEmitter]] to be set\n   */\n  @Output()\n  public set finalize(emitter: EventEmitter<void>) {\n    /* istanbul ignore next */\n    this.preFinalize = emitter;\n  }\n\n  /**\n   * Listener method for `click` events on the component with this directive.\n   * After this method is called the wizard will try to transition to the previous step\n   */\n  @HostListener('click')\n  public onClick(): void {\n    this.wizard.goToPreviousStep(this.preFinalize, this.postFinalize);\n  }\n}\n","import {Directive, EventEmitter, HostListener, Output} from '@angular/core';\nimport {WizardComponent} from '../components/wizard.component';\n\n/**\n * The `awResetWizard` directive can be used to reset the wizard to its initial state.\n * This directive accepts an output, which can be used to specify some custom cleanup work during the reset process.\n *\n * ### Syntax\n *\n * ```html\n * <button awResetWizard (finalize)=\"custom reset task\">...</button>\n * ```\n *\n * @author Marc Arndt\n */\n@Directive({\n  selector: '[awResetWizard]'\n})\nexport class ResetWizardDirective {\n  /**\n   * An [[EventEmitter]] containing some tasks to be done, directly before the wizard is being reset\n   */\n  @Output()\n  public finalize: EventEmitter<void> = new EventEmitter();\n\n  /**\n   * Constructor\n   *\n   * @param wizard The wizard component\n   */\n  constructor(private wizard: WizardComponent) {\n  }\n\n  /**\n   * Resets the wizard\n   */\n  @HostListener('click')\n  public onClick(): void {\n    // do some optional cleanup work\n    this.finalize.emit();\n    // reset the wizard to its initial state\n    this.wizard.reset();\n  }\n}\n","import {Directive, Host, OnInit} from '@angular/core';\nimport {WizardStep} from '../util/wizard-step.interface';\n\n/**\n * The `awSelectedStep` directive can be used on a [[WizardStep]] to set it as selected after the wizard initialisation or a reset.\n *\n * ### Syntax\n *\n * ```html\n * <aw-wizard-step stepTitle=\"Step title\" awSelectedStep>\n *     ...\n * </aw-wizard-step>\n * ```\n *\n * @author Marc Arndt\n */\n@Directive({\n  selector: '[awSelectedStep]'\n})\nexport class SelectedStepDirective implements OnInit {\n  /**\n   * Constructor\n   *\n   * @param wizardStep The wizard step, which should be selected by default\n   */\n  constructor(@Host() private wizardStep: WizardStep) {\n  }\n\n  /**\n   * Initialization work\n   */\n  public ngOnInit(): void {\n    this.wizardStep.defaultSelected = true;\n  }\n}\n","import {Directive, forwardRef} from '@angular/core';\nimport {WizardCompletionStep} from '../util/wizard-completion-step.interface';\nimport {WizardStep} from '../util/wizard-step.interface';\n\n/**\n * The `awWizardCompletionStep` directive can be used to define a completion/success step at the end of your wizard\n * After a [[WizardCompletionStep]] has been entered, it has the characteristic that the user is blocked from\n * leaving it again to a previous step.\n * In addition entering a [[WizardCompletionStep]] automatically sets the `wizard`, and all steps inside the `wizard`,\n * as completed.\n *\n * ### Syntax\n *\n * ```html\n * <div awWizardCompletionStep [stepTitle]=\"title of the wizard step\"\n *    [navigationSymbol]=\"{ symbol: 'navigation symbol', fontFamily: 'font-family' }\"\n *    (stepEnter)=\"event emitter to be called when the wizard step is entered\"\n *    (stepExit)=\"event emitter to be called when the wizard step is exited\">\n *    ...\n * </div>\n * ```\n *\n * ### Example\n *\n * ```html\n * <div awWizardCompletionStep stepTitle=\"Step 1\" [navigationSymbol]=\"{ symbol: '1' }\">\n *    ...\n * </div>\n * ```\n *\n * With a navigation symbol from the `font-awesome` font:\n *\n * ```html\n * <div awWizardCompletionStep stepTitle=\"Step 1\" [navigationSymbol]=\"{ symbol: '&#xf1ba;', fontFamily: 'FontAwesome' }\">\n *    ...\n * </div>\n * ```\n *\n * @author Marc Arndt\n */\n@Directive({\n  selector: '[awWizardCompletionStep]',\n  providers: [\n    {provide: WizardStep, useExisting: forwardRef(() => WizardCompletionStepDirective)},\n    {provide: WizardCompletionStep, useExisting: forwardRef(() => WizardCompletionStepDirective)}\n  ]\n})\nexport class WizardCompletionStepDirective extends WizardCompletionStep {\n}\n","import {Directive, forwardRef} from '@angular/core';\nimport {WizardStep} from '../util/wizard-step.interface';\n\n/**\n * The `awWizardStep` directive can be used to define a normal step inside a wizard.\n *\n * ### Syntax\n *\n * With `stepTitle` and `navigationSymbol` inputs:\n *\n * ```html\n * <div awWizardStep [stepTitle]=\"step title\" [navigationSymbol]=\"{ symbol: 'symbol', fontFamily: 'font-family' }\"\n *    [canExit]=\"deciding function\" (stepEnter)=\"enter function\" (stepExit)=\"exit function\">\n *    ...\n * </div>\n * ```\n *\n * With `awWizardStepTitle` and `awWizardStepSymbol` directives:\n *\n * ```html\n * <div awWizardStep [canExit]=\"deciding function\" (stepEnter)=\"enter function\" (stepExit)=\"exit function\">\n *    <ng-template awWizardStepTitle>\n *        step title\n *    </ng-template>\n *    <ng-template awWizardStepSymbol>\n *        symbol\n *    </ng-template>\n *    ...\n * </div>\n * ```\n *\n * ### Example\n *\n * With `stepTitle` and `navigationSymbol` inputs:\n *\n * ```html\n * <div awWizardStep stepTitle=\"Address information\" [navigationSymbol]=\"{ symbol: '&#xf1ba;', fontFamily: 'FontAwesome' }\">\n *    ...\n * </div>\n * ```\n *\n * With `awWizardStepTitle` and `awWizardStepSymbol` directives:\n *\n * ```html\n * <div awWizardStep>\n *    <ng-template awWizardStepTitle>\n *        Address information\n *    </ng-template>\n *    <ng-template awWizardStepSymbol>\n *        <i class=\"fa fa-taxi\"></i>\n *    </ng-template>\n * </div>\n * ```\n *\n * @author Marc Arndt\n */\n@Directive({\n  selector: '[awWizardStep]',\n  providers: [\n    {provide: WizardStep, useExisting: forwardRef(() => WizardStepDirective)}\n  ]\n})\nexport class WizardStepDirective extends WizardStep {\n}\n","import {Directive, Input, OnChanges, SimpleChanges} from '@angular/core';\n\nimport {NavigationMode} from '../navigation/navigation-mode.interface';\nimport {ConfigurableNavigationMode} from '../navigation/configurable-navigation-mode';\nimport {WizardComponent} from '../components/wizard.component';\n\n\n/**\n * The [[awNavigationMode]] directive can be used to customize wizard'd navigation mode.\n *\n * There are several usage options:\n *\n * ### Option 1. Customize the default navigation mode with [[navigateBackward]] and/or [[navigateForward]] inputs.\n *\n * ```html\n * <aw-wizard [awNavigationMode] navigateBackward=\"deny\" navigateForward=\"allow\">...</aw-wizard>\n * ```\n *\n * ### Option 2. Pass in a custom navigation mode\n *\n * ```typescript\n * import { BaseNavigationMode } from 'angular-archwizard'\n *\n * class CustomNavigationMode extends BaseNavigationMode {\n *\n *   // ...\n * }\n * ```\n *\n * ```typescript\n * @Component({\n *   // ...\n * })\n * class MyComponent {\n *\n *   navigationMode = new CustomNavigationMode();\n * }\n * ```\n *\n * ```html\n * <aw-wizard [awNavigationMode]=\"navigationMode\">...</aw-wizard>\n * ```\n *\n * ### Additional Notes\n *\n * - Specifying a custom navigation mode takes priority over [[navigateBackward]] and [[navigateForward]] inputs\n *\n * - Omitting the [[awNavigationMode]] directive or, equally, specifying just [[awNavigationMode]] without\n *   any inputs or parameters causes the wizard to use the default \"strict\" navigation mode equivalent to\n *\n * ```html\n * <aw-wizard [awNavigationMode] navigateBackward=\"deny\" navigateForward=\"allow\">...</aw-wizard>\n * ````\n */\n@Directive({\n  selector: '[awNavigationMode]',\n})\nexport class NavigationModeDirective implements OnChanges {\n\n  /**\n   * Custom navigation mode instance (optional).\n   */\n  @Input()\n  public awNavigationMode: NavigationMode|null;\n\n  /**\n   * A parameter for the default navigation mode.  Controls whether wizard steps before the current step are navigable:\n   *\n   * - `navigateBackward=\"deny\"` -- the steps are not navigable\n   * - `navigateBackward=\"allow\"` -- the steps are navigable\n   */\n  @Input()\n  public navigateBackward: 'allow'|'deny'|null;\n\n  /**\n   * A parameter for the default navigation mode.  Controls whether wizard steps after the current step are navigable:\n   *\n   * - `navigateForward=\"deny\"` -- the steps are not navigable\n   * - `navigateForward=\"allow\"` -- the steps are navigable\n   * - `navigateForward=\"visited\"` -- a step is navigable iff it was already visited before\n   */\n  @Input()\n  public navigateForward: 'allow'|'deny'|'visited'|null;\n\n  constructor(private wizard: WizardComponent) { }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    this.wizard.navigation = this.getNavigationMode();\n  }\n\n  private getNavigationMode(): NavigationMode {\n    if (this.awNavigationMode) {\n      return this.awNavigationMode;\n    }\n    return new ConfigurableNavigationMode(this.navigateBackward, this.navigateForward);\n  }\n\n}\n","import {Directive, Host, Input, OnInit} from '@angular/core';\r\nimport {WizardStep} from '../util/wizard-step.interface';\r\n\r\n/**\r\n * The `awCompletedStep` directive can be used to make a wizard step initially completed.\r\n *\r\n * Initially completed steps are shown as completed when the wizard is presented to the user.\r\n *\r\n * A typical use case is to make a step initially completed if it is automatically filled with some derived/predefined information.\r\n *\r\n * ### Syntax\r\n *\r\n * ```html\r\n * <aw-wizard-step awCompletedStep>\r\n *     ...\r\n * </aw-wizard-step>\r\n * ```\r\n *\r\n * An optional boolean condition can be specified:\r\n *\r\n * ```html\r\n * <aw-wizard-step [awCompletedStep]=\"shouldBeCompleted\">\r\n *     ...\r\n * </aw-wizard-step>\r\n * ```\r\n *\r\n * ### Example\r\n *\r\n * ```html\r\n * <aw-wizard-step stepTitle=\"First step\" [awCompletedStep]=\"firstStepPrefilled\">\r\n *     ...\r\n * </aw-wizard-step>\r\n * ```\r\n */\r\n@Directive({\r\n  selector: '[awCompletedStep]'\r\n})\r\nexport class CompletedStepDirective implements OnInit {\r\n\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('awCompletedStep')\r\n  public initiallyCompleted = true;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param wizardStep The wizard step, which contains this [[CompletedStepDirective]]\r\n   */\r\n  constructor(@Host() private wizardStep: WizardStep) {\r\n  }\r\n\r\n  /**\r\n   * Initialization work\r\n   */\r\n  public ngOnInit(): void {\r\n    // The input receives '' when specified in the template without a value.  In this case, apply the default value (`true`).\r\n    this.wizardStep.initiallyCompleted = this.initiallyCompleted || this.initiallyCompleted as any === '';\r\n  }\r\n}\r\n","import {CommonModule} from '@angular/common';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {WizardCompletionStepComponent} from './components/wizard-completion-step.component';\nimport {WizardNavigationBarComponent} from './components/wizard-navigation-bar.component';\nimport {WizardStepComponent} from './components/wizard-step.component';\nimport {WizardComponent} from './components/wizard.component';\nimport {EnableBackLinksDirective} from './directives/enable-back-links.directive';\nimport {GoToStepDirective} from './directives/go-to-step.directive';\nimport {NextStepDirective} from './directives/next-step.directive';\nimport {OptionalStepDirective} from './directives/optional-step.directive';\nimport {PreviousStepDirective} from './directives/previous-step.directive';\nimport {ResetWizardDirective} from './directives/reset-wizard.directive';\nimport {SelectedStepDirective} from './directives/selected-step.directive';\nimport {WizardCompletionStepDirective} from './directives/wizard-completion-step.directive';\nimport {WizardStepSymbolDirective} from './directives/wizard-step-symbol.directive';\nimport {WizardStepTitleDirective} from './directives/wizard-step-title.directive';\nimport {WizardStepDirective} from './directives/wizard-step.directive';\nimport {NavigationModeDirective} from './directives/navigation-mode.directive';\nimport {CompletedStepDirective} from './directives/completed-step.directive';\n\n\n/**\n * The module defining all the content inside `angular-archwizard`\n *\n * @author Marc Arndt\n */\n@NgModule({\n  declarations: [\n    WizardComponent,\n    WizardStepComponent,\n    WizardNavigationBarComponent,\n    WizardCompletionStepComponent,\n    GoToStepDirective,\n    NextStepDirective,\n    PreviousStepDirective,\n    OptionalStepDirective,\n    WizardStepSymbolDirective,\n    WizardStepTitleDirective,\n    EnableBackLinksDirective,\n    WizardStepDirective,\n    WizardCompletionStepDirective,\n    SelectedStepDirective,\n    ResetWizardDirective,\n    NavigationModeDirective,\n    CompletedStepDirective,\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    WizardComponent,\n    WizardStepComponent,\n    WizardNavigationBarComponent,\n    WizardCompletionStepComponent,\n    GoToStepDirective,\n    NextStepDirective,\n    PreviousStepDirective,\n    OptionalStepDirective,\n    WizardStepSymbolDirective,\n    WizardStepTitleDirective,\n    EnableBackLinksDirective,\n    WizardStepDirective,\n    WizardCompletionStepDirective,\n    SelectedStepDirective,\n    ResetWizardDirective,\n    NavigationModeDirective,\n    CompletedStepDirective,\n  ]\n})\nexport class ArchwizardModule {\n  /* istanbul ignore next */\n  public static forRoot(): ModuleWithProviders<ArchwizardModule> {\n    return {\n      ngModule: ArchwizardModule,\n      providers: [\n        // Nothing here yet\n      ]\n    };\n  }\n}\n","// export the components\nexport {WizardCompletionStepComponent} from './lib/components/wizard-completion-step.component';\nexport {WizardNavigationBarComponent} from './lib/components/wizard-navigation-bar.component';\nexport {WizardStepComponent} from './lib/components/wizard-step.component';\nexport {WizardComponent} from './lib/components/wizard.component';\n\n// export the directives\nexport {EnableBackLinksDirective} from './lib/directives/enable-back-links.directive';\nexport {GoToStepDirective} from './lib/directives/go-to-step.directive';\nexport {NextStepDirective} from './lib/directives/next-step.directive';\nexport {OptionalStepDirective} from './lib/directives/optional-step.directive';\nexport {PreviousStepDirective} from './lib/directives/previous-step.directive';\nexport {ResetWizardDirective} from './lib/directives/reset-wizard.directive';\nexport {SelectedStepDirective} from './lib/directives/selected-step.directive';\nexport {WizardCompletionStepDirective} from './lib/directives/wizard-completion-step.directive';\nexport {WizardStepDirective} from './lib/directives/wizard-step.directive';\nexport {WizardStepTitleDirective} from './lib/directives/wizard-step-title.directive';\nexport {NavigationModeDirective} from './lib/directives/navigation-mode.directive';\nexport {CompletedStepDirective} from './lib/directives/completed-step.directive';\nexport {WizardStepSymbolDirective} from './lib/directives/wizard-step-symbol.directive';\n\n// export the navigation classes\nexport {NavigationMode} from './lib/navigation/navigation-mode.interface';\nexport {ConfigurableNavigationMode} from './lib/navigation/configurable-navigation-mode';\nexport {BaseNavigationMode} from './lib/navigation/base-navigation-mode.interface';\n\n// export the utility functions\nexport {MovingDirection} from './lib/util/moving-direction.enum';\nexport {NavigationSymbol} from './lib/util/navigation-symbol.interface';\nexport {StepId, isStepId} from './lib/util/step-id.interface';\nexport {StepIndex, isStepIndex} from './lib/util/step-index.interface';\nexport {StepOffset, isStepOffset} from './lib/util/step-offset.interface';\nexport {WizardCompletionStep} from './lib/util/wizard-completion-step.interface';\nexport {WizardStep} from './lib/util/wizard-step.interface';\n\n// export the module\nexport {ArchwizardModule} from './lib/archwizard.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n","import {\n    Component,\n    Output,\n    Input,\n    EventEmitter,\n    ElementRef\n} from '@angular/core';\n\n@Component({\n    selector: 'ng2-dropdown-button',\n    styleUrls: [ './style.scss' ],\n    templateUrl: './template.html'\n})\nexport class Ng2DropdownButton {\n    @Output() public onMenuToggled: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Input() public showCaret: boolean = true;\n\n    constructor(private element: ElementRef) {}\n\n    /**\n     * @name toggleMenu\n     * @desc emits event to toggle menu\n     */\n    public toggleMenu(): void {\n        this.onMenuToggled.emit(true);\n    }\n\n    /**\n     * @name getPosition\n     * @desc returns position of the button\n     */\n    public getPosition(): ClientRect {\n      return this.element.nativeElement.getBoundingClientRect();\n    }\n}\n","import { Ng2MenuItem } from '../menu-item/ng2-menu-item';\nimport { Ng2DropdownMenu } from './ng2-dropdown-menu';\nimport { Ng2DropdownState } from '../../services/ng2-dropdown-state';\n\nconst KEYS = {\n    BACKSPACE: 9,\n    PREV: 38,\n    NEXT: 40,\n    ENTER: 13,\n    ESCAPE: 27\n};\n\n/**\n * @name onSwitchNext\n * @param index\n * @param items\n * @param state\n */\nconst onSwitchNext = (index: number, items: Ng2MenuItem[], state: Ng2DropdownState) => {\n    if (index < items.length - 1) {\n        state.select(items[index + 1], true);\n    }\n};\n\n/**\n * @name onSwitchPrev\n * @param index\n * @param items\n * @param state\n */\nconst onSwitchPrev = (index: number, items: Ng2MenuItem[], state: Ng2DropdownState) => {\n    if (index > 0) {\n        state.select(items[index - 1], true);\n    }\n};\n\n/**\n * @name onBackspace\n * @param index\n * @param items\n * @param state\n */\nconst onBackspace = (index: number, items: Ng2MenuItem[], state: Ng2DropdownState) => {\n    if (index < items.length - 1) {\n        state.select(items[index + 1], true);\n    } else {\n        state.select(items[0], true);\n    }\n};\n\nfunction onEscape(this: Ng2DropdownMenu) {\n    this.hide();\n};\n\n/**\n * @name onItemClicked\n * @param index\n * @param items\n * @param state\n */\nconst onItemClicked = (index: number, items: Ng2MenuItem[], state: Ng2DropdownState) => {\n    return state.selectedItem ? state.selectedItem.click() : undefined;\n};\n\nexport const ACTIONS = {\n    [KEYS.BACKSPACE]: onBackspace,\n    [KEYS.PREV]: onSwitchPrev,\n    [KEYS.NEXT]: onSwitchNext,\n    [KEYS.ENTER]: onItemClicked,\n    [KEYS.ESCAPE]: onEscape\n};\n\nexport function arrowKeysHandler(event): void {\n    if ([38, 40].indexOf(event.keyCode) > -1) {\n        event.preventDefault();\n    }\n}\n","import { EventEmitter } from '@angular/core';\nimport { Ng2MenuItem } from '../components/menu-item/ng2-menu-item';\nexport class Ng2DropdownState {\n    public onItemSelected: EventEmitter<Ng2MenuItem> = new EventEmitter<\n        Ng2MenuItem\n    >();\n    public onItemClicked: EventEmitter<Ng2MenuItem> = new EventEmitter<\n        Ng2MenuItem\n    >();\n    public onItemDestroyed: EventEmitter<Ng2MenuItem> = new EventEmitter<\n        Ng2MenuItem\n    >();\n\n    private _selectedItem: Ng2MenuItem;\n\n    /**\n     * @name selectedItem\n     * @desc getter for _selectedItem\n     */\n    public get selectedItem(): Ng2MenuItem {\n        return this._selectedItem;\n    }\n\n    /**\n     * @name selects a menu item and emits event\n     * @param item\n     */\n    public select(item: Ng2MenuItem | undefined, dispatchEvent = true): void {\n        this._selectedItem = item;\n\n        if (!dispatchEvent || !item) {\n            return;\n        }\n\n        item.focus();\n\n        this.onItemSelected.emit(item);\n    }\n\n    /**\n     * @name unselect\n     * @desc sets _selectedItem as undefined\n     */\n    public unselect(): void {\n        this._selectedItem = undefined;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Ng2DropdownState } from './ng2-dropdown-state';\n\n@Injectable()\nexport class DropdownStateService {\n    public menuState = {\n        isVisible: false,\n        toString(): string {\n            return this.isVisible === true ? 'visible' : 'hidden';\n        }\n    };\n\n    public dropdownState = new Ng2DropdownState();\n}\n","import { Component, Input, ElementRef, OnDestroy } from '@angular/core';\nimport { DropdownStateService } from '../../services/dropdown-state.service';\n\n@Component({\n    selector: 'ng2-menu-item',\n    styleUrls: ['./style.scss'],\n    template: `\n        <div\n            class=\"ng2-menu-item\"\n            role=\"button\"\n            tabindex=\"0\"\n            [class.ng2-menu-item--selected]=\"isSelected\"\n            (keydown.enter)=\"click()\"\n            (click)=\"click()\"\n            (mouseover)=\"select()\"\n        >\n            <ng-content></ng-content>\n        </div>\n    `\n})\nexport class Ng2MenuItem implements OnDestroy {\n    /**\n     * @preventClose\n     * @desc if true, clicking on the item won't close the dropdown\n     */\n    @Input() public preventClose = false;\n\n    /**\n     * @name value\n     * @desc any value associated to the item\n     */\n    @Input() public value: any;\n\n    constructor(\n        private state: DropdownStateService,\n        private element: ElementRef\n    ) {}\n\n    public ngOnDestroy(): void {\n        this.state.dropdownState.onItemDestroyed.emit(this);\n    }\n\n    /**\n     * @name isSelected\n     * @desc returns current selected item\n     */\n    public get isSelected(): boolean {\n        return this === this.state.dropdownState.selectedItem;\n    }\n\n    /**\n     * @name click\n     * @desc emits select event\n     */\n    public select($event?): void {\n        this.state.dropdownState.select(this, true);\n\n        if ($event) {\n            $event.stopPropagation();\n            $event.preventDefault();\n        }\n    }\n\n    /**\n     * @name click\n     * @desc emits click event\n     */\n    public click(): void {\n        this.state.dropdownState.onItemClicked.emit(this);\n    }\n\n    /**\n     * @name focus\n     */\n    public focus() {\n        this.element.nativeElement.children[0].focus();\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    Renderer2,\n    ContentChildren,\n    QueryList,\n    Input\n} from '@angular/core';\n\nimport {\n    trigger,\n    style,\n    transition,\n    animate,\n    keyframes,\n    state\n} from '@angular/animations';\n\nimport { ACTIONS, arrowKeysHandler } from './actions';\n\nimport { Ng2MenuItem } from '../menu-item/ng2-menu-item';\nimport { DropdownStateService } from '../../services/dropdown-state.service';\n\n@Component({\n    selector: 'ng2-dropdown-menu',\n    styleUrls: ['./style.scss'],\n    template: `\n        <!-- MENU -->\n        <div\n            class=\"ng2-dropdown-menu ng2-dropdown-menu---width--{{ width }}\"\n            [class.ng2-dropdown-menu--inside-element]=\"!appendToBody\"\n            [class.ng2-dropdown-menu--open]=\"dropdownState.menuState.isVisible\"\n            [style.z-index]=\"zIndex\"\n            [@fade]=\"dropdownState.menuState.toString()\"\n        >\n            <div\n                class=\"ng2-dropdown-menu__options-container\"\n                [@opacity]=\"dropdownState.menuState.toString()\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </div>\n\n        <!-- BACKDROP -->\n        <div\n            class=\"ng2-dropdown-backdrop\"\n            *ngIf=\"dropdownState.menuState.isVisible\"\n            (click)=\"hide()\"\n        ></div>\n    `,\n    animations: [\n        trigger('fade', [\n            state('visible', style({ opacity: 1, height: '*', width: '*' })),\n            state(\n                'hidden',\n                style({ opacity: 0, overflow: 'hidden', height: 0, width: 0 })\n            ),\n            transition('hidden => visible', [\n                animate(\n                    '250ms ease-in',\n                    style({ opacity: 1, height: '*', width: '*' })\n                )\n            ]),\n            transition('visible => hidden', [\n                animate(\n                    '350ms ease-out',\n                    style({ opacity: 0, width: 0, height: 0 })\n                )\n            ])\n        ]),\n        trigger('opacity', [\n            transition('hidden => visible', [\n                animate(\n                    '450ms ease-in',\n                    keyframes([\n                        style({ opacity: 0, offset: 0 }),\n                        style({ opacity: 1, offset: 1 })\n                    ])\n                )\n            ]),\n            transition('visible => hidden', [\n                animate(\n                    '250ms ease-out',\n                    keyframes([\n                        style({ opacity: 1, offset: 0 }),\n                        style({ opacity: 0.5, offset: 0.3 }),\n                        style({ opacity: 0, offset: 1 })\n                    ])\n                )\n            ])\n        ])\n    ]\n})\nexport class Ng2DropdownMenu {\n    /**\n     * @name width\n     */\n    @Input() public width = 4;\n\n    /**\n     * @description if set to true, the first element of the dropdown will be automatically focused\n     * @name focusFirstElement\n     */\n    @Input() public focusFirstElement = true;\n\n    /**\n     * @description sets dropdown offset from the button\n     * @name offset {string} follow format '<number> <number>' ex. '0 20'\n     */\n    @Input() public offset: string;\n\n    /**\n     * @name appendToBody\n     */\n    @Input() public appendToBody = true;\n\n    /**\n     * @name zIndex\n     */\n    @Input() public zIndex = 1000;\n\n    /**\n     * @name items\n     */\n    @ContentChildren(Ng2MenuItem, { descendants: true })\n    public items!: QueryList<Ng2MenuItem>;\n\n    private position: ClientRect;\n\n    private listeners = {\n        arrowHandler: undefined,\n        handleKeypress: undefined\n    };\n\n    constructor(\n        public dropdownState: DropdownStateService,\n        private element: ElementRef,\n        private renderer: Renderer2\n    ) {}\n\n    /**\n     * @name show\n     * @shows menu and selects first item\n     */\n    public show(position?: ClientRect, dynamic = true): void {\n        const dc = typeof document !== 'undefined' ? document : undefined;\n        const wd = typeof window !== 'undefined' ? window : undefined;\n\n        if (!this.dropdownState.menuState.isVisible) {\n            // setting handlers\n            this.listeners.handleKeypress = this.renderer.listen(\n                dc.body,\n                'keydown',\n                this.handleKeypress.bind(this)\n            );\n            this.listeners.arrowHandler = this.renderer.listen(\n                wd,\n                'keydown',\n                arrowKeysHandler\n            );\n        }\n\n        // update state\n        this.dropdownState.menuState.isVisible = true;\n\n        if (position) {\n            this.updatePosition(position, dynamic);\n        }\n    }\n\n    /**\n     * @name hide\n     * @desc hides menu\n     */\n    public hide(): void {\n        this.dropdownState.menuState.isVisible = false;\n\n        // reset selected item state\n        this.dropdownState.dropdownState.unselect();\n\n        // call function to unlisten\n        this.listeners.arrowHandler && this.listeners.arrowHandler();\n        this.listeners.handleKeypress && this.listeners.handleKeypress();\n    }\n\n    /**\n     * @name updatePosition\n     * @desc updates the menu position every time it is toggled\n     * @param position {ClientRect}\n     * @param dynamic {boolean}\n     */\n    public updatePosition(position: ClientRect, dynamic: boolean): void {\n        this.position = position;\n        this.updateOnChange(dynamic);\n    }\n\n    /**\n     * @name handleKeypress\n     * @desc executes functions on keyPress based on the key pressed\n     * @param $event\n     */\n    public handleKeypress($event): void {\n        const key = $event.keyCode;\n        const items = this.items.toArray();\n        const index = items.indexOf(\n            this.dropdownState.dropdownState.selectedItem\n        );\n\n        if (!ACTIONS.hasOwnProperty(key)) {\n            return;\n        }\n\n        ACTIONS[key].call(this, index, items, this.dropdownState.dropdownState);\n    }\n\n    /**\n     * @name getMenuElement\n     */\n    private getMenuElement(): Element {\n        return this.element.nativeElement.children[0];\n    }\n\n    /**\n     * @name calcPositionOffset\n     * @param position\n     */\n    private calcPositionOffset(position): { top: string; left: string } {\n        const wd = typeof window !== 'undefined' ? window : undefined;\n        const dc = typeof document !== 'undefined' ? document : undefined;\n\n        if (!wd || !dc || !position) {\n            return;\n        }\n\n        const element = this.getMenuElement();\n        const supportPageOffset = wd.pageXOffset !== undefined;\n        const isCSS1Compat = (dc.compatMode || '') === 'CSS1Compat';\n\n        const x = supportPageOffset\n            ? wd.pageXOffset\n            : isCSS1Compat\n            ? dc.documentElement.scrollLeft\n            : dc.body.scrollLeft;\n\n        const y = supportPageOffset\n            ? wd.pageYOffset\n            : isCSS1Compat\n            ? dc.documentElement.scrollTop\n            : dc.body.scrollTop;\n\n        let { top, left } = this.applyOffset(\n            `${position.top + (this.appendToBody ? y - 15 : 0)}px`,\n            `${position.left + x - 5}px`\n        );\n\n        const clientWidth = element.clientWidth;\n        const clientHeight = element.clientHeight;\n\n        const marginFromBottom =\n            parseInt(top) + clientHeight + (this.appendToBody ? 0 : y - 15);\n        const marginFromRight = parseInt(left) + clientWidth;\n\n        const windowScrollHeight = wd.innerHeight + wd.scrollY;\n        const windowScrollWidth = wd.innerWidth + wd.scrollX;\n\n        if (marginFromBottom >= windowScrollHeight) {\n            top = `${parseInt(top.replace('px', '')) - clientHeight}px`;\n        }\n\n        if (marginFromRight >= windowScrollWidth) {\n            const marginRight = marginFromRight - windowScrollWidth + 30;\n            left = `${parseInt(left.replace('px', '')) - marginRight}px`;\n        }\n\n        return { top, left };\n    }\n\n    private applyOffset(\n        top: string,\n        left: string\n    ): { top: string; left: string } {\n        if (!this.offset) {\n            return { top, left };\n        }\n\n        const offset = this.offset.split(' ');\n\n        if (!offset[1]) {\n            offset[1] = '0';\n        }\n\n        top = `${parseInt(top.replace('px', '')) + parseInt(offset[0])}px`;\n        left = `${parseInt(left.replace('px', '')) + parseInt(offset[1])}px`;\n\n        return { top, left };\n    }\n\n    public ngOnInit() {\n        const dc = typeof document !== 'undefined' ? document : undefined;\n        if (this.appendToBody) {\n            // append menu element to the body\n            dc.body.appendChild(this.element.nativeElement);\n        }\n    }\n\n    public updateOnChange(dynamic = true) {\n        const element = this.getMenuElement();\n        const position = this.calcPositionOffset(this.position);\n\n        if (position) {\n            this.renderer.setStyle(element, 'top', position.top.toString());\n            this.renderer.setStyle(element, 'left', position.left.toString());\n        }\n\n        // select first item unless user disabled this option\n        if (\n            this.focusFirstElement &&\n            this.items.first &&\n            !this.dropdownState.dropdownState.selectedItem\n        ) {\n            this.dropdownState.dropdownState.select(this.items.first, false);\n        }\n    }\n\n    public ngOnDestroy() {\n        const elem = this.element.nativeElement;\n        elem.parentNode.removeChild(elem);\n\n        if (this.listeners.handleKeypress) {\n            this.listeners.handleKeypress();\n        }\n    }\n}\n","import {\n    HostListener,\n    Component,\n    ContentChild,\n    Output,\n    EventEmitter,\n    Input\n} from '@angular/core';\n\nimport { Ng2DropdownButton } from '../button/ng2-dropdown-button';\nimport { Ng2DropdownMenu } from '../menu/ng2-dropdown-menu';\nimport { DropdownStateService } from '../../services/dropdown-state.service';\nimport { Ng2MenuItem } from '../menu-item/ng2-menu-item';\n\n@Component({\n    selector: 'ng2-dropdown',\n    template: `\n        <div class=\"ng2-dropdown-container\">\n            <ng-content select=\"ng2-dropdown-button\"></ng-content>\n            <ng-content select=\"ng2-dropdown-menu\"></ng-content>\n        </div>\n    `,\n    providers: [DropdownStateService]\n})\nexport class Ng2Dropdown {\n    // get children components\n    @ContentChild(Ng2DropdownButton, { static: true })\n    public button!: Ng2DropdownButton;\n    @ContentChild(Ng2DropdownMenu, { static: true })\n    public menu!: Ng2DropdownMenu;\n\n    @Input() public dynamicUpdate = true;\n\n    // outputs\n    @Output() public onItemClicked: EventEmitter<string> = new EventEmitter<\n        string\n    >();\n    @Output() public onItemSelected: EventEmitter<string> = new EventEmitter<\n        string\n    >();\n    @Output() public onShow: EventEmitter<Ng2Dropdown> = new EventEmitter<\n        Ng2Dropdown\n    >();\n    @Output() public onHide: EventEmitter<Ng2Dropdown> = new EventEmitter<\n        Ng2Dropdown\n    >();\n\n    constructor(private state: DropdownStateService) {}\n\n    public ngOnInit() {\n        this.state.dropdownState.onItemClicked.subscribe(item => {\n            this.onItemClicked.emit(item);\n\n            if (item.preventClose) {\n                return;\n            }\n\n            this.hide.call(this);\n        });\n\n        if (this.button) {\n            this.button.onMenuToggled.subscribe(() => {\n                this.toggleMenu();\n            });\n        }\n\n        this.state.dropdownState.onItemSelected.subscribe(item => {\n            this.onItemSelected.emit(item);\n        });\n\n        this.state.dropdownState.onItemDestroyed.subscribe(\n            (item: Ng2MenuItem) => {\n                let newSelectedItem: Ng2MenuItem | undefined;\n                const items = this.menu.items.toArray();\n\n                if (item !== this.state.dropdownState.selectedItem) {\n                    return;\n                }\n\n                if (this.menu.focusFirstElement) {\n                    newSelectedItem =\n                        item === items[0] && items.length > 1\n                            ? items[1]\n                            : items[0];\n                }\n\n                this.state.dropdownState.select(newSelectedItem);\n            }\n        );\n    }\n\n    /**\n     * @name toggleMenu\n     * @desc toggles menu visibility\n     */\n    public toggleMenu(position = this.button.getPosition()): void {\n        this.state.menuState.isVisible ? this.hide() : this.show(position);\n    }\n\n    /**\n     * - hides dropdown\n     * @name hide\n     */\n    public hide(): void {\n        this.menu.hide();\n        this.onHide.emit(this);\n    }\n\n    /**\n     * - shows dropdown\n     * @name show\n     * @param position\n     */\n    public show(position = this.button.getPosition()): void {\n        this.menu.show(position, this.dynamicUpdate);\n        this.onShow.emit(this);\n    }\n\n    /**\n     * @name scrollListener\n     */\n    @HostListener('window:scroll')\n    public scrollListener() {\n        if (this.button && this.dynamicUpdate) {\n            this.menu.updatePosition(this.button.getPosition(), true);\n        }\n    }\n}\n","import { Ng2Dropdown } from './components/dropdown/ng2-dropdown';\nimport { Ng2DropdownMenu } from './components/menu/ng2-dropdown-menu';\nimport { Ng2DropdownButton } from './components/button/ng2-dropdown-button';\nimport { Ng2MenuItem } from './components/menu-item/ng2-menu-item';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DropdownStateService } from './services/dropdown-state.service';\n\n@NgModule({\n    exports: [\n        Ng2MenuItem,\n        Ng2DropdownButton,\n        Ng2DropdownMenu,\n        Ng2Dropdown\n    ],\n    declarations: [\n        Ng2Dropdown,\n        Ng2MenuItem,\n        Ng2DropdownButton,\n        Ng2DropdownMenu,\n    ],\n    imports: [\n        CommonModule\n    ]\n})\nexport class Ng2DropdownModule {}\n\nexport {\n    Ng2Dropdown,\n    Ng2DropdownMenu,\n    Ng2MenuItem,\n    Ng2DropdownButton,\n    DropdownStateService\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n","import {Pipe, PipeTransform} from '@angular/core';\n\nconst escape = s => s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n    /**\n     * @name transform\n     * @param value {string}\n     * @param arg {string}\n     */\n    public transform(value: string, arg: string): string {\n        if (!arg.trim()) {\n            return value;\n        }\n\n        try {\n            const regex = new RegExp(`(${escape(arg)})`, 'i');\n            return value.replace(regex, '<b>$1</b>');\n        } catch (e) {\n            return value;\n        }\n    }\n}\n","/*\n** constants and default values for <tag-input>\n */\n\nexport const PLACEHOLDER = '+ Tag';\nexport const SECONDARY_PLACEHOLDER = 'Enter a new tag';\nexport const KEYDOWN = 'keydown';\nexport const KEYUP = 'keyup';\nexport const FOCUS = 'focus';\nexport const MAX_ITEMS_WARNING = 'The number of items specified was greater than the property max-items.';\n\nexport const ACTIONS_KEYS = {\n    DELETE: 'DELETE',\n    SWITCH_PREV: 'SWITCH_PREV',\n    SWITCH_NEXT: 'SWITCH_NEXT',\n    TAB: 'TAB'\n};\n\nexport const KEY_PRESS_ACTIONS = {\n    8: ACTIONS_KEYS.DELETE,\n    37: ACTIONS_KEYS.SWITCH_PREV,\n    39: ACTIONS_KEYS.SWITCH_NEXT,\n    9: ACTIONS_KEYS.TAB\n};\n\nexport const DRAG_AND_DROP_KEY = 'Text';\nexport const NEXT = 'NEXT';\nexport const PREV = 'PREV';\n","import { TagInputComponent } from '../../components/tag-input/tag-input';\nimport { TagModel } from '../accessor';\n\nimport { Injectable } from '@angular/core';\n\nexport declare interface DraggedTag {\n    index: number;\n    tag: TagModel;\n    zone: string;\n}\n\nimport { DRAG_AND_DROP_KEY } from '../../core/constants';\n\nexport declare interface State {\n    dragging: boolean;\n    dropping: boolean;\n    index: number | undefined;\n}\n\nexport declare type StateProperty = keyof State;\n\n@Injectable()\nexport class DragProvider {\n    public sender: TagInputComponent;\n    public receiver: TagInputComponent;\n\n    public state: State = {\n        dragging: false,\n        dropping: false,\n        index: undefined\n    };\n\n    /**\n     * @name setDraggedItem\n     * @param event\n     * @param tag\n     */\n    public setDraggedItem(event: DragEvent, tag: DraggedTag): void {\n        if (event && event.dataTransfer) {\n            event.dataTransfer.setData(DRAG_AND_DROP_KEY, JSON.stringify(tag));\n        }\n    }\n\n    /**\n     * @name getDraggedItem\n     * @param event\n     */\n    public getDraggedItem(event: DragEvent): DraggedTag | undefined {\n        if (event && event.dataTransfer) {\n            const data = event.dataTransfer.getData(DRAG_AND_DROP_KEY);\n            try {\n                return JSON.parse(data) as DraggedTag;\n            } catch {\n                return;\n            }\n        }\n    }\n\n    /**\n     * @name setSender\n     * @param sender\n     */\n    public setSender(sender: TagInputComponent): void {\n        this.sender = sender;\n    }\n\n    /**\n     * @name setReceiver\n     * @param receiver\n     */\n    public setReceiver(receiver: TagInputComponent): void {\n        this.receiver = receiver;\n    }\n\n    /**\n     * @name onTagDropped\n     * @param tag\n     * @param indexDragged\n     * @param indexDropped\n     */\n    public onTagDropped(tag: TagModel, indexDragged: number, indexDropped?: number): void {\n        this.onDragEnd();\n\n        this.sender.onRemoveRequested(tag, indexDragged);\n        this.receiver.onAddingRequested(false, tag, indexDropped);\n    }\n\n    /**\n     * @name setState\n     * @param state\n     */\n    public setState(state: { [K in StateProperty]?: State[K] }): void {\n        this.state = { ...this.state, ...state };\n    }\n\n    /**\n     * @name getState\n     * @param key\n     */\n    public getState(key?: StateProperty): State | State[StateProperty] {\n        return key ? this.state[key] : this.state;\n    }\n\n    /**\n     * @name onDragEnd\n     */\n    public onDragEnd(): void {\n        this.setState({\n            dragging: false,\n            dropping: false,\n            index: undefined\n        });\n    }\n}\n","import { Observable } from 'rxjs';\nimport { ValidatorFn, AsyncValidatorFn } from '@angular/forms';\n\nimport { SECONDARY_PLACEHOLDER, PLACEHOLDER } from './core/constants/index';\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\nimport { TagModel } from './core/accessor';\n\nexport interface TagInputOptions {\n    separatorKeys: string[];\n    separatorKeyCodes: number[];\n    maxItems: number;\n    placeholder: string;\n    secondaryPlaceholder: string;\n    validators: ValidatorFn[];\n    asyncValidators: AsyncValidatorFn[];\n    onlyFromAutocomplete: boolean;\n    errorMessages: { [key: string]: string; };\n    theme: '';\n    onTextChangeDebounce: number;\n    inputId: string | null;\n    inputClass: string;\n    clearOnBlur: boolean;\n    hideForm: boolean;\n    addOnBlur: boolean;\n    addOnPaste: boolean;\n    pasteSplitPattern: string | RegExp;\n    blinkIfDupe: boolean;\n    removable: boolean;\n    editable: boolean;\n    allowDupes: boolean;\n    modelAsStrings: boolean;\n    trimTags: boolean;\n    ripple: boolean;\n    tabIndex: string;\n    disable: boolean;\n    dragZone: string;\n    onRemoving?: (tag: TagModel) => Observable<TagModel>;\n    onAdding?: (tag: TagModel) => Observable<TagModel>;\n    displayBy: string;\n    identifyBy: string;\n    animationDuration: {\n        enter: string,\n        leave: string\n    };\n}\n\nexport interface TagInputDropdownOptions {\n    displayBy: string;\n    identifyBy: string;\n    appendToBody: boolean;\n    offset: string;\n    focusFirstElement: boolean;\n    showDropdownIfEmpty: boolean;\n    minimumTextLength: number;\n    limitItemsTo: number;\n    keepOpen: boolean;\n    zIndex: number;\n    dynamicUpdate: boolean;\n    matchingFn: (value: string, target: TagModel) => boolean;\n}\n\nexport const defaults = {\n    tagInput: <TagInputOptions>{\n        separatorKeys: [],\n        separatorKeyCodes: [],\n        maxItems: Infinity,\n        placeholder: PLACEHOLDER,\n        secondaryPlaceholder: SECONDARY_PLACEHOLDER,\n        validators: [],\n        asyncValidators: [],\n        onlyFromAutocomplete: false,\n        errorMessages: {},\n        theme: '',\n        onTextChangeDebounce: 250,\n        inputId: null,\n        inputClass: '',\n        clearOnBlur: false,\n        hideForm: false,\n        addOnBlur: false,\n        addOnPaste: false,\n        pasteSplitPattern: ',',\n        blinkIfDupe: true,\n        removable: true,\n        editable: false,\n        allowDupes: false,\n        modelAsStrings: false,\n        trimTags: true,\n        ripple: true,\n        tabIndex: '',\n        disable: false,\n        dragZone: '',\n        onRemoving: undefined,\n        onAdding: undefined,\n        displayBy: 'display',\n        identifyBy: 'value',\n        animationDuration: {\n            enter: '250ms',\n            leave: '150ms'\n        }\n    },\n    dropdown: <TagInputDropdownOptions>{\n        displayBy: 'display',\n        identifyBy: 'value',\n        appendToBody: true,\n        offset: '50 0',\n        focusFirstElement: false,\n        showDropdownIfEmpty: false,\n        minimumTextLength: 1,\n        limitItemsTo: Infinity,\n        keepOpen: true,\n        dynamicUpdate: true,\n        zIndex: 1000,\n        matchingFn\n    }\n};\n\n/**\n * @name matchingFn\n * @param this\n * @param value\n * @param target\n */\nfunction matchingFn(this: TagInputDropdown, value: string, target: TagModel): boolean {\n    const targetValue = target[this.displayBy].toString();\n\n    return targetValue && targetValue\n        .toLowerCase()\n        .indexOf(value.toLowerCase()) >= 0;\n}\n","import { defaults, TagInputOptions, TagInputDropdownOptions } from '../../defaults';\n\nexport type Options = {\n    tagInput?: {\n        [P in keyof TagInputOptions]?: TagInputOptions[P];\n    };\n    dropdown?: {\n        [P in keyof TagInputDropdownOptions]?: TagInputDropdownOptions[P];\n    }\n};\n\nexport class OptionsProvider {\n    public static defaults = defaults;\n\n    public setOptions(options: Options): void {\n        OptionsProvider.defaults.tagInput = {...defaults.tagInput, ...options.tagInput};\n        OptionsProvider.defaults.dropdown = {...defaults.dropdown, ...options.dropdown};\n    }\n}\n\nexport { TagInputDropdownOptions, TagInputOptions };\n","import { ControlValueAccessor } from '@angular/forms';\nimport { Input } from '@angular/core';\nimport { OptionsProvider } from './providers/options-provider';\nimport { TagInputDropdown } from '../components/dropdown/tag-input-dropdown.component';\n\nexport class TagModelClass {\n    [key: string]: any;\n}\n\nexport type TagModel = string | TagModelClass;\n\nexport function isObject(obj: any): boolean {\n    return obj === Object(obj);\n}\n\nexport class TagInputAccessor implements ControlValueAccessor {\n    private _items: TagModel[] = [];\n    private _onTouchedCallback: () => void;\n    private _onChangeCallback: (items: TagModel[]) => void;\n\n    public dropdown: TagInputDropdown;\n\n    /**\n     * @name displayBy\n     */\n    @Input() public displayBy: string = OptionsProvider.defaults.tagInput.displayBy;\n\n    /**\n     * @name identifyBy\n     */\n    @Input() public identifyBy: string = OptionsProvider.defaults.tagInput.identifyBy;\n\n    public get items(): TagModel[] {\n        return this._items;\n    }\n\n    public set items(items: TagModel[]) {\n        this._items = items;\n        this._onChangeCallback(this._items);\n    }\n\n    public onTouched() {\n        this._onTouchedCallback();\n    }\n\n    public writeValue(items: any[]) {\n        this._items = items || [];\n    }\n\n    public registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    /**\n     * @name getItemValue\n     * @param item\n     * @param fromDropdown\n     */\n    public getItemValue(item: TagModel, fromDropdown = false): string {\n        const property = fromDropdown && this.dropdown ? this.dropdown.identifyBy : this.identifyBy;\n        return isObject(item) ? item[property] : item;\n    }\n\n    /**\n     * @name getItemDisplay\n     * @param item\n     * @param fromDropdown\n     */\n    public getItemDisplay(item: TagModel, fromDropdown = false): string {\n        const property = fromDropdown && this.dropdown ? this.dropdown.displayBy : this.displayBy;\n        return isObject(item) ? item[property] : item;\n    }\n\n    /**\n     * @name getItemsWithout\n     * @param index\n     */\n    protected getItemsWithout(index: number): TagModel[] {\n        return this.items.filter((item, position) => position !== index);\n    }\n}\n","\n/**\n * @name listen\n * @param listenerType\n * @param action\n * @param condition\n */\nexport function listen(listenerType: string, action: () => any, condition = true): void {\n    // if the event provided does not exist, throw an error\n    if (!this.listeners.hasOwnProperty(listenerType)) {\n        throw new Error('The event entered may be wrong');\n    }\n\n    // if a condition is present and is false, exit early\n    if (!condition) {\n        return;\n    }\n\n    // fire listener\n    this.listeners[listenerType].push(action);\n}\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { AsyncValidatorFn, FormControl, FormGroup, ValidatorFn } from '@angular/forms';\n\n@Component({\n    selector: 'tag-input-form',\n    styleUrls: ['./tag-input-form.style.scss'],\n    templateUrl: './tag-input-form.template.html'\n})\nexport class TagInputForm implements OnInit, OnChanges {\n    /**\n     * @name onSubmit\n     */\n    @Output() public onSubmit: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onBlur\n     */\n    @Output() public onBlur: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onFocus\n     */\n    @Output() public onFocus: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeyup\n     */\n    @Output() public onKeyup: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeydown\n     */\n    @Output() public onKeydown: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name inputTextChange\n     */\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\n\n    // inputs\n\n    /**\n     * @name placeholder\n     */\n    @Input() public placeholder: string;\n\n    /**\n     * @name validators\n     */\n    @Input() public validators: ValidatorFn[] = [];\n\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public asyncValidators: AsyncValidatorFn[] = [];\n\n    /**\n     * @name inputId\n     */\n    @Input() public inputId: string;\n\n    /**\n     * @name inputClass\n     */\n    @Input() public inputClass: string;\n\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n    @Input() public tabindex = '';\n\n    /**\n     * @name disabled\n     */\n    @Input() public disabled = false;\n\n    /**\n     * @name input\n     */\n    @ViewChild('input', { static: false }) public input;\n\n    /**\n     * @name form\n     */\n    public form: FormGroup;\n\n    /**\n     * @name inputText\n     */\n    @Input()\n    public get inputText(): string {\n        return this.item.value;\n    }\n\n    /**\n     * @name inputText\n     * @param text {string}\n     */\n    public set inputText(text: string) {\n        this.item.setValue(text);\n\n        this.inputTextChange.emit(text);\n    }\n\n    private readonly item: FormControl = new FormControl({ value: '', disabled: this.disabled });\n\n    ngOnInit() {\n        this.item.setValidators(this.validators);\n        this.item.setAsyncValidators(this.asyncValidators);\n\n        // creating form\n        this.form = new FormGroup({\n            item: this.item\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.disabled && !changes.disabled.firstChange) {\n            if (changes.disabled.currentValue) {\n                this.form.controls['item'].disable();\n            } else {\n                this.form.controls['item'].enable();\n            }\n        }\n    }\n\n    /**\n     * @name value\n     */\n    public get value(): FormControl {\n        return this.form.get('item') as FormControl;\n    }\n\n    /**\n     * @name isInputFocused\n     */\n    public isInputFocused(): boolean {\n        const doc = typeof document !== 'undefined' ? document : undefined;\n        return doc ? doc.activeElement === this.input.nativeElement : false;\n    }\n\n    /**\n     * @name getErrorMessages\n     * @param messages\n     */\n    public getErrorMessages(messages: { [key: string]: string }): string[] {\n        return Object.keys(messages)\n            .filter(err => this.value.hasError(err))\n            .map(err => messages[err]);\n    }\n\n    /**\n     * @name hasErrors\n     */\n    public hasErrors(): boolean {\n        const { dirty, value, valid } = this.form;\n        return dirty && value.item && !valid;\n    }\n\n    /**\n     * @name focus\n     */\n    public focus(): void {\n        this.input.nativeElement.focus();\n    }\n\n    /**\n     * @name blur\n     */\n    public blur(): void {\n        this.input.nativeElement.blur();\n    }\n\n    /**\n     * @name getElementPosition\n     */\n    public getElementPosition(): ClientRect {\n        return this.input.nativeElement.getBoundingClientRect();\n    }\n\n    /**\n     * - removes input from the component\n     * @name destroy\n     */\n    public destroy(): void {\n        const input = this.input.nativeElement;\n        input.parentElement.removeChild(input);\n    }\n\n    /**\n     * @name onKeyDown\n     * @param $event\n     */\n    public onKeyDown($event) {\n        this.inputText = this.value.value;\n        if ($event.key === 'Enter') {\n            this.submit($event);\n        } else {\n          return this.onKeydown.emit($event);\n        }\n    }\n\n    /**\n     * @name onKeyUp\n     * @param $event\n     */\n    public onKeyUp($event) {\n        this.inputText = this.value.value;\n        return this.onKeyup.emit($event);\n    }\n\n    /**\n     * @name submit\n     */\n    public submit($event: any): void {\n        $event.preventDefault();\n        this.onSubmit.emit($event);\n    }\n}\n","import {\n    Component,\n    Input\n} from '@angular/core';\n\n\nimport {\n    animate,\n    trigger,\n    style,\n    transition,\n    keyframes,\n    state\n} from '@angular/animations';\n\n@Component({\n    selector: 'tag-ripple',\n    styles: [`\n        :host {\n            width: 100%;\n            height: 100%;\n            left: 0;\n            overflow: hidden;\n            position: absolute;\n        }\n\n        .tag-ripple {\n            background: rgba(0, 0, 0, 0.1);\n            top: 50%;\n            left: 50%;\n            height: 100%;\n            transform: translate(-50%, -50%);\n            position: absolute;\n        }\n    `],\n    template: `\n        <div class=\"tag-ripple\" [@ink]=\"state\"></div>\n    `,\n    animations: [\n        trigger('ink', [\n            state('none', style({width: 0, opacity: 0})),\n            transition('none => clicked', [\n                animate(300, keyframes([\n                    style({opacity: 1, offset: 0, width: '30%', borderRadius: '100%'}),\n                    style({opacity: 1, offset: 0.5, width: '50%'}),\n                    style({opacity: 0.5, offset: 1, width: '100%', borderRadius: '16px'})\n                ]))\n            ])\n        ])\n    ]\n})\nexport class TagRipple {\n    @Input() public state = 'none';\n}\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    TemplateRef,\n    ElementRef,\n    HostListener,\n    HostBinding,\n    ViewChild,\n    ChangeDetectorRef,\n    Renderer2\n} from '@angular/core';\n\nimport { TagModel } from '../../core/accessor';\nimport { TagRipple } from '../tag/tag-ripple.component';\nimport { EventLike } from '../../core/helpers/event-like';\n\n// mocking navigator\nconst navigator = typeof window !== 'undefined' ? window.navigator : {\n    userAgent: 'Chrome',\n    vendor: 'Google Inc'\n};\n\nconst isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n\n@Component({\n    selector: 'tag',\n    templateUrl: './tag.template.html',\n    styleUrls: ['./tag-component.style.scss']\n})\nexport class TagComponent {\n    /**\n     * @name model {TagModel}\n     */\n    @Input()\n    public model: TagModel;\n\n    /**\n     * @name removable {boolean}\n     */\n    @Input()\n    public removable: boolean;\n\n    /**\n     * @name editable {boolean}\n     */\n    @Input()\n    public editable: boolean;\n\n    /**\n     * @name template {TemplateRef<any>}\n     */\n    @Input()\n    public template: TemplateRef<any>;\n\n    /**\n     * @name displayBy {string}\n     */\n    @Input()\n    public displayBy: string;\n\n    /**\n     * @name identifyBy {string}\n     */\n    @Input()\n    public identifyBy: string;\n\n    /**\n     * @name index {number}\n     */\n    @Input()\n    public index: number;\n\n    /**\n     * @name hasRipple\n     */\n    @Input()\n    public hasRipple: boolean;\n\n    /**\n     * @name disabled\n     */\n    @Input()\n    public disabled = false;\n\n    /**\n     * @name canAddTag\n     */\n    @Input()\n    public canAddTag: (tag: TagModel) => boolean;\n\n    /**\n     * @name onSelect\n     */\n    @Output()\n    public onSelect: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onRemove\n     */\n    @Output()\n    public onRemove: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onBlur\n     */\n    @Output()\n    public onBlur: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onKeyDown\n     */\n    @Output()\n    public onKeyDown: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * @name onTagEdited\n     */\n    @Output()\n    public onTagEdited: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name readonly {boolean}\n     */\n    public get readonly(): boolean {\n        return typeof this.model !== 'string' && this.model.readonly === true;\n    }\n\n    /**\n     * @name editing\n     */\n    public editing = false;\n\n    /**\n     * @name moving\n     */\n    @HostBinding('class.moving')\n    public moving: boolean;\n\n    /**\n     * @name rippleState\n     */\n    public rippleState = 'none';\n\n    /**\n     * @name ripple {TagRipple}\n     */\n    @ViewChild(TagRipple, { static: false })\n    public ripple: TagRipple;\n\n    constructor(\n        public element: ElementRef,\n        public renderer: Renderer2,\n        private cdRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * @name select\n     */\n    public select($event?: MouseEvent): void {\n        if (this.readonly || this.disabled) {\n            return;\n        }\n\n        if ($event) {\n            $event.stopPropagation();\n        }\n\n        this.focus();\n\n        this.onSelect.emit(this.model);\n    }\n\n    /**\n     * @name remove\n     */\n    public remove($event: MouseEvent): void {\n        $event.stopPropagation();\n        this.onRemove.emit(this);\n    }\n\n    /**\n     * @name focus\n     */\n    public focus(): void {\n        this.element.nativeElement.focus();\n    }\n\n    public move(): void {\n        this.moving = true;\n    }\n\n    /**\n     * @name keydown\n     * @param event\n     */\n    @HostListener('keydown', ['$event'])\n    public keydown(event: EventLike): void {\n        if (this.editing) {\n            if (event.keyCode === 13) {\n                return this.disableEditMode(event);\n            }\n        } else {\n            this.onKeyDown.emit({ event, model: this.model });\n        }\n    }\n\n    /**\n     * @name blink\n     */\n    public blink(): void {\n        const classList = this.element.nativeElement.classList;\n        classList.add('blink');\n\n        setTimeout(() => classList.remove('blink'), 50);\n    }\n\n    /**\n     * @name toggleEditMode\n     */\n    public toggleEditMode(): void {\n        if (this.editable) {\n            return this.editing ? undefined : this.activateEditMode();\n        }\n    }\n\n    /**\n     * @name onBlurred\n     * @param event\n     */\n    public onBlurred(event: any): void {\n        // Checks if it is editable first before handeling the onBlurred event in order to prevent\n        // a bug in IE where tags are still editable with onlyFromAutocomplete set to true\n        if (!this.editable) {\n            return;\n        }\n\n        this.disableEditMode();\n\n        const value: string = event.target.innerText;\n        const result =\n            typeof this.model === 'string'\n                ? value\n                : { ...this.model, [this.displayBy]: value };\n\n        this.onBlur.emit(result);\n    }\n\n    /**\n     * @name getDisplayValue\n     * @param item\n     */\n    public getDisplayValue(item: TagModel): string {\n        return typeof item === 'string' ? item : item[this.displayBy];\n    }\n\n    /**\n     * @desc returns whether the ripple is visible or not\n     * only works in Chrome\n     * @name isRippleVisible\n     */\n    public get isRippleVisible(): boolean {\n        return !this.readonly && !this.editing && isChrome && this.hasRipple;\n    }\n\n    /**\n     * @name disableEditMode\n     * @param $event\n     */\n    public disableEditMode($event?: EventLike): void {\n        const classList = this.element.nativeElement.classList;\n        const input = this.getContentEditableText();\n\n        this.editing = false;\n        classList.remove('tag--editing');\n\n        if (!input) {\n            this.setContentEditableText(this.model);\n            return;\n        }\n\n        this.storeNewValue(input);\n        this.cdRef.detectChanges();\n\n        if ($event) {\n            $event.preventDefault();\n        }\n    }\n\n    /**\n     * @name isDeleteIconVisible\n     */\n    public isDeleteIconVisible(): boolean {\n        return (\n            !this.readonly && !this.disabled && this.removable && !this.editing\n        );\n    }\n\n    /**\n     * @name getContentEditableText\n     */\n    private getContentEditableText(): string {\n        const input = this.getContentEditable();\n\n        return input ? input.innerText.trim() : '';\n    }\n\n    /**\n     * @name setContentEditableText\n     * @param model\n     */\n    private setContentEditableText(model: TagModel) {\n        const input = this.getContentEditable();\n        const value = this.getDisplayValue(model);\n\n        input.innerText = value;\n    }\n\n    /**\n     * @name\n     */\n    private activateEditMode(): void {\n        const classList = this.element.nativeElement.classList;\n        classList.add('tag--editing');\n\n        this.editing = true;\n    }\n\n    /**\n     * @name storeNewValue\n     * @param input\n     */\n    private storeNewValue(input: string): void {\n        const exists = (tag: TagModel) => {\n            return typeof tag === 'string'\n                ? tag === input\n                : tag[this.displayBy] === input;\n        };\n\n        const hasId = () => {\n            return this.model[this.identifyBy] !== this.model[this.displayBy];\n        };\n\n        // if the value changed, replace the value in the model\n        if (exists(this.model)) {\n            return;\n        }\n\n        const model =\n            typeof this.model === 'string'\n                ? input\n                : {\n                      index: this.index,\n                      [this.identifyBy]: hasId()\n                          ? this.model[this.identifyBy]\n                          : input,\n                      [this.displayBy]: input\n                  };\n\n        if (this.canAddTag(model)) {\n            this.onTagEdited.emit({ tag: model, index: this.index });\n        } else {\n            this.setContentEditableText(this.model);\n        }\n    }\n\n    /**\n     * @name getContentEditable\n     */\n    private getContentEditable(): HTMLInputElement {\n        return this.element.nativeElement.querySelector('[contenteditable]');\n    }\n}\n","import {\n    animate,\n    trigger,\n    style,\n    transition,\n    keyframes,\n    state,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n/**\n * @name animations\n */\nexport const animations = [\n    trigger('animation', [\n        state('in', style({\n            opacity: 1\n        })),\n        state('out', style({\n            opacity: 0\n        })),\n        transition(':enter', [\n            animate('{{ enter }}', keyframes([\n                style({opacity: 0, offset: 0, transform: 'translate(0px, 20px)'}),\n                style({opacity: 0.3, offset: 0.3, transform: 'translate(0px, -10px)'}),\n                style({opacity: 0.5, offset: 0.5, transform: 'translate(0px, 0px)'}),\n                style({opacity: 0.75, offset: 0.75, transform: 'translate(0px, 5px)'}),\n                style({opacity: 1, offset: 1, transform: 'translate(0px, 0px)'})\n            ]))\n        ]),\n        transition(':leave', [\n            animate('{{ leave }}', keyframes([\n                style({opacity: 1, transform: 'translateX(0)', offset: 0}),\n                style({opacity: 1, transform: 'translateX(-15px)', offset: 0.7}),\n                style({opacity: 0, transform: 'translateX(100%)', offset: 1.0})\n            ]))\n        ])\n    ])\n];\n","import {\n  Component,\n  ContentChildren,\n  EventEmitter,\n  HostListener,\n  Injector,\n  Input,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  AfterViewInit\n} from '@angular/core';\n\n// rx\nimport { Observable } from 'rxjs';\nimport { filter, first, debounceTime } from 'rxjs/operators';\n\nimport { Ng2Dropdown, Ng2MenuItem } from 'ng2-material-dropdown';\nimport { defaults } from '../../defaults';\nimport { TagModel } from '../../core/accessor';\nimport { TagInputComponent } from '../tag-input/tag-input';\n\n@Component({\n  selector: 'tag-input-dropdown',\n  templateUrl: './tag-input-dropdown.template.html'\n})\nexport class TagInputDropdown implements AfterViewInit {\n  /**\n   * @name dropdown\n   */\n  @ViewChild(Ng2Dropdown, { static: false }) public dropdown: Ng2Dropdown;\n\n  /**\n   * @name menuTemplate\n   * @desc reference to the template if provided by the user\n   */\n  @ContentChildren(TemplateRef) public templates: QueryList<TemplateRef<any>>;\n\n  /**\n   * @name offset\n   */\n  @Input() public offset: string = defaults.dropdown.offset;\n\n  /**\n   * @name focusFirstElement\n   */\n  @Input() public focusFirstElement = defaults.dropdown.focusFirstElement;\n\n  /**\n   * - show autocomplete dropdown if the value of input is empty\n   * @name showDropdownIfEmpty\n   */\n  @Input() public showDropdownIfEmpty = defaults.dropdown.showDropdownIfEmpty;\n\n  /**\n   * @description observable passed as input which populates the autocomplete items\n   * @name autocompleteObservable\n   */\n  @Input() public autocompleteObservable: (text: string) => Observable<any>;\n\n  /**\n   * - desc minimum text length in order to display the autocomplete dropdown\n   * @name minimumTextLength\n   */\n  @Input() public minimumTextLength = defaults.dropdown.minimumTextLength;\n\n  /**\n   * - number of items to display in the autocomplete dropdown\n   * @name limitItemsTo\n   */\n  @Input() public limitItemsTo: number = defaults.dropdown.limitItemsTo;\n\n  /**\n   * @name displayBy\n   */\n  @Input() public displayBy = defaults.dropdown.displayBy;\n\n  /**\n   * @name identifyBy\n   */\n  @Input() public identifyBy = defaults.dropdown.identifyBy;\n\n  /**\n   * @description a function a developer can use to implement custom matching for the autocomplete\n   * @name matchingFn\n   */\n  @Input() public matchingFn: (value: string, target: TagModel) => boolean =\n    defaults.dropdown.matchingFn;\n\n  /**\n   * @name appendToBody\n   */\n  @Input() public appendToBody = defaults.dropdown.appendToBody;\n\n  /**\n   * @name keepOpen\n   * @description option to leave dropdown open when adding a new item\n   */\n  @Input() public keepOpen = defaults.dropdown.keepOpen;\n\n  /**\n   * @name dynamicUpdate\n   */\n  @Input() public dynamicUpdate = defaults.dropdown.dynamicUpdate;\n\n  /**\n   * @name zIndex\n   */\n  @Input() public zIndex = defaults.dropdown.zIndex;\n\n  /**\n   * list of items that match the current value of the input (for autocomplete)\n   * @name items\n   */\n  public items: TagModel[] = [];\n\n  /**\n   * @name tagInput\n   */\n  public tagInput: TagInputComponent = this.injector.get(TagInputComponent);\n\n  /**\n   * @name _autocompleteItems\n   */\n  private _autocompleteItems: TagModel[] = [];\n\n  /**\n   * @name autocompleteItems\n   * @param items\n   */\n  public set autocompleteItems(items: TagModel[]) {\n    this._autocompleteItems = items;\n  }\n\n  /**\n   * @name autocompleteItems\n   * @desc array of items that will populate the autocomplete\n   */\n  @Input() public get autocompleteItems(): TagModel[] {\n    const items = this._autocompleteItems;\n\n    if (!items) {\n      return [];\n    }\n\n    return items.map((item: TagModel) => {\n      return typeof item === 'string'\n        ? {\n            [this.displayBy]: item,\n            [this.identifyBy]: item\n          }\n        : item;\n    });\n  }\n\n  constructor(private readonly injector: Injector) {}\n\n  /**\n   * @name ngAfterviewInit\n   */\n  ngAfterViewInit(): void {\n    this.onItemClicked().subscribe((item: Ng2MenuItem) => {\n      this.requestAdding(item);\n    });\n\n    // reset itemsMatching array when the dropdown is hidden\n    this.onHide().subscribe(this.resetItems);\n\n    const DEBOUNCE_TIME = 200;\n    const KEEP_OPEN = this.keepOpen;\n\n    this.tagInput.onTextChange\n      .asObservable()\n      .pipe(\n        debounceTime(DEBOUNCE_TIME),\n        filter((value: string) => {\n          if (KEEP_OPEN === false) {\n            return value.length > 0;\n          }\n\n          return true;\n        })\n      )\n      .subscribe(this.show);\n  }\n\n  /**\n   * @name updatePosition\n   */\n  public updatePosition(): void {\n    const position = this.tagInput.inputForm.getElementPosition();\n\n    this.dropdown.menu.updatePosition(position, this.dynamicUpdate);\n  }\n\n  /**\n   * @name isVisible\n   */\n  public get isVisible(): boolean {\n    return this.dropdown.menu.dropdownState.menuState.isVisible;\n  }\n\n  /**\n   * @name onHide\n   */\n  public onHide(): EventEmitter<Ng2Dropdown> {\n    return this.dropdown.onHide;\n  }\n\n  /**\n   * @name onItemClicked\n   */\n  public onItemClicked(): EventEmitter<string> {\n    return this.dropdown.onItemClicked;\n  }\n\n  /**\n   * @name selectedItem\n   */\n  public get selectedItem(): Ng2MenuItem {\n    return this.dropdown.menu.dropdownState.dropdownState.selectedItem;\n  }\n\n  /**\n   * @name state\n   */\n  public get state(): any {\n    return this.dropdown.menu.dropdownState;\n  }\n\n  /**\n   *\n   * @name show\n   */\n  public show = (): void => {\n    const maxItemsReached =\n      this.tagInput.items.length === this.tagInput.maxItems;\n    const value = this.getFormValue();\n    const hasMinimumText = value.trim().length >= this.minimumTextLength;\n    const position = this.calculatePosition();\n    const items = this.getMatchingItems(value);\n    const hasItems = items.length > 0;\n    const isHidden = this.isVisible === false;\n    const showDropdownIfEmpty = this.showDropdownIfEmpty && hasItems && !value;\n    const isDisabled = this.tagInput.disable;\n\n    const shouldShow =\n      isHidden && ((hasItems && hasMinimumText) || showDropdownIfEmpty);\n    const shouldHide = this.isVisible && !hasItems;\n\n    if (this.autocompleteObservable && hasMinimumText) {\n      return this.getItemsFromObservable(value);\n    }\n\n    if (\n      (!this.showDropdownIfEmpty && !value) ||\n      maxItemsReached ||\n      isDisabled\n    ) {\n      return this.dropdown.hide();\n    }\n\n    this.setItems(items);\n\n    if (shouldShow) {\n      this.dropdown.show(position);\n    } else if (shouldHide) {\n      this.hide();\n    }\n  };\n\n  /**\n   * @name hide\n   */\n  public hide(): void {\n    this.resetItems();\n    this.dropdown.hide();\n  }\n\n  /**\n   * @name scrollListener\n   */\n  @HostListener('window:scroll')\n  public scrollListener(): void {\n    if (!this.isVisible || !this.dynamicUpdate) {\n      return;\n    }\n\n    this.updatePosition();\n  }\n\n  /**\n   * @name onWindowBlur\n   */\n  @HostListener('window:blur')\n  public onWindowBlur(): void {\n    this.dropdown.hide();\n  }\n\n  /**\n   * @name getFormValue\n   */\n  private getFormValue(): string {\n    const formValue = this.tagInput.formValue;\n    return formValue ? formValue.toString().trim() : '';\n  }\n\n  /**\n   * @name calculatePosition\n   */\n  private calculatePosition(): ClientRect {\n    return this.tagInput.inputForm.getElementPosition();\n  }\n\n  /**\n   * @name requestAdding\n   * @param item {Ng2MenuItem}\n   */\n  private requestAdding = async (item: Ng2MenuItem) => {\n    const tag = this.createTagModel(item);\n    await this.tagInput.onAddingRequested(true, tag).catch(() => {});\n  };\n\n  /**\n   * @name createTagModel\n   * @param item\n   */\n  private createTagModel(item: Ng2MenuItem): TagModel {\n    const display =\n      typeof item.value === 'string' ? item.value : item.value[this.displayBy];\n    const value =\n      typeof item.value === 'string' ? item.value : item.value[this.identifyBy];\n\n    return {\n      ...item.value,\n      [this.tagInput.displayBy]: display,\n      [this.tagInput.identifyBy]: value\n    };\n  }\n\n  /**\n   *\n   * @param value {string}\n   */\n  private getMatchingItems(value: string): TagModel[] {\n    if (!value && !this.showDropdownIfEmpty) {\n      return [];\n    }\n\n    const dupesAllowed = this.tagInput.allowDupes;\n\n    return this.autocompleteItems.filter((item: TagModel) => {\n      const hasValue = dupesAllowed\n        ? false\n        : this.tagInput.tags.some(tag => {\n            const identifyBy = this.tagInput.identifyBy;\n            const model =\n              typeof tag.model === 'string' ? tag.model : tag.model[identifyBy];\n\n            return model === item[this.identifyBy];\n          });\n\n      return this.matchingFn(value, item) && hasValue === false;\n    });\n  }\n\n  /**\n   * @name setItems\n   */\n  private setItems(items: TagModel[]): void {\n    this.items = items.slice(0, this.limitItemsTo || items.length);\n  }\n\n  /**\n   * @name resetItems\n   */\n  private resetItems = (): void => {\n    this.items = [];\n  };\n\n  /**\n   * @name populateItems\n   * @param data\n   */\n  private populateItems(data: any): TagInputDropdown {\n    this.autocompleteItems = data.map(item => {\n      return typeof item === 'string'\n        ? {\n            [this.displayBy]: item,\n            [this.identifyBy]: item\n          }\n        : item;\n    });\n\n    return this;\n  }\n\n  /**\n   * @name getItemsFromObservable\n   * @param text\n   */\n  private getItemsFromObservable = (text: string): void => {\n    this.setLoadingState(true);\n\n    const subscribeFn = (data: any[]) => {\n      // hide loading animation\n      this.setLoadingState(false)\n        // add items\n        .populateItems(data);\n\n      this.setItems(this.getMatchingItems(text));\n\n      if (this.items.length) {\n        this.dropdown.show(this.calculatePosition());\n      } else {\n        this.dropdown.hide();\n      }\n    };\n\n    this.autocompleteObservable(text)\n      .pipe(first())\n      .subscribe(subscribeFn, () => this.setLoadingState(false));\n  };\n\n  /**\n   * @name setLoadingState\n   * @param state\n   */\n  private setLoadingState(state: boolean): TagInputDropdown {\n    this.tagInput.isLoading = state;\n\n    return this;\n  }\n}\n","// angular\nimport {\n    Component,\n    forwardRef,\n    HostBinding,\n    Input,\n    Output,\n    EventEmitter,\n    Renderer2,\n    ViewChild,\n    ViewChildren,\n    ContentChildren,\n    ContentChild,\n    OnInit,\n    TemplateRef,\n    QueryList,\n    AfterViewInit\n} from '@angular/core';\n\nimport {\n    AsyncValidatorFn,\n    FormControl,\n    NG_VALUE_ACCESSOR,\n    ValidatorFn\n} from '@angular/forms';\n\n// rx\nimport { Observable } from 'rxjs';\nimport { debounceTime, filter, map, first } from 'rxjs/operators';\n\n// ng2-tag-input\nimport { TagInputAccessor, TagModel } from '../../core/accessor';\nimport { listen } from '../../core/helpers/listen';\nimport * as constants from '../../core/constants';\n\nimport { DragProvider, DraggedTag } from '../../core/providers/drag-provider';\n\nimport { TagInputForm } from '../tag-input-form/tag-input-form.component';\nimport { TagComponent } from '../tag/tag.component';\n\nimport { animations } from './animations';\nimport { defaults } from '../../defaults';\nimport { TagInputDropdown } from '../dropdown/tag-input-dropdown.component';\n\n// angular universal hacks\n/* tslint:disable-next-line */\nconst DragEvent = (window as any).DragEvent;\n\nconst CUSTOM_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\n@Component({\n    selector: 'tag-input',\n    providers: [CUSTOM_ACCESSOR],\n    styleUrls: ['./tag-input.style.scss'],\n    templateUrl: './tag-input.template.html',\n    animations\n})\nexport class TagInputComponent extends TagInputAccessor implements OnInit, AfterViewInit {\n    /**\n     * @name separatorKeys\n     * @desc keyboard keys with which a user can separate items\n     */\n    @Input() public separatorKeys: string[] = defaults.tagInput.separatorKeys;\n\n    /**\n     * @name separatorKeyCodes\n     * @desc keyboard key codes with which a user can separate items\n     */\n    @Input() public separatorKeyCodes: number[] = defaults.tagInput.separatorKeyCodes;\n\n    /**\n     * @name placeholder\n     * @desc the placeholder of the input text\n     */\n    @Input() public placeholder: string = defaults.tagInput.placeholder;\n\n    /**\n     * @name secondaryPlaceholder\n     * @desc placeholder to appear when the input is empty\n     */\n    @Input() public secondaryPlaceholder: string = defaults.tagInput.secondaryPlaceholder;\n\n    /**\n     * @name maxItems\n     * @desc maximum number of items that can be added\n     */\n    @Input() public maxItems: number = defaults.tagInput.maxItems;\n\n    /**\n     * @name validators\n     * @desc array of Validators that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public validators: ValidatorFn[] = defaults.tagInput.validators;\n\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public asyncValidators: AsyncValidatorFn[] = defaults.tagInput.asyncValidators;\n\n    /**\n    * - if set to true, it will only possible to add items from the autocomplete\n    * @name onlyFromAutocomplete\n    */\n    @Input() public onlyFromAutocomplete = defaults.tagInput.onlyFromAutocomplete;\n\n    /**\n     * @name errorMessages\n     */\n    @Input() public errorMessages: { [key: string]: string } = defaults.tagInput.errorMessages;\n\n    /**\n     * @name theme\n     */\n    @Input() public theme: string = defaults.tagInput.theme;\n\n    /**\n     * @name onTextChangeDebounce\n     */\n    @Input() public onTextChangeDebounce = defaults.tagInput.onTextChangeDebounce;\n\n    /**\n     * - custom id assigned to the input\n     * @name id\n     */\n    @Input() public inputId = defaults.tagInput.inputId;\n\n    /**\n     * - custom class assigned to the input\n     */\n    @Input() public inputClass: string = defaults.tagInput.inputClass;\n\n    /**\n     * - option to clear text input when the form is blurred\n     * @name clearOnBlur\n     */\n    @Input() public clearOnBlur: boolean = defaults.tagInput.clearOnBlur;\n\n    /**\n     * - hideForm\n     * @name clearOnBlur\n     */\n    @Input() public hideForm: boolean = defaults.tagInput.hideForm;\n\n    /**\n     * @name addOnBlur\n     */\n    @Input() public addOnBlur: boolean = defaults.tagInput.addOnBlur;\n\n    /**\n     * @name addOnPaste\n     */\n    @Input() public addOnPaste: boolean = defaults.tagInput.addOnPaste;\n\n    /**\n     * - pattern used with the native method split() to separate patterns in the string pasted\n     * @name pasteSplitPattern\n     */\n    @Input() public pasteSplitPattern = defaults.tagInput.pasteSplitPattern;\n\n    /**\n     * @name blinkIfDupe\n     */\n    @Input() public blinkIfDupe = defaults.tagInput.blinkIfDupe;\n\n    /**\n     * @name removable\n     */\n    @Input() public removable = defaults.tagInput.removable;\n\n    /**\n     * @name editable\n     */\n    @Input() public editable: boolean = defaults.tagInput.editable;\n\n    /**\n     * @name allowDupes\n     */\n    @Input() public allowDupes = defaults.tagInput.allowDupes;\n\n    /**\n     * @description if set to true, the newly added tags will be added as strings, and not objects\n     * @name modelAsStrings\n     */\n    @Input() public modelAsStrings = defaults.tagInput.modelAsStrings;\n\n    /**\n     * @name trimTags\n     */\n    @Input() public trimTags = defaults.tagInput.trimTags;\n\n    /**\n     * @name inputText\n     */\n    @Input() public get inputText(): string {\n        return this.inputTextValue;\n    }\n\n    /**\n     * @name ripple\n     */\n    @Input() public ripple: boolean = defaults.tagInput.ripple;\n\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n    @Input() public tabindex: string = defaults.tagInput.tabIndex;\n\n    /**\n     * @name disable\n     */\n    @Input() public disable: boolean = defaults.tagInput.disable;\n\n    /**\n     * @name dragZone\n     */\n    @Input() public dragZone: string = defaults.tagInput.dragZone;\n\n    /**\n     * @name onRemoving\n     */\n    @Input() public onRemoving = defaults.tagInput.onRemoving;\n\n    /**\n     * @name onAdding\n     */\n    @Input() public onAdding = defaults.tagInput.onAdding;\n\n    /**\n     * @name animationDuration\n     */\n    @Input() public animationDuration = defaults.tagInput.animationDuration;\n\n    /**\n     * @name onAdd\n     * @desc event emitted when adding a new item\n     */\n    @Output() public onAdd = new EventEmitter<TagModel>();\n\n    /**\n     * @name onRemove\n     * @desc event emitted when removing an existing item\n     */\n    @Output() public onRemove = new EventEmitter<TagModel>();\n\n    /**\n     * @name onSelect\n     * @desc event emitted when selecting an item\n     */\n    @Output() public onSelect = new EventEmitter<TagModel>();\n\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is focused\n     */\n    @Output() public onFocus = new EventEmitter<string>();\n\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is blurred\n     */\n    @Output() public onBlur = new EventEmitter<string>();\n\n    /**\n     * @name onTextChange\n     * @desc event emitted when the input value changes\n     */\n    @Output() public onTextChange = new EventEmitter<TagModel>();\n\n    /**\n     * - output triggered when text is pasted in the form\n     * @name onPaste\n     */\n    @Output() public onPaste = new EventEmitter<string>();\n\n    /**\n     * - output triggered when tag entered is not valid\n     * @name onValidationError\n     */\n    @Output() public onValidationError = new EventEmitter<TagModel>();\n\n    /**\n     * - output triggered when tag is edited\n     * @name onTagEdited\n     */\n    @Output() public onTagEdited = new EventEmitter<TagModel>();\n\n    /**\n     * @name dropdown\n     */\n    // @ContentChild(forwardRef(() => TagInputDropdown), {static: true}) dropdown: TagInputDropdown;\n    @ContentChild(TagInputDropdown, { static: false }) public dropdown: TagInputDropdown;\n    /**\n     * @name template\n     * @desc reference to the template if provided by the user\n     */\n    @ContentChildren(TemplateRef, { descendants: false }) public templates: QueryList<TemplateRef<any>>;\n\n    /**\n     * @name inputForm\n     */\n    @ViewChild(TagInputForm, { static: false }) public inputForm: TagInputForm;\n\n    /**\n     * @name selectedTag\n     * @desc reference to the current selected tag\n     */\n    public selectedTag: TagModel | undefined;\n\n    /**\n     * @name isLoading\n     */\n    public isLoading = false;\n\n    /**\n     * @name inputText\n     * @param text\n     */\n    public set inputText(text: string) {\n        this.inputTextValue = text;\n        this.inputTextChange.emit(text);\n    }\n\n    /**\n     * @name tags\n     * @desc list of Element items\n     */\n    @ViewChildren(TagComponent) public tags: QueryList<TagComponent>;\n\n    /**\n     * @name listeners\n     * @desc array of events that get fired using @fireEvents\n     */\n    private listeners = {\n        [constants.KEYDOWN]: <{ (fun): any }[]>[],\n        [constants.KEYUP]: <{ (fun): any }[]>[]\n    };\n\n    /**\n     * @description emitter for the 2-way data binding inputText value\n     * @name inputTextChange\n     */\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\n\n    /**\n     * @description private variable to bind get/set\n     * @name inputTextValue\n     */\n    public inputTextValue = '';\n\n    /**\n     * @desc removes the tab index if it is set - it will be passed through to the input\n     * @name tabindexAttr\n     */\n    @HostBinding('attr.tabindex')\n    public get tabindexAttr(): string {\n        return this.tabindex !== '' ? '-1' : '';\n    }\n\n    /**\n     * @name animationMetadata\n     */\n    public animationMetadata: { value: string, params: object };\n\n    public errors: string[] = [];\n\n    public isProgressBarVisible$: Observable<boolean>;\n\n    constructor(private readonly renderer: Renderer2,\n        public readonly dragProvider: DragProvider) {\n        super();\n    }\n\n    /**\n     * @name ngAfterViewInit\n     */\n    public ngAfterViewInit(): void {\n        // set up listeners\n\n        this.setUpKeypressListeners();\n        this.setupSeparatorKeysListener();\n        this.setUpInputKeydownListeners();\n\n        if (this.onTextChange.observers.length) {\n            this.setUpTextChangeSubscriber();\n        }\n\n        // if clear on blur is set to true, subscribe to the event and clear the text's form\n        if (this.clearOnBlur || this.addOnBlur) {\n            this.setUpOnBlurSubscriber();\n        }\n\n        // if addOnPaste is set to true, register the handler and add items\n        if (this.addOnPaste) {\n            this.setUpOnPasteListener();\n        }\n\n        const statusChanges$ = this.inputForm.form.statusChanges;\n\n        statusChanges$.pipe(\n            filter((status: string) => status !== 'PENDING')\n        ).subscribe(() => {\n            this.errors = this.inputForm.getErrorMessages(this.errorMessages);\n        });\n\n        this.isProgressBarVisible$ = statusChanges$.pipe(\n            map((status: string) => {\n                return status === 'PENDING' || this.isLoading;\n            })\n        );\n\n        // if hideForm is set to true, remove the input\n        if (this.hideForm) {\n            this.inputForm.destroy();\n        }\n    }\n\n    /**\n     * @name ngOnInit\n     */\n    public ngOnInit(): void {\n        // if the number of items specified in the model is > of the value of maxItems\n        // degrade gracefully and let the max number of items to be the number of items in the model\n        // though, warn the user.\n        const hasReachedMaxItems = this.maxItems !== undefined &&\n            this.items &&\n            this.items.length > this.maxItems;\n\n        if (hasReachedMaxItems) {\n            this.maxItems = this.items.length;\n            console.warn(constants.MAX_ITEMS_WARNING);\n        }\n\n        // Setting editable to false to fix problem with tags in IE still being editable when\n        // onlyFromAutocomplete is true\n        this.editable = this.onlyFromAutocomplete ? false : this.editable;\n\n        this.setAnimationMetadata();\n    }\n\n    /**\n     * @name onRemoveRequested\n     * @param tag\n     * @param index\n     */\n    public onRemoveRequested(tag: TagModel, index: number): Promise<TagModel> {\n        return new Promise(resolve => {\n            const subscribeFn = (model: TagModel) => {\n                this.removeItem(model, index);\n                resolve(tag);\n            };\n\n            this.onRemoving ?\n                this.onRemoving(tag)\n                    .pipe(first())\n                    .subscribe(subscribeFn) : subscribeFn(tag);\n        });\n    }\n\n    /**\n     * @name onAddingRequested\n     * @param fromAutocomplete {boolean}\n     * @param tag {TagModel}\n     * @param index? {number}\n     * @param giveupFocus? {boolean}\n     */\n    public onAddingRequested(fromAutocomplete: boolean, tag: TagModel,\n        index?: number, giveupFocus?: boolean): Promise<TagModel> {\n        return new Promise((resolve, reject) => {\n            const subscribeFn = (model: TagModel) => {\n                return this\n                    .addItem(fromAutocomplete, model, index, giveupFocus)\n                    .then(resolve)\n                    .catch(reject);\n            };\n\n            return this.onAdding ?\n                this.onAdding(tag)\n                    .pipe(first())\n                    .subscribe(subscribeFn, reject) : subscribeFn(tag);\n        });\n    }\n\n    /**\n     * @name appendTag\n     * @param tag {TagModel}\n     */\n    public appendTag = (tag: TagModel, index = this.items.length): void => {\n        const items = this.items;\n        const model = this.modelAsStrings ? tag[this.identifyBy] : tag;\n\n        this.items = [\n            ...items.slice(0, index),\n            model,\n            ...items.slice(index, items.length)\n        ];\n    }\n\n    /**\n     * @name createTag\n     * @param model\n     */\n    public createTag = (model: TagModel): TagModel => {\n        const trim = (val: TagModel, key: string): TagModel => {\n            return typeof val === 'string' ? val.trim() : val[key];\n        };\n\n        return {\n            ...typeof model !== 'string' ? model : {},\n            [this.displayBy]: this.trimTags ? trim(model, this.displayBy) : model,\n            [this.identifyBy]: this.trimTags ? trim(model, this.identifyBy) : model\n        };\n    }\n\n    /**\n     * @name selectItem\n     * @desc selects item passed as parameter as the selected tag\n     * @param item\n     * @param emit\n     */\n    public selectItem(item: TagModel | undefined, emit = true): void {\n        const isReadonly = item && typeof item !== 'string' && item.readonly;\n\n        if (isReadonly || this.selectedTag === item) {\n            return;\n        }\n\n        this.selectedTag = item;\n\n        if (emit) {\n            this.onSelect.emit(item);\n        }\n    }\n\n    /**\n     * @name fireEvents\n     * @desc goes through the list of the events for a given eventName, and fires each of them\n     * @param eventName\n     * @param $event\n     */\n    public fireEvents(eventName: string, $event?): void {\n        this.listeners[eventName].forEach(listener => listener.call(this, $event));\n    }\n\n    /**\n     * @name handleKeydown\n     * @desc handles action when the user hits a keyboard key\n     * @param data\n     */\n    public handleKeydown(data: any): void {\n        const event = data.event;\n        const key = event.keyCode || event.which;\n        const shiftKey = event.shiftKey || false;\n\n        switch (constants.KEY_PRESS_ACTIONS[key]) {\n            case constants.ACTIONS_KEYS.DELETE:\n                if (this.selectedTag && this.removable) {\n                    const index = this.items.indexOf(this.selectedTag);\n                    this.onRemoveRequested(this.selectedTag, index);\n                }\n                break;\n\n            case constants.ACTIONS_KEYS.SWITCH_PREV:\n                this.moveToTag(data.model, constants.PREV);\n                break;\n\n            case constants.ACTIONS_KEYS.SWITCH_NEXT:\n                this.moveToTag(data.model, constants.NEXT);\n                break;\n\n            case constants.ACTIONS_KEYS.TAB:\n                if (shiftKey) {\n                    if (this.isFirstTag(data.model)) {\n                        return;\n                    }\n\n                    this.moveToTag(data.model, constants.PREV);\n                } else {\n                    if (this.isLastTag(data.model) && (this.disable || this.maxItemsReached)) {\n                        return;\n                    }\n\n                    this.moveToTag(data.model, constants.NEXT);\n                }\n                break;\n\n            default:\n                return;\n        }\n\n        // prevent default behaviour\n        event.preventDefault();\n    }\n\n    public async onFormSubmit() {\n        try {\n            await this.onAddingRequested(false, this.formValue);\n        } catch {\n            return;\n        }\n    }\n\n    /**\n     * @name setInputValue\n     * @param value\n     */\n    public setInputValue(value: string, emitEvent = true): void {\n        const control = this.getControl();\n\n        // update form value with the transformed item\n        control.setValue(value, { emitEvent });\n    }\n\n    /**\n     * @name getControl\n     */\n    private getControl(): FormControl {\n        return this.inputForm.value as FormControl;\n    }\n\n    /**\n     * @name focus\n     * @param applyFocus\n     * @param displayAutocomplete\n     */\n    public focus(applyFocus = false, displayAutocomplete = false): void {\n        if (this.dragProvider.getState('dragging')) {\n            return;\n        }\n\n        this.selectItem(undefined, false);\n\n        if (applyFocus) {\n            this.inputForm.focus();\n            this.onFocus.emit(this.formValue);\n        }\n    }\n\n    /**\n     * @name blur\n     */\n    public blur(): void {\n        this.onTouched();\n\n        this.onBlur.emit(this.formValue);\n    }\n\n    /**\n     * @name hasErrors\n     */\n    public hasErrors(): boolean {\n        return !!this.inputForm && this.inputForm.hasErrors();\n    }\n\n    /**\n     * @name isInputFocused\n     */\n    public isInputFocused(): boolean {\n        return !!this.inputForm && this.inputForm.isInputFocused();\n    }\n\n    /**\n     * - this is the one way I found to tell if the template has been passed and it is not\n     * the template for the menu item\n     * @name hasCustomTemplate\n     */\n    public hasCustomTemplate(): boolean {\n        const template = this.templates ? this.templates.first : undefined;\n        const menuTemplate = this.dropdown && this.dropdown.templates ?\n            this.dropdown.templates.first : undefined;\n\n        return Boolean(template && template !== menuTemplate);\n    }\n\n    /**\n     * @name maxItemsReached\n     */\n    public get maxItemsReached(): boolean {\n        return this.maxItems !== undefined &&\n            this.items.length >= this.maxItems;\n    }\n\n    /**\n     * @name formValue\n     */\n    public get formValue(): string {\n        const form = this.inputForm.value;\n\n        return form ? form.value : '';\n    }\n\n    /**3\n     * @name onDragStarted\n     * @param event\n     * @param index\n     */\n    public onDragStarted(event: DragEvent, tag: TagModel, index: number): void {\n        event.stopPropagation();\n\n        const item = { zone: this.dragZone, tag, index } as DraggedTag;\n\n        this.dragProvider.setSender(this);\n        this.dragProvider.setDraggedItem(event, item);\n        this.dragProvider.setState({ dragging: true, index });\n    }\n\n    /**\n     * @name onDragOver\n     * @param event\n     */\n    public onDragOver(event: DragEvent, index?: number): void {\n        this.dragProvider.setState({ dropping: true });\n        this.dragProvider.setReceiver(this);\n\n        event.preventDefault();\n    }\n\n    /**\n     * @name onTagDropped\n     * @param event\n     * @param index\n     */\n    public onTagDropped(event: DragEvent, index?: number): void {\n        const item = this.dragProvider.getDraggedItem(event);\n\n        if (!item || item.zone !== this.dragZone) {\n            return;\n        }\n\n        this.dragProvider.onTagDropped(item.tag, item.index, index);\n\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    /**\n     * @name isDropping\n     */\n    public isDropping(): boolean {\n        const isReceiver = this.dragProvider.receiver === this;\n        const isDropping = this.dragProvider.getState('dropping');\n\n        return Boolean(isReceiver && isDropping);\n    }\n\n    /**\n     * @name onTagBlurred\n     * @param changedElement {TagModel}\n     * @param index {number}\n     */\n    public onTagBlurred(changedElement: TagModel, index: number): void {\n        this.items[index] = changedElement;\n        this.blur();\n    }\n\n    /**\n     * @name trackBy\n     * @param items\n     */\n    public trackBy(index: number, item: TagModel): string {\n        return item[this.identifyBy];\n    }\n\n    /**\n     * @name updateEditedTag\n     * @param tag\n     */\n    public updateEditedTag({ tag, index }: { tag: TagModel, index: number }): void {\n        this.onTagEdited.emit(tag);\n    }\n\n    /**\n     *\n     * @param tag\n     * @param isFromAutocomplete\n     */\n    public isTagValid = (tag: TagModel, fromAutocomplete = false): boolean => {\n        const selectedItem = this.dropdown ? this.dropdown.selectedItem : undefined;\n        const value = this.getItemDisplay(tag).trim();\n\n        if (selectedItem && !fromAutocomplete || !value) {\n            return false;\n        }\n\n        const dupe = this.findDupe(tag, fromAutocomplete);\n\n        // if so, give a visual cue and return false\n        if (!this.allowDupes && dupe && this.blinkIfDupe) {\n            const model = this.tags.find(item => {\n                return this.getItemValue(item.model) === this.getItemValue(dupe);\n            });\n\n            if (model) {\n                model.blink();\n            }\n        }\n\n        const isFromAutocomplete = fromAutocomplete && this.onlyFromAutocomplete;\n\n        const assertions = [\n            // 1. there must be no dupe OR dupes are allowed\n            !dupe || this.allowDupes,\n\n            // 2. check max items has not been reached\n            !this.maxItemsReached,\n\n            // 3. check item comes from autocomplete or onlyFromAutocomplete is false\n            ((isFromAutocomplete) || !this.onlyFromAutocomplete)\n        ];\n\n        return assertions.filter(Boolean).length === assertions.length;\n    }\n\n    /**\n     * @name moveToTag\n     * @param item\n     * @param direction\n     */\n    private moveToTag(item: TagModel, direction: string): void {\n        const isLast = this.isLastTag(item);\n        const isFirst = this.isFirstTag(item);\n        const stopSwitch = (direction === constants.NEXT && isLast) ||\n            (direction === constants.PREV && isFirst);\n\n        if (stopSwitch) {\n            this.focus(true);\n            return;\n        }\n\n        const offset = direction === constants.NEXT ? 1 : -1;\n        const index = this.getTagIndex(item) + offset;\n        const tag = this.getTagAtIndex(index);\n\n        return tag.select.call(tag);\n    }\n\n    /**\n     * @name isFirstTag\n     * @param item {TagModel}\n     */\n    private isFirstTag(item: TagModel): boolean {\n        return this.tags.first.model === item;\n    }\n\n    /**\n     * @name isLastTag\n     * @param item {TagModel}\n     */\n    private isLastTag(item: TagModel): boolean {\n        return this.tags.last.model === item;\n    }\n\n    /**\n     * @name getTagIndex\n     * @param item\n     */\n    private getTagIndex(item: TagModel): number {\n        const tags = this.tags.toArray();\n\n        return tags.findIndex(tag => tag.model === item);\n    }\n\n    /**\n     * @name getTagAtIndex\n     * @param index\n     */\n    private getTagAtIndex(index: number) {\n        const tags = this.tags.toArray();\n\n        return tags[index];\n    }\n\n    /**\n     * @name removeItem\n     * @desc removes an item from the array of the model\n     * @param tag {TagModel}\n     * @param index {number}\n     */\n    public removeItem(tag: TagModel, index: number): void {\n        this.items = this.getItemsWithout(index);\n\n        // if the removed tag was selected, set it as undefined\n        if (this.selectedTag === tag) {\n            this.selectItem(undefined, false);\n        }\n\n        // focus input\n        this.focus(true, false);\n\n        // emit remove event\n        this.onRemove.emit(tag);\n    }\n\n    /**\n     * @name addItem\n     * @desc adds the current text model to the items array\n     * @param fromAutocomplete {boolean}\n     * @param item {TagModel}\n     * @param index? {number}\n     * @param giveupFocus? {boolean}\n     */\n    private addItem(fromAutocomplete = false, item: TagModel, index?: number, giveupFocus?: boolean):\n        Promise<TagModel> {\n        const display = this.getItemDisplay(item);\n        const tag = this.createTag(item);\n\n        if (fromAutocomplete) {\n            this.setInputValue(this.getItemValue(item, true));\n        }\n\n        return new Promise((resolve, reject) => {\n            /**\n             * @name reset\n             */\n            const reset = (): void => {\n                // reset control and focus input\n                this.setInputValue('');\n\n                if (giveupFocus) {\n                    this.focus(false, false);\n                } else {\n                    // focus input\n                    this.focus(true, false);\n                }\n\n                resolve(display);\n            };\n\n            const appendItem = (): void => {\n                this.appendTag(tag, index);\n\n                // emit event\n                this.onAdd.emit(tag);\n\n                if (!this.dropdown) {\n                    return;\n                }\n\n                this.dropdown.hide();\n\n                if (this.dropdown.showDropdownIfEmpty) {\n                    this.dropdown.show();\n                }\n            };\n\n            const status = this.inputForm.form.status;\n            const isTagValid = this.isTagValid(tag, fromAutocomplete);\n\n            const onValidationError = () => {\n                this.onValidationError.emit(tag);\n                return reject();\n            };\n\n            if (status === 'VALID' && isTagValid) {\n                appendItem();\n                return reset();\n            }\n\n            if (status === 'INVALID' || !isTagValid) {\n                reset();\n                return onValidationError();\n            }\n\n            if (status === 'PENDING') {\n                const statusUpdate$ = this.inputForm.form.statusChanges;\n\n                return statusUpdate$\n                    .pipe(\n                        filter(statusUpdate => statusUpdate !== 'PENDING'),\n                        first()\n                    )\n                    .subscribe((statusUpdate) => {\n                        if (statusUpdate === 'VALID' && isTagValid) {\n                            appendItem();\n                            return reset();\n                        } else {\n                            reset();\n                            return onValidationError();\n                        }\n                    });\n            }\n        });\n    }\n\n    /**\n     * @name setupSeparatorKeysListener\n     */\n    private setupSeparatorKeysListener(): void {\n        const useSeparatorKeys = this.separatorKeyCodes.length > 0 || this.separatorKeys.length > 0;\n        const listener = ($event) => {\n            const hasKeyCode = this.separatorKeyCodes.indexOf($event.keyCode) >= 0;\n            const hasKey = this.separatorKeys.indexOf($event.key) >= 0;\n            // the keyCode of keydown event is 229 when IME is processing the key event.\n            const isIMEProcessing = $event.keyCode === 229;\n\n            if (hasKeyCode || (hasKey && !isIMEProcessing)) {\n                $event.preventDefault();\n                this.onAddingRequested(false, this.formValue)\n                    .catch(() => { });\n            }\n        };\n\n        listen.call(this, constants.KEYDOWN, listener, useSeparatorKeys);\n    }\n\n    /**\n     * @name setUpKeypressListeners\n     */\n    private setUpKeypressListeners(): void {\n        const listener = ($event) => {\n            const isCorrectKey = $event.keyCode === 37 || $event.keyCode === 8;\n\n            if (isCorrectKey &&\n                !this.formValue &&\n                this.items.length) {\n                this.tags.last.select.call(this.tags.last);\n            }\n        };\n\n        // setting up the keypress listeners\n        listen.call(this, constants.KEYDOWN, listener);\n    }\n\n    /**\n     * @name setUpKeydownListeners\n     */\n    private setUpInputKeydownListeners(): void {\n        this.inputForm.onKeydown.subscribe(event => {\n            if (event.key === 'Backspace' && this.formValue.trim() === '') {\n                event.preventDefault();\n            }\n        });\n    }\n\n    /**\n     * @name setUpOnPasteListener\n     */\n    private setUpOnPasteListener() {\n        const input = this.inputForm.input.nativeElement;\n\n        // attach listener to input\n        this.renderer.listen(input, 'paste', (event) => {\n            this.onPasteCallback(event);\n\n            event.preventDefault();\n            return true;\n        });\n    }\n\n    /**\n     * @name setUpTextChangeSubscriber\n     */\n    private setUpTextChangeSubscriber(): void {\n        this.inputForm.form\n            .valueChanges\n            .pipe(\n                debounceTime(this.onTextChangeDebounce)\n            )\n            .subscribe((value: { item: string }) => {\n                this.onTextChange.emit(value.item);\n            });\n    }\n\n    /**\n     * @name setUpOnBlurSubscriber\n     */\n    private setUpOnBlurSubscriber(): void {\n        const filterFn = (): boolean => {\n            const isVisible = this.dropdown && this.dropdown.isVisible;\n            return !isVisible && !!this.formValue;\n        };\n\n        this.inputForm\n            .onBlur\n            .pipe(\n                debounceTime(100),\n                filter(filterFn)\n            )\n            .subscribe(() => {\n                const reset = () => this.setInputValue('');\n\n                if (this.addOnBlur) {\n                    return this\n                        .onAddingRequested(false, this.formValue, undefined, true)\n                        .then(reset)\n                        .catch(reset);\n                }\n\n                reset();\n            });\n    }\n\n    /**\n     * @name findDupe\n     * @param tag\n     * @param isFromAutocomplete\n     */\n    private findDupe(tag: TagModel, isFromAutocomplete: boolean): TagModel | undefined {\n        const identifyBy = isFromAutocomplete ? this.dropdown.identifyBy : this.identifyBy;\n        const id = tag[identifyBy];\n\n        return this.items.find(item => this.getItemValue(item) === id);\n    }\n\n    /**\n     * @name onPasteCallback\n     * @param data\n     */\n    private onPasteCallback = async (data: ClipboardEvent) => {\n        interface IEWindow extends Window {\n            clipboardData: DataTransfer;\n        }\n\n        const getText = (): string => {\n            const isIE = Boolean((window as IEWindow).clipboardData);\n            const clipboardData = isIE ? (\n                (window as IEWindow).clipboardData\n            ) : data.clipboardData;\n            const type = isIE ? 'Text' : 'text/plain';\n            return clipboardData === null ? '' : clipboardData.getData(type) || '';\n        };\n\n        const text = getText();\n\n        const requests = text\n            .split(this.pasteSplitPattern)\n            .map(item => {\n                const tag = this.createTag(item);\n                this.setInputValue(tag[this.displayBy]);\n                return this.onAddingRequested(false, tag);\n            });\n\n        const resetInput = () => setTimeout(() => this.setInputValue(''), 50);\n\n        Promise.all(requests).then(() => {\n            this.onPaste.emit(text);\n            resetInput();\n        })\n            .catch(resetInput);\n    }\n\n    /**\n     * @name setAnimationMetadata\n     */\n    private setAnimationMetadata(): void {\n        this.animationMetadata = {\n            value: 'in',\n            params: { ...this.animationDuration }\n        };\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'delete-icon',\n    templateUrl: './icon.html',\n    styleUrls: ['./icon.scss']\n})\nexport class DeleteIconComponent {}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule, COMPOSITION_BUFFER_MODE } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Ng2DropdownModule } from 'ng2-material-dropdown';\nimport { HighlightPipe } from './core/pipes/highlight.pipe';\nimport { DragProvider } from './core/providers/drag-provider';\nimport { OptionsProvider, Options } from './core/providers/options-provider';\nimport { TagInputComponent } from './components/tag-input/tag-input';\nimport { DeleteIconComponent } from './components/icon/icon';\nimport { TagInputForm } from './components/tag-input-form/tag-input-form.component';\nimport { TagComponent } from './components/tag/tag.component';\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\nimport { TagRipple } from './components/tag/tag-ripple.component';\n\nconst optionsProvider = new OptionsProvider();\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        Ng2DropdownModule\n    ],\n    declarations: [\n        TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple\n    ],\n    exports: [\n        TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple\n    ],\n    providers: [\n        DragProvider,\n        { provide: COMPOSITION_BUFFER_MODE, useValue: false },\n    ]\n})\nexport class TagInputModule {\n    /**\n     * @name withDefaults\n     * @param options {Options}\n     */\n    public static withDefaults(options: Options): void {\n        optionsProvider.setOptions(options);\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {animations as Éµb} from './components/tag-input/animations';\nexport {TagInputAccessor as Éµa} from './core/accessor';\nexport {HighlightPipe as Éµd} from './core/pipes/highlight.pipe';\nexport {DragProvider as Éµc} from './core/providers/drag-provider';","export function isPresent(obj: any): boolean {\n  return obj !== undefined && obj !== null;\n}\n\nexport function isDate(obj: any): boolean {\n  try {\n    const date = new Date(obj);\n    return !isNaN(date.getTime());\n  } catch (e) {\n    return false;\n  }\n}\n\nexport function parseDate(obj: any): string {\n  try {\n    // Moment.js\n    if (obj._d instanceof Date) {\n      const d = obj._d as Date;\n      const month = +d.getMonth() + 1;\n      const day = +d.getDate();\n      return `${d.getFullYear()}-${formatDayOrMonth(month)}-${formatDayOrMonth(day)}`;\n    }\n\n    // NgbDateStruct\n    if (typeof obj === 'object' && obj.year != null && obj.month != null && obj.day != null) {\n      const month = +obj.month;\n      const day = +obj.day;\n      return `${obj.year}-${formatDayOrMonth(month)}-${formatDayOrMonth(day)}`;\n    }\n  } catch (e) { }\n  return obj;\n}\n\nfunction formatDayOrMonth(month: number): string|number {\n  return month < 10 ? `0${month}` : month;\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isPresent } from '../util/lang';\n\nexport const arrayLength = (value: number): ValidatorFn => {\n  return (control: AbstractControl): ValidationErrors => {\n\n    if (isPresent(Validators.required(control))) {\n      return null;\n    }\n\n    const obj = control.value;\n    return Array.isArray(obj) && obj.length >= +value ? null : { arrayLength: { minLength: value } };\n  };\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isPresent } from '../util/lang';\n\nexport const base64: ValidatorFn = (control: AbstractControl): ValidationErrors => {\n  if (isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return /^(?:[A-Z0-9+\\/]{4})*(?:[A-Z0-9+\\/]{2}==|[A-Z0-9+\\/]{3}=|[A-Z0-9+\\/]{4})$/i.test(v) ? null : { base64: true };\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isPresent } from '../util/lang';\n\nexport const creditCard: ValidatorFn = (control: AbstractControl): ValidationErrors => {\n  if (isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n\n  const sanitized = v.replace(/[^0-9]+/g, '');\n\n  // problem with chrome\n  /* tslint:disable */\n  if (!(/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11}|(?:9792)\\d{12})$/.test(sanitized))) {\n    return { creditCard: true };\n  }\n  /* tslint:enable */\n\n  let sum = 0;\n  let digit;\n  let tmpNum;\n  let shouldDouble;\n  for (let i = sanitized.length - 1; i >= 0; i--) {\n    digit = sanitized.substring(i, (i + 1));\n    tmpNum = parseInt(digit, 10);\n    if (shouldDouble) {\n      tmpNum *= 2;\n      if (tmpNum >= 10) {\n        sum += ((tmpNum % 10) + 1);\n      } else {\n        sum += tmpNum;\n      }\n    } else {\n      sum += tmpNum;\n    }\n    shouldDouble = !shouldDouble;\n  }\n\n  if (Boolean((sum % 10) === 0 ? sanitized : false)) {\n    return null;\n  }\n\n  return { creditCard: true };\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isDate, isPresent, parseDate } from '../util/lang';\n\nexport const date: ValidatorFn = (control: AbstractControl): ValidationErrors => {\n  if (isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  let v: string = control.value;\n  v = parseDate(v);\n  return isDate(v) ? null : { date: true };\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isPresent } from '../util/lang';\n\nexport const dateISO: ValidatorFn = (control: AbstractControl): ValidationErrors => {\n  if (isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/.test(v) ? null : { dateISO: true };\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isPresent } from '../util/lang';\n\nexport const digits: ValidatorFn = (control: AbstractControl): ValidationErrors => {\n  if (isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return /^\\d+$/.test(v) ? null : { digits: true };\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isPresent } from '../util/lang';\n\nexport const email: ValidatorFn = (control: AbstractControl): ValidationErrors => {\n  if (isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  /* tslint:disable */\n  return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(v) ? null : { 'email': true };\n  /* tslint:enable */\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isPresent } from '../util/lang';\n\nexport const equal = (val: any): ValidatorFn => {\n  return (control: AbstractControl): ValidationErrors => {\n    if (isPresent(Validators.required(control))) {\n      return null;\n    }\n\n    const v: any = control.value;\n\n    return val === v ? null : { equal: { value: val } };\n  };\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\nexport const equalTo = (equalControl: AbstractControl): ValidatorFn => {\n  let subscribe = false;\n\n  return (control: AbstractControl): ValidationErrors => {\n    if (!subscribe) {\n      subscribe = true;\n      equalControl.valueChanges.subscribe(() => {\n        control.updateValueAndValidity();\n      });\n    }\n\n    const v: string = control.value;\n\n    return equalControl.value === v ? null : { equalTo: { control: equalControl, value: equalControl.value } };\n  };\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isPresent } from '../util/lang';\n\nexport const gt = (value: number): ValidatorFn => {\n  return (control: AbstractControl): ValidationErrors => {\n    if (!isPresent(value)) {\n      return null;\n    }\n    if (isPresent(Validators.required(control))) {\n      return null;\n    }\n\n    const v: number = +control.value;\n    return v > +value ? null : { gt: { value: value } };\n  };\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isPresent } from '../util/lang';\n\nexport const gte = (value: number): ValidatorFn => {\n  return (control: AbstractControl): ValidationErrors => {\n    if (!isPresent(value)) {\n      return null;\n    }\n    if (isPresent(Validators.required(control))) {\n      return null;\n    }\n\n    const v: number = +control.value;\n    return v >= +value ? null : { gte: { value: value } };\n  };\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isPresent } from '../util/lang';\n\nexport const json: ValidatorFn = (control: AbstractControl): ValidationErrors => {\n  if (isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n\n  try {\n    const obj = JSON.parse(v);\n\n    if (Boolean(obj) && typeof obj === 'object') {\n      return null;\n    }\n  } catch (e) { }\n  return { json: true };\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isPresent } from '../util/lang';\n\nexport const lt = (value: number): ValidatorFn => {\n  return (control: AbstractControl): ValidationErrors => {\n    if (!isPresent(value)) {\n      return null;\n    }\n    if (isPresent(Validators.required(control))) {\n      return null;\n    }\n\n    const v: number = +control.value;\n    return v < +value ? null : { lt: { value: value } };\n  };\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isPresent } from '../util/lang';\n\nexport const lte = (value: number): ValidatorFn => {\n  return (control: AbstractControl): ValidationErrors => {\n    if (!isPresent(value)) {\n      return null;\n    }\n    if (isPresent(Validators.required(control))) {\n      return null;\n    }\n\n    const v: number = +control.value;\n    return v <= +value ? null : { lte: { value: value } };\n  };\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isPresent } from '../util/lang';\n\nexport const max = (value: number): ValidatorFn => {\n  return (control: AbstractControl): ValidationErrors => {\n    if (!isPresent(value)) {\n      return null;\n    }\n    if (isPresent(Validators.required(control))) {\n      return null;\n    }\n\n    const v: number = +control.value;\n    return v <= +value ? null : { max: { value: value } };\n  };\n};\n","import { AbstractControl, FormControl, NgModel, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isDate, isPresent, parseDate } from '../util/lang';\n\nexport const maxDate = (maxInput: any): ValidatorFn => {\n  let value;\n  let subscribe = false;\n  let maxValue = maxInput;\n  const isForm = maxInput instanceof FormControl || maxInput instanceof NgModel;\n  return (control: AbstractControl): ValidationErrors => {\n    if (!subscribe && isForm) {\n      subscribe = true;\n      maxInput.valueChanges.subscribe(() => {\n        control.updateValueAndValidity();\n      });\n    }\n\n    if (isForm) {\n      maxValue = maxInput.value;\n    }\n\n    value = parseDate(maxValue);\n\n    if (!isDate(value) && !(value instanceof Function)) {\n      if (value == null) {\n        return null;\n      } else if (isForm) {\n        return { maxDate: { error: 'maxDate is invalid' } };\n      } else {\n        throw Error('maxDate value must be or return a formatted date');\n      }\n    }\n\n    if (isPresent(Validators.required(control))) {\n      return null;\n    }\n\n    const d = new Date(parseDate(control.value)).getTime();\n\n    if (!isDate(d)) {\n      return { value: true };\n    }\n    if (value instanceof Function) {\n      value = value();\n    }\n\n    return d <= new Date(value).getTime() ? null : (isForm ? { maxDate: { control: maxInput, value: maxInput.value } } : { maxDate: { value: maxValue, control: undefined } });\n  };\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isPresent } from '../util/lang';\n\nexport const min = (value: number): ValidatorFn => {\n  return (control: AbstractControl): ValidationErrors => {\n    if (!isPresent(value)) {\n      return null;\n    }\n    if (isPresent(Validators.required(control))) {\n      return null;\n    }\n\n    const v: number = +control.value;\n    return v >= +value ? null : { min: { value: value } };\n  };\n};\n","import { AbstractControl, FormControl, NgModel, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isDate, isPresent, parseDate } from '../util/lang';\n\nexport const minDate = (minInput: any): ValidatorFn => {\n  let value;\n  let subscribe = false;\n  let minValue = minInput;\n  const isForm = minInput instanceof FormControl || minInput instanceof NgModel;\n  return (control: AbstractControl): ValidationErrors => {\n\n    if (!subscribe && isForm) {\n      subscribe = true;\n      minInput.valueChanges.subscribe(() => {\n        control.updateValueAndValidity();\n      });\n    }\n\n    if (isForm) {\n      minValue = minInput.value;\n    }\n\n    value = parseDate(minValue);\n\n    if (!isDate(value) && !(value instanceof Function)) {\n      if (value == null) {\n        return null;\n      } else if (isForm) {\n        return { minDate: { error: 'minDate is invalid' } };\n      } else {\n        throw Error('minDate value must be or return a formatted date');\n      }\n    }\n\n    if (isPresent(Validators.required(control))) {\n      return null;\n    }\n\n    const d = new Date(parseDate(control.value)).getTime();\n\n    if (!isDate(d)) {\n      return { value: true };\n    }\n    if (value instanceof Function) {\n      value = value();\n    }\n\n    return d >= new Date(value).getTime() ? null : (isForm ? { minDate: { control: minInput, value: minInput.value } } : { minDate: { value: minValue, control: undefined } });\n  };\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isPresent } from '../util/lang';\n\nexport const notEqual = (val: any): ValidatorFn => {\n  return (control: AbstractControl): ValidationErrors => {\n    if (isPresent(Validators.required(control))) {\n      return null;\n    }\n\n    const v: any = control.value;\n\n    return val !== v ? null : { notEqual: { value: val } };\n  };\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\nexport const notEqualTo = (notEqualControl: AbstractControl): ValidatorFn => {\n  let subscribe = false;\n  return (control: AbstractControl): ValidationErrors => {\n    if (!subscribe) {\n      subscribe = true;\n      notEqualControl.valueChanges.subscribe(() => {\n        control.updateValueAndValidity();\n      });\n    }\n\n    const v: string = control.value;\n\n    if (notEqualControl.value == null && v == null) {\n      return null;\n    }\n\n    return notEqualControl.value !== v ? null : { notEqualTo: { control: notEqualControl, value: notEqualControl.value } };\n  };\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isPresent } from '../util/lang';\n\nexport const number: ValidatorFn = (control: AbstractControl): ValidationErrors => {\n  if (isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return /^(?:-?\\d+|-?\\d{1,3}(?:,\\d{3})+)?(?:\\.\\d+)?$/.test(v) ? null : { 'number': true };\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isPresent } from '../util/lang';\n\nexport const property = (value: string): ValidatorFn => {\n  return (control: AbstractControl): ValidationErrors => {\n\n    if (isPresent(Validators.required(control))) {\n      return null;\n    }\n\n    const properties = value.split(',');\n\n    const obj = control.value;\n    let isValid = true;\n    for (const prop of properties) {\n      if (obj[prop] == null) {\n        isValid = false;\n        break;\n      }\n    }\n    return isValid ? null : { hasProperty: { value: value } };\n  };\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isPresent } from '../util/lang';\n\nexport const range = (value: Array<number>): ValidatorFn => {\n  return (control: AbstractControl): ValidationErrors => {\n    if (!isPresent(value)) {\n      return null;\n    }\n    if (isPresent(Validators.required(control))) {\n      return null;\n    }\n\n    const v: number = +control.value;\n    return v >= value[0] && v <= value[1] ? null : { range: { value: value } };\n  };\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isPresent } from '../util/lang';\n\nexport const rangeLength = (value: Array<number>): ValidatorFn => {\n  return (control: AbstractControl): ValidationErrors => {\n    if (!isPresent(value)) {\n      return null;\n    }\n    if (isPresent(Validators.required(control))) {\n      return null;\n    }\n\n    const v: string = control.value;\n    return v.length >= value[0] && v.length <= value[1] ? null : { rangeLength: { value: value } };\n  };\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isPresent } from '../util/lang';\n\nconst uuids = {\n  '3': /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  '4': /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n  '5': /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n  'all': /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\n};\n\nexport const uuid = (version?: string): ValidatorFn => {\n  return (control: AbstractControl): ValidationErrors => {\n    if (isPresent(Validators.required(control))) {\n      return null;\n    }\n\n    const v: string = control.value;\n    const pattern = uuids[version] || uuids.all;\n\n    return (new RegExp(pattern)).test(v) ? null : { uuid: true };\n  };\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { isPresent } from '../util/lang';\n\nexport const url: ValidatorFn = (control: AbstractControl): ValidationErrors => {\n  if (isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  /* tslint:disable */\n  return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})).?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(v) ? null : { 'url': true };\n  /* tslint:enable */\n};\n","import { Directive, Input, forwardRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { arrayLength } from './validator';\n\nconst ARRAY_LENGTH_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => ArrayLengthValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[arrayLength][formControlName],[arrayLength][formControl],[arrayLength][ngModel]',\n  providers: [ARRAY_LENGTH_VALIDATOR]\n})\nexport class ArrayLengthValidator implements Validator, OnInit, OnChanges {\n  @Input() arrayLength: number;\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = arrayLength(this.arrayLength);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (const key in changes) {\n      if (key === 'arrayLength') {\n        this.validator = arrayLength(changes[key].currentValue);\n        if (this.onChange) {\n          this.onChange();\n        }\n      }\n    }\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\n\nimport { base64 } from './validator';\n\nconst BASE64_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => Base64Validator),\n  multi: true\n};\n\n@Directive({\n  selector: '[base64][formControlName],[base64][formControl],[base64][ngModel]',\n  providers: [BASE64_VALIDATOR]\n})\nexport class Base64Validator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return base64(c);\n  }\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\n\nimport { creditCard } from './validator';\n\nconst CREDIT_CARD_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => CreditCardValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[creditCard][formControlName],[creditCard][formControl],[creditCard][ngModel]',\n  providers: [CREDIT_CARD_VALIDATOR]\n})\nexport class CreditCardValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return creditCard(c);\n  }\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\n\nimport { date } from './validator';\n\nconst DATE_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => DateValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[date][formControlName],[date][formControl],[date][ngModel]',\n  providers: [DATE_VALIDATOR]\n})\nexport class DateValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return date(c);\n  }\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\n\nimport { dateISO } from './validator';\n\nconst DATE_ISO_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => DateISOValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[dateISO][formControlName],[dateISO][formControl],[dateISO][ngModel]',\n  providers: [DATE_ISO_VALIDATOR]\n})\nexport class DateISOValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return dateISO(c);\n  }\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\n\nimport { digits } from './validator';\n\nconst DIGITS_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => DigitsValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[digits][formControlName],[digits][formControl],[digits][ngModel]',\n  providers: [DIGITS_VALIDATOR]\n})\nexport class DigitsValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return digits(c);\n  }\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\n\nimport { email } from './validator';\n\nconst EMAIL_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => EmailValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[ngvemail][formControlName],[ngvemail][formControl],[ngvemail][ngModel]',\n  providers: [EMAIL_VALIDATOR]\n})\nexport class EmailValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return email(c);\n  }\n}\n","import { Directive, Input, forwardRef, OnInit, SimpleChanges, OnChanges } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { equal } from './validator';\n\nconst EQUAL_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => EqualValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[equal][formControlName],[equal][formControl],[equal][ngModel]',\n  providers: [EQUAL_VALIDATOR]\n})\nexport class EqualValidator implements Validator, OnInit, OnChanges {\n  @Input() equal: any;\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = equal(this.equal);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (const key in changes) {\n      if (key === 'equal') {\n        this.validator = equal(changes[key].currentValue);\n        if (this.onChange) {\n          this.onChange();\n        }\n      }\n    }\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n","import { Directive, Input, forwardRef, OnInit } from '@angular/core';\nimport { NG_VALIDATORS, Validator, FormControl, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { equalTo } from './validator';\n\nconst EQUAL_TO_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => EqualToValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[equalTo][formControlName],[equalTo][formControl],[equalTo][ngModel]',\n  providers: [EQUAL_TO_VALIDATOR]\n})\nexport class EqualToValidator implements Validator, OnInit {\n  @Input() equalTo: FormControl;\n\n  private validator: ValidatorFn;\n\n  ngOnInit() {\n    this.validator = equalTo(this.equalTo);\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n}\n","import { Directive, Input, forwardRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { gt } from './validator';\n\nconst GREATER_THAN_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => GreaterThanValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[gt][formControlName],[gt][formControl],[gt][ngModel]',\n  providers: [GREATER_THAN_VALIDATOR]\n})\nexport class GreaterThanValidator implements Validator, OnInit, OnChanges {\n  @Input() gt: number;\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = gt(this.gt);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (const key in changes) {\n      if (key === 'gt') {\n        this.validator = gt(changes[key].currentValue);\n        if (this.onChange) {\n          this.onChange();\n        }\n      }\n    }\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n","import { Directive, Input, forwardRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { gte } from './validator';\n\nconst GREATER_THAN_EQUAL_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => GreaterThanEqualValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[gte][formControlName],[gte][formControl],[gte][ngModel]',\n  providers: [GREATER_THAN_EQUAL_VALIDATOR]\n})\nexport class GreaterThanEqualValidator implements Validator, OnInit, OnChanges {\n  @Input() gte: number;\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = gte(this.gte);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (const key in changes) {\n      if (key === 'gte') {\n        this.validator = gte(changes[key].currentValue);\n        if (this.onChange) {\n          this.onChange();\n        }\n      }\n    }\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\n\nimport { json } from './validator';\n\nconst JSON_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => JSONValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[json][formControlName],[json][formControl],[json][ngModel]',\n  providers: [JSON_VALIDATOR]\n})\nexport class JSONValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return json(c);\n  }\n}\n","import { Directive, Input, forwardRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { lt } from './validator';\n\nconst LESS_THAN_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => LessThanValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[lt][formControlName],[lt][formControl],[lt][ngModel]',\n  providers: [LESS_THAN_VALIDATOR]\n})\nexport class LessThanValidator implements Validator, OnInit, OnChanges {\n  @Input() lt: number;\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = lt(this.lt);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (const key in changes) {\n      if (key === 'lt') {\n        this.validator = lt(changes[key].currentValue);\n        if (this.onChange) {\n          this.onChange();\n        }\n      }\n    }\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n","import { Directive, Input, forwardRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { lte } from './validator';\n\nconst LESS_THAN_EQUAL_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => LessThanEqualValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[lte][formControlName],[lte][formControl],[lte][ngModel]',\n  providers: [LESS_THAN_EQUAL_VALIDATOR]\n})\nexport class LessThanEqualValidator implements Validator, OnInit, OnChanges {\n  @Input() lte: number;\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = lte(this.lte);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (const key in changes) {\n      if (key === 'lte') {\n        this.validator = lte(changes[key].currentValue);\n        if (this.onChange) {\n          this.onChange();\n        }\n      }\n    }\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n","import { Directive, Input, forwardRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { max } from './validator';\n\nconst MAX_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MaxValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n  providers: [MAX_VALIDATOR]\n})\nexport class MaxValidator implements Validator, OnInit, OnChanges {\n  @Input() max: number;\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = max(this.max);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (const key in changes) {\n      if (key === 'max') {\n        this.validator = max(changes[key].currentValue);\n        if (this.onChange) {\n          this.onChange();\n        }\n      }\n    }\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n","import { Directive, Input, forwardRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { maxDate } from './validator';\n\nconst MAX_DATE_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MaxDateValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[maxDate][formControlName],[maxDate][formControl],[maxDate][ngModel]',\n  providers: [MAX_DATE_VALIDATOR]\n})\nexport class MaxDateValidator implements Validator, OnInit, OnChanges {\n  @Input() maxDate;\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = maxDate(this.maxDate);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (const key in changes) {\n      if (key === 'maxDate') {\n        this.validator = maxDate(changes[key].currentValue);\n        if (this.onChange) {\n          this.onChange();\n        }\n      }\n    }\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n","import { Directive, Input, forwardRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { min } from './validator';\n\nconst MIN_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MinValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n  providers: [MIN_VALIDATOR]\n})\nexport class MinValidator implements Validator, OnInit, OnChanges {\n  @Input() min: number;\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = min(this.min);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (const key in changes) {\n      if (key === 'min') {\n        this.validator = min(changes[key].currentValue);\n        if (this.onChange) {\n          this.onChange();\n        }\n      }\n    }\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n","import { Directive, Input, forwardRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { minDate } from './validator';\n\nconst MIN_DATE_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MinDateValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[minDate][formControlName],[minDate][formControl],[minDate][ngModel]',\n  providers: [MIN_DATE_VALIDATOR]\n})\nexport class MinDateValidator implements Validator, OnInit, OnChanges {\n  @Input() minDate;\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = minDate(this.minDate);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (const key in changes) {\n      if (key === 'minDate') {\n        this.validator = minDate(changes[key].currentValue);\n        if (this.onChange) {\n          this.onChange();\n        }\n      }\n    }\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n","import { Directive, Input, forwardRef, OnInit, SimpleChanges, OnChanges } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { notEqual } from './validator';\n\nconst NOT_EQUAL_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NotEqualValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[notEqual][formControlName],[notEqual][formControl],[notEqual][ngModel]',\n  providers: [NOT_EQUAL_VALIDATOR]\n})\nexport class NotEqualValidator implements Validator, OnInit, OnChanges {\n  @Input() notEqual: any;\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = notEqual(this.notEqual);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (const key in changes) {\n      if (key === 'notEqual') {\n        this.validator = notEqual(changes[key].currentValue);\n        if (this.onChange) {\n          this.onChange();\n        }\n      }\n    }\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n","import { Directive, Input, forwardRef, OnInit } from '@angular/core';\nimport { NG_VALIDATORS, Validator, FormControl, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { notEqualTo } from './validator';\n\nconst NOT_EQUAL_TO_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NotEqualToValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[notEqualTo][formControlName],[notEqualTo][formControl],[notEqualTo][ngModel]',\n  providers: [NOT_EQUAL_TO_VALIDATOR]\n})\nexport class NotEqualToValidator implements Validator, OnInit {\n  @Input() notEqualTo: FormControl;\n\n  private validator: ValidatorFn;\n\n  ngOnInit() {\n    this.validator = notEqualTo(this.notEqualTo);\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\n\nimport { number } from './validator';\n\nconst NUMBER_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NumberValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[number][formControlName],[number][formControl],[number][ngModel]',\n  providers: [NUMBER_VALIDATOR]\n})\nexport class NumberValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return number(c);\n  }\n}\n","import { Directive, Input, forwardRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { property } from './validator';\n\nconst PROPERTY_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => PropertyValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[property][formControlName],[property][formControl],[property][ngModel]',\n  providers: [PROPERTY_VALIDATOR]\n})\nexport class PropertyValidator implements Validator, OnInit, OnChanges {\n  @Input() property: string;\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = property(this.property);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (const key in changes) {\n      if (key === 'property') {\n        this.validator = property(changes[key].currentValue);\n        if (this.onChange) {\n          this.onChange();\n        }\n      }\n    }\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n","import { Directive, Input, forwardRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { range } from './validator';\n\nconst RANGE_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => RangeValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[range][formControlName],[range][formControl],[range][ngModel]',\n  providers: [RANGE_VALIDATOR]\n})\nexport class RangeValidator implements Validator, OnInit, OnChanges {\n  @Input() range: [number];\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = range(this.range);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (const key in changes) {\n      if (key === 'range') {\n        this.validator = range(changes[key].currentValue);\n        if (this.onChange) {\n          this.onChange();\n        }\n      }\n    }\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n","import { Directive, Input, forwardRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { rangeLength } from './validator';\n\nconst RANGE_LENGTH_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => RangeLengthValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[rangeLength][formControlName],[rangeLength][formControl],[rangeLength][ngModel]',\n  providers: [RANGE_LENGTH_VALIDATOR]\n})\nexport class RangeLengthValidator implements Validator, OnInit, OnChanges {\n  @Input() rangeLength: [number];\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = rangeLength(this.rangeLength);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (const key in changes) {\n      if (key === 'rangeLength') {\n        this.validator = rangeLength(changes[key].currentValue);\n        if (this.onChange) {\n          this.onChange();\n        }\n      }\n    }\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\n\nimport { url } from './validator';\n\nconst URL_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => UrlValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[url][formControlName],[url][formControl],[url][ngModel]',\n  providers: [URL_VALIDATOR]\n})\nexport class UrlValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return url(c);\n  }\n}\n","import { Directive, Input, forwardRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { uuid } from './validator';\n\nconst UUID_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => UUIDValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[uuid][formControlName],[uuid][formControl],[uuid][ngModel]',\n  providers: [UUID_VALIDATOR]\n})\nexport class UUIDValidator implements Validator, OnInit, OnChanges {\n  @Input() uuid;\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = uuid(this.uuid);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (const key in changes) {\n      if (key === 'uuid') {\n        this.validator = uuid(changes[key].currentValue);\n        if (this.onChange) {\n          this.onChange();\n        }\n      }\n    }\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { arrayLength } from './array-length/validator';\nimport { base64 } from './base64/validator';\nimport { creditCard } from './credit-card/validator';\nimport { date } from './date/validator';\nimport { dateISO } from './date-iso/validator';\nimport { digits } from './digits/validator';\nimport { email } from './email/validator';\nimport { equal } from './equal/validator';\nimport { equalTo } from './equal-to/validator';\nimport { gt } from './greater-than/validator';\nimport { gte } from './greater-than-equal/validator';\nimport { json } from './json/validator';\nimport { lt } from './less-than/validator';\nimport { lte } from './less-than-equal/validator';\nimport { max } from './max/validator';\nimport { maxDate } from './max-date/validator';\nimport { min } from './min/validator';\nimport { minDate } from './min-date/validator';\nimport { notEqual } from './not-equal/validator';\nimport { notEqualTo } from './not-equal-to/validator';\nimport { number } from './number/validator';\nimport { property } from './property/validator';\nimport { range } from './range/validator';\nimport { rangeLength } from './range-length/validator';\nimport { uuid } from './uuid/validator';\nimport { url } from './url/validator';\n\nimport { ArrayLengthValidator } from './array-length/directive';\nimport { Base64Validator } from './base64/directive';\nimport { CreditCardValidator } from './credit-card/directive';\nimport { DateValidator } from './date/directive';\nimport { DateISOValidator } from './date-iso/directive';\nimport { DigitsValidator } from './digits/directive';\nimport { EmailValidator } from './email/directive';\nimport { EqualValidator } from './equal/directive';\nimport { EqualToValidator } from './equal-to/directive';\nimport { GreaterThanValidator } from './greater-than/directive';\nimport { GreaterThanEqualValidator } from './greater-than-equal/directive';\nimport { JSONValidator } from './json/directive';\nimport { LessThanValidator } from './less-than/directive';\nimport { LessThanEqualValidator } from './less-than-equal/directive';\nimport { MaxValidator } from './max/directive';\nimport { MaxDateValidator } from './max-date/directive';\nimport { MinValidator } from './min/directive';\nimport { MinDateValidator } from './min-date/directive';\nimport { NotEqualValidator } from './not-equal/directive';\nimport { NotEqualToValidator } from './not-equal-to/directive';\nimport { NumberValidator } from './number/directive';\nimport { PropertyValidator } from './property/directive';\nimport { RangeValidator } from './range/directive';\nimport { RangeLengthValidator } from './range-length/directive';\nimport { UrlValidator } from './url/directive';\nimport { UUIDValidator } from './uuid/directive';\n\nexport const CustomValidators = {\n  arrayLength,\n  base64,\n  creditCard,\n  date,\n  dateISO,\n  digits,\n  email,\n  equal,\n  equalTo,\n  gt,\n  gte,\n  json,\n  lt,\n  lte,\n  max,\n  maxDate,\n  min,\n  minDate,\n  notEqual,\n  notEqualTo,\n  number,\n  property,\n  range,\n  rangeLength,\n  url,\n  uuid\n};\n\nconst CustomDirectives = [\n  ArrayLengthValidator,\n  Base64Validator,\n  CreditCardValidator,\n  DateValidator,\n  DateISOValidator,\n  DigitsValidator,\n  EmailValidator,\n  EqualValidator,\n  EqualToValidator,\n  GreaterThanValidator,\n  GreaterThanEqualValidator,\n  JSONValidator,\n  LessThanValidator,\n  LessThanEqualValidator,\n  MaxValidator,\n  MaxDateValidator,\n  MinValidator,\n  MinDateValidator,\n  NotEqualValidator,\n  NotEqualToValidator,\n  NumberValidator,\n  PropertyValidator,\n  RangeValidator,\n  RangeLengthValidator,\n  UrlValidator,\n  UUIDValidator\n];\n\n@NgModule({\n  declarations: [CustomDirectives],\n  exports: [CustomDirectives]\n})\nexport class CustomFormsModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {ArrayLengthValidator as Éµba} from './src/app/array-length/directive';\nexport {arrayLength as Éµa} from './src/app/array-length/validator';\nexport {Base64Validator as Éµbb} from './src/app/base64/directive';\nexport {base64 as Éµb} from './src/app/base64/validator';\nexport {CreditCardValidator as Éµbc} from './src/app/credit-card/directive';\nexport {creditCard as Éµc} from './src/app/credit-card/validator';\nexport {DateISOValidator as Éµbe} from './src/app/date-iso/directive';\nexport {dateISO as Éµe} from './src/app/date-iso/validator';\nexport {DateValidator as Éµbd} from './src/app/date/directive';\nexport {date as Éµd} from './src/app/date/validator';\nexport {DigitsValidator as Éµbf} from './src/app/digits/directive';\nexport {digits as Éµf} from './src/app/digits/validator';\nexport {EmailValidator as Éµbg} from './src/app/email/directive';\nexport {email as Éµg} from './src/app/email/validator';\nexport {EqualToValidator as Éµbi} from './src/app/equal-to/directive';\nexport {equalTo as Éµi} from './src/app/equal-to/validator';\nexport {EqualValidator as Éµbh} from './src/app/equal/directive';\nexport {equal as Éµh} from './src/app/equal/validator';\nexport {GreaterThanEqualValidator as Éµbk} from './src/app/greater-than-equal/directive';\nexport {gte as Éµk} from './src/app/greater-than-equal/validator';\nexport {GreaterThanValidator as Éµbj} from './src/app/greater-than/directive';\nexport {gt as Éµj} from './src/app/greater-than/validator';\nexport {JSONValidator as Éµbl} from './src/app/json/directive';\nexport {json as Éµl} from './src/app/json/validator';\nexport {LessThanEqualValidator as Éµbn} from './src/app/less-than-equal/directive';\nexport {lte as Éµn} from './src/app/less-than-equal/validator';\nexport {LessThanValidator as Éµbm} from './src/app/less-than/directive';\nexport {lt as Éµm} from './src/app/less-than/validator';\nexport {MaxDateValidator as Éµbp} from './src/app/max-date/directive';\nexport {maxDate as Éµp} from './src/app/max-date/validator';\nexport {MaxValidator as Éµbo} from './src/app/max/directive';\nexport {max as Éµo} from './src/app/max/validator';\nexport {MinDateValidator as Éµbr} from './src/app/min-date/directive';\nexport {minDate as Éµr} from './src/app/min-date/validator';\nexport {MinValidator as Éµbq} from './src/app/min/directive';\nexport {min as Éµq} from './src/app/min/validator';\nexport {NotEqualToValidator as Éµbt} from './src/app/not-equal-to/directive';\nexport {notEqualTo as Éµt} from './src/app/not-equal-to/validator';\nexport {NotEqualValidator as Éµbs} from './src/app/not-equal/directive';\nexport {notEqual as Éµs} from './src/app/not-equal/validator';\nexport {NumberValidator as Éµbu} from './src/app/number/directive';\nexport {number as Éµu} from './src/app/number/validator';\nexport {PropertyValidator as Éµbv} from './src/app/property/directive';\nexport {property as Éµv} from './src/app/property/validator';\nexport {RangeLengthValidator as Éµbx} from './src/app/range-length/directive';\nexport {rangeLength as Éµx} from './src/app/range-length/validator';\nexport {RangeValidator as Éµbw} from './src/app/range/directive';\nexport {range as Éµw} from './src/app/range/validator';\nexport {UrlValidator as Éµby} from './src/app/url/directive';\nexport {url as Éµy} from './src/app/url/validator';\nexport {UUIDValidator as Éµbz} from './src/app/uuid/directive';\nexport {uuid as Éµz} from './src/app/uuid/validator';","import { InjectionToken } from '@angular/core';\n\nexport const UI_SWITCH_OPTIONS = new InjectionToken('UI_SWITCH_OPTIONS');\n","import {\n  ChangeDetectorRef,\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  forwardRef,\n  Inject,\n  Optional,\n  OnDestroy,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { UI_SWITCH_OPTIONS } from './ui-switch.token';\nimport { UiSwitchModuleConfig } from './ui-switch.config';\nimport { Observable, Subscription } from 'rxjs';\n\nconst UI_SWITCH_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => UiSwitchComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'ui-switch',\n  templateUrl: 'ui-switch.component.html',\n  providers: [UI_SWITCH_CONTROL_VALUE_ACCESSOR],\n})\nexport class UiSwitchComponent implements ControlValueAccessor, OnDestroy {\n  private _checked: boolean;\n  private _disabled: boolean;\n  private _reverse: boolean;\n  private _loading: boolean;\n  private _beforeChange: Subscription;\n\n  @Input() size;\n  @Input() color;\n  @Input() switchOffColor;\n  @Input() switchColor;\n  @Input() defaultBgColor;\n  @Input() defaultBoColor;\n  @Input() checkedLabel;\n  @Input() uncheckedLabel;\n  @Input() checkedTextColor;\n  @Input() uncheckedTextColor;\n  @Input() beforeChange: Observable<boolean>;\n\n  @Input()\n  set checked(v: boolean) {\n    this._checked = v !== false;\n  }\n\n  get checked() {\n    return this._checked;\n  }\n\n  @Input()\n  set disabled(v: boolean) {\n    this._disabled = v !== false;\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  @Input()\n  set reverse(v: boolean) {\n    this._reverse = v !== false;\n  }\n\n  get reverse() {\n    return this._reverse;\n  }\n\n  @Input()\n  set loading(v: boolean) {\n    this._loading = v !== false;\n  }\n\n  get loading() {\n    return this._loading;\n  }\n\n  /**\n   * Emits changed value\n   */\n  @Output() change = new EventEmitter<boolean>();\n\n  /**\n   * Emits DOM event\n   */\n  @Output() changeEvent = new EventEmitter<MouseEvent>();\n\n  /**\n   * Emits changed value\n   */\n  @Output() valueChange = new EventEmitter<boolean>();\n\n  constructor(\n    @Inject(UI_SWITCH_OPTIONS) @Optional() config: UiSwitchModuleConfig = {},\n    private cdr: ChangeDetectorRef\n  ) {\n    this.size = (config && config.size) || 'medium';\n    this.color = config && config.color;\n    this.switchOffColor = config && config.switchOffColor;\n    this.switchColor = config && config.switchColor;\n    this.defaultBgColor = config && config.defaultBgColor;\n    this.defaultBoColor = config && config.defaultBoColor;\n    this.checkedLabel = config && config.checkedLabel;\n    this.uncheckedLabel = config && config.uncheckedLabel;\n    this.checkedTextColor = config && config.checkedTextColor;\n    this.uncheckedTextColor = config && config.uncheckedTextColor;\n  }\n\n  getColor(flag = '') {\n    if (flag === 'borderColor') {\n      return this.defaultBoColor;\n    }\n    if (flag === 'switchColor') {\n      if (this.reverse) {\n        return !this.checked ? this.switchColor : this.switchOffColor || this.switchColor;\n      }\n      return this.checked ? this.switchColor : this.switchOffColor || this.switchColor;\n    }\n    if (flag === 'checkedTextColor') {\n      return this.reverse ? this.uncheckedTextColor : this.checkedTextColor;\n    }\n    if (flag === 'uncheckedTextColor') {\n      return this.reverse ? this.checkedTextColor : this.uncheckedTextColor;\n    }\n    if (this.reverse) {\n      return !this.checked ? this.color : this.defaultBgColor;\n    }\n    return this.checked ? this.color : this.defaultBgColor;\n  }\n\n  onClick(event: MouseEvent) {\n    if (this.disabled) {\n      return;\n    }\n    this.checked = !this.checked;\n\n    // Component events\n    this.change.emit(this.checked);\n    this.valueChange.emit(this.checked);\n    this.changeEvent.emit(event);\n\n    // value accessor callbacks\n    this.onChangeCallback(this.checked);\n    this.onTouchedCallback(this.checked);\n    this.cdr.markForCheck();\n  }\n\n  @HostListener('click', ['$event'])\n  onToggle(event: MouseEvent) {\n    if (this.beforeChange) {\n      this._beforeChange = this.beforeChange.subscribe((confirm: boolean) => {\n        if (confirm) {\n          this.onClick(event);\n        }\n      });\n    } else {\n      this.onClick(event);\n    }\n  }\n\n  writeValue(obj: any): void {\n    if (obj !== this.checked) {\n      this.checked = !!obj;\n    }\n    if (this.cdr) {\n      this.cdr.markForCheck();\n    }\n  }\n\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  private onTouchedCallback = (v: any) => {};\n  private onChangeCallback = (v: any) => {};\n\n  ngOnDestroy() {\n    if (this._beforeChange) {\n      this._beforeChange.unsubscribe();\n    }\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { UiSwitchComponent } from './ui-switch.component';\nimport { UI_SWITCH_OPTIONS } from './ui-switch.token';\nimport { UiSwitchModuleConfig } from './ui-switch.config';\n\n@NgModule({\n  declarations: [\n    UiSwitchComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [\n    FormsModule,\n\n    UiSwitchComponent\n  ]\n})\nexport class UiSwitchModule {\n  static forRoot(config: UiSwitchModuleConfig | null | undefined): ModuleWithProviders<UiSwitchModule> {\n    return {\n      ngModule: UiSwitchModule,\n      providers: [\n        {provide: UI_SWITCH_OPTIONS, useValue: config || {}}\n      ]\n    };\n  }\n}\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef, AfterViewInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators, NgForm } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-archwizard',\n  templateUrl: './archwizard.component.html',\n  styleUrls: ['./archwizard.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ArchwizardComponent implements OnInit, AfterViewInit {\n\n  constructor(private ref: ChangeDetectorRef) {\n\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.ref.detectChanges();\n    }, 100);\n\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-sm-12\">\n      <div class=\"content-header\">Form Wizard</div>\n  </div>\n</div>\n<section id=\"ngx\">\n  <div class=\"card\">\n      <div class=\"card-content\">\n          <div class=\"card-body\">\n\n              <aw-wizard #wizard [navBarLayout]=\"'large-empty-symbols'\">\n                  <aw-wizard-step [stepTitle]=\"'Step 1'\" [navigationSymbol]=\"{ symbol: '&#xf007;', fontFamily: 'FontAwesome' }\">\n                      <form #personalForm=\"ngForm\" class=\"editForm\" novalidate>\n                          <h4 class=\"head text-center\">Please tell us about yourself.</h4>\n                          <br/>\n                          <div class='row'>\n                              <div class='col-12'>\n                                  <div class=\"row\">\n                                      <div class='col-12 col-sm-6'>\n                                          <div class=\"form-group\">\n                                              <label class=\"form-control-label\" for=\"firstname\">First Name</label>\n                                              <input class=\"form-control input-md\" ngModel #firstname=\"ngModel\" required id=\"firstname\" name=\"firstname\" type=\"text\">\n                                              <small class=\"form-text text-muted danger\" *ngIf=\"!firstname.valid && (firstname.dirty || firstname.touched)\">This field is required!</small>\n                                          </div>\n                                      </div>\n                                      <div class='col-12 col-sm-6'>\n                                          <div class=\"form-group\">\n                                              <label class=\"form-control-label\" for=\"lastname\">Last Name</label>\n                                              <input class=\"form-control input-md\" ngModel #lastname=\"ngModel\" required id=\"lastname\" name=\"lastname\" type=\"text\">\n                                              <small class=\"form-text text-muted danger\" *ngIf=\"!lastname.valid && (lastname.dirty || lastname.touched)\">This field is required!</small>\n                                          </div>\n                                      </div>\n                                  </div>\n                                  <div class=\"form-group\">\n                                      <label class=\"form-control-label\" for=\"email\">Email</label>\n                                      <input class=\"form-control input-md\" ngModel #email=\"ngModel\" required email id=\"email\" name=\"email\" type=\"text\">\n                                      <small class=\"form-text text-muted danger\" *ngIf=\"!email.valid && (email.dirty || email.touched)\">Please enter a valid email!</small>\n                                  </div>\n\n                                  <div class=\"form-group text-center\">\n                                      <button type=\"button\" uiSref=\"work\" class=\"btn btn-info\" [disabled]=\"!personalForm.valid\" awNextStep>\n                                          Next\n                                          <span style=\"margin-left:10px;\">\n                                              <i class=\"ft-chevron-right\"></i>\n                                          </span>\n                                      </button>\n                                  </div>\n                              </div>\n                          </div>\n                      </form>\n                  </aw-wizard-step>\n                  <aw-wizard-step  [stepTitle]=\"'Step 2'\" [navigationSymbol]=\"{ symbol: '&#xf0b1;', fontFamily: 'FontAwesome' }\">\n                      <form #workForm=\"ngForm\" class=\"editForm\" novalidate>\n                          <h4 class=\"head text-center\">What do you do?</h4>\n                          <br/>\n                          <div class='row justify-content-center'>\n                              <div class='col-2'>\n                                  <div class=\"form-group\">\n                                      <div class=\"custom-control custom-radio m-0\">\n                                          <input type=\"radio\" #work required id=\"customRadioInline1\" name=\"work\" class=\"custom-control-input\" value=\"Design\">\n                                          <label class=\"custom-control-label\" for=\"customRadioInline1\">Design</label>\n                                      </div>\n                                      <div class=\"custom-control custom-radio m-0\">\n                                          <input type=\"radio\" #work required id=\"customRadioInline2\"  name=\"work\" class=\"custom-control-input\" value=\"Code\">\n                                          <label class=\"custom-control-label\" for=\"customRadioInline2\">Code</label>\n                                      </div>\n                                      <div class=\"custom-control custom-radio m-0\">\n                                          <input type=\"radio\" #work required id=\"customRadioInline3\" checked name=\"work\" class=\"custom-control-input\" value=\"Deploy\">\n                                          <label class=\"custom-control-label\" for=\"customRadioInline3\">Deploy</label>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                          <div class=\"form-group text-center space-20\">\n                              <button uiSref=\"personal\" type=\"button\" class=\"btn btn-secondary mr-1\" awPreviousStep>\n                                  <span style=\"margin-right:10px;\">\n                                      <i class=\"ft-chevron-left\"></i>\n                                  </span> Previous</button>\n                              <button uiSref=\"address\" type=\"button\" class=\"btn btn-info\" [disabled]=\"!workForm.valid\" awNextStep>\n                                  Next\n                                  <span style=\"margin-left:10px;\">\n                                      <i class=\"ft-chevron-right\"></i>\n                                  </span>\n                              </button>\n                          </div>\n                      </form>\n                  </aw-wizard-step>\n                  <aw-wizard-step [stepTitle]=\"'Step 3'\" [navigationSymbol]=\"{ symbol: '&#xf0ac;', fontFamily: 'FontAwesome' }\">\n                      <form #addressForm=\"ngForm\" class=\"editForm\" novalidate>\n                          <h4 class=\"head text-center\">Where do you live?</h4>\n                          <br/>\n                          <div class='row'>\n                              <div class='col-sm-12'>\n                                  <div class=\"form-group\">\n                                      <label class=\"form-control-label\" for=\"street\">Street Address</label>\n                                      <input class=\"form-control input-md\" ngModel #street=\"ngModel\" required id=\"street\" name=\"street\" type=\"text\">\n                                      <small class=\"form-text text-muted danger\" *ngIf=\"!street.valid && (street.dirty || street.touched)\">This field is required!</small>\n\n                                  </div>\n                                  <div class=\"row\">\n                                      <div class='col-12 col-sm-4'>\n                                          <div class=\"form-group\">\n                                              <label class=\"form-control-label\" for=\"city\">City</label>\n                                              <input class=\"form-control input-md\" ngModel #city=\"ngModel\" required id=\"city\" name=\"city\" type=\"text\">\n                                              <small class=\"form-text text-muted danger\" *ngIf=\"!city.valid && (city.dirty || city.touched)\">This field is required!</small>\n\n                                          </div>\n                                      </div>\n                                      <div class='col-4 col-sm-offset-1 col-sm-3'>\n                                          <div class=\"form-group\">\n                                              <label class=\"form-control-label\" for=\"state\">State</label>\n                                              <input class=\"form-control input-md\" ngModel #state=\"ngModel\" required id=\"state\" name=\"state\" type=\"text\">\n                                              <small class=\"form-text text-muted danger\" *ngIf=\"!state.valid && (state.dirty || state.touched)\">This field is required!</small>\n\n                                          </div>\n                                      </div>\n                                      <div class='col-offset-1 col-7 col-sm-offset-1 col-sm-3'>\n                                          <div class=\"form-group\">\n                                              <label class=\"form-control-label\" for=\"zip\">Zip</label>\n                                              <input class=\"form-control input-md\" ngModel #zip=\"ngModel\" required id=\"zip\" name=\"zip\" type=\"text\">\n                                              <small class=\"form-text text-muted danger\" *ngIf=\"!zip.valid && (zip.dirty || zip.touched)\">This field is required!</small>\n\n                                          </div>\n                                      </div>\n                                  </div>\n\n                                  <div class=\"form-group text-center\">\n                                      <button uiSref=\"work\" type=\"button\" class=\"btn btn-secondary mr-1\" awPreviousStep>\n                                          <span style=\"margin-right:10px;\">\n                                              <i class=\"ft-chevron-left\"></i>\n                                          </span> Previous</button>\n                                      <button uiSref=\"result\" type=\"button\" class=\"btn btn-success\" [disabled]=\"!addressForm.valid\" awResetWizard>\n                                          Finish\n                                          <span style=\"margin-left:10px;\">\n                                              <i class=\"ft-chevron-right\"></i>\n                                          </span>\n                                      </button>\n                                  </div>\n                              </div>\n                          </div>\n                      </form>\n\n                  </aw-wizard-step>\n              </aw-wizard>\n\n\n          </div>\n      </div>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"content-header\">Checkbox</div>\n  </div>\n</div>\n\n<!-- Basic Checkbox starts -->\n<section id=\"basic-checkbox\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Basic</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>Add <code>.checkbox</code> as a single wrapper and add <code>&lt;label&gt;</code> with <code>for</code> attribute to get better output.</p>\n            <ul class=\"list-unstyled mb-0\">\n              <li class=\"d-inline-block mr-2 mb-2\">\n                <div class=\"checkbox\">\n                  <input type=\"checkbox\" id=\"checkbox1\" checked>\n                  <label for=\"checkbox1\"><span>Active</span></label>\n                </div>\n              </li>\n              <li class=\"d-inline-block mr-2 mb-2\">\n                <div class=\"checkbox\">\n                  <input type=\"checkbox\" id=\"checkbox2\">\n                  <label for=\"checkbox2\"><span>Inactive</span></label>\n                </div>\n              </li>\n              <li class=\"d-inline-block mr-2 mb-2\">\n                <div class=\"checkbox\">\n                    <input type=\"checkbox\" id=\"checkbox3\" disabled checked>\n                    <label for=\"checkbox3\"><span>Checked - disabled</span></label>\n                </div>\n              </li>\n             <li class=\"d-inline-block\">\n                <div class=\"checkbox\">\n                    <input type=\"checkbox\" id=\"checkbox4\" disabled>\n                    <label for=\"checkbox4\"><span>Unchecked - disabled</span></label>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- Basic Checkbox ends -->\n\n<!-- Custom checkbox starts -->\n<section id=\"custom-checkbox\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Custom</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n             <p>Add <code>.custom-control.custom-checkbox</code> as a single wrapper and add <code>.custom-control-label</code> for better output.</p>\n            <ul class=\"list-unstyled mb-0\">\n              <li class=\"d-inline-block mr-2 mb-2\">\n                <div class=\"custom-control custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" checked name=\"customCheck\" id=\"custom-check-1\">\n                  <label class=\"custom-control-label\" for=\"custom-check-1\"><span>Active</span></label>\n                </div>\n              </li>\n              <li class=\"d-inline-block mr-2 mb-2\">\n                <div class=\"custom-control custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" name=\"customCheck\" id=\"custom-check-2\">\n                  <label class=\"custom-control-label\" for=\"custom-check-2\"><span>Inactive</span></label>\n                </div>\n              </li>\n              <li class=\"d-inline-block mr-2 mb-2\">\n                <div class=\"custom-control custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" checked name=\"customCheck\" id=\"custom-check-3\" disabled>\n                  <label class=\"custom-control-label\" for=\"custom-check-3\"><span>Active - disabled</span></label>\n                </div>\n              </li>\n              <li class=\"d-inline-block\">\n                <div class=\"custom-control custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" name=\"customCheck\" disabled id=\"custom-check-4\">\n                  <label class=\"custom-control-label\" for=\"custom-check-4\"><span>Inactive - disabled</span></label>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- Custom checkbox ends -->\n\n<!-- Colored checkbox starts -->\n<section id=\"colored-checkbox\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Colored</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>Add <code>.checkbox.checkbox-&#123;color&#125;</code> in the wrapper for colored checkbox.</p>\n            <ul class=\"list-unstyled mb-0\">\n              <li class=\"d-inline-block mr-2 mb-2\">\n                <div class=\"checkbox checkbox-primary\">\n                  <input type=\"checkbox\" id=\"color-checkbox-1\" checked>\n                  <label for=\"color-checkbox-1\"><span>Primary</span></label>\n                </div>\n              </li>\n              <li class=\"d-inline-block mr-2 mb-2\">\n                <div class=\"checkbox checkbox-secondary\">\n                  <input type=\"checkbox\" id=\"color-checkbox-2\" checked>\n                  <label for=\"color-checkbox-2\"><span>Secondary</span></label>\n                </div>\n              </li>\n              <li class=\"d-inline-block mr-2 mb-2\">\n                <div class=\"checkbox checkbox-success\">\n                  <input type=\"checkbox\" id=\"color-checkbox-3\" checked>\n                  <label for=\"color-checkbox-3\"><span>Success</span></label>\n                </div>\n              </li>\n              <li class=\"d-inline-block mr-2 mb-2\">\n                <div class=\"checkbox checkbox-danger\">\n                  <input type=\"checkbox\" id=\"color-checkbox-4\" checked>\n                  <label for=\"color-checkbox-4\"><span>Danger</span></label>\n                </div>\n              </li>\n              <li class=\"d-inline-block mr-2 mb-2\">\n                <div class=\"checkbox checkbox-warning\">\n                  <input type=\"checkbox\" id=\"color-checkbox-5\" checked>\n                  <label for=\"color-checkbox-5\"><span>Warning</span></label>\n                </div>\n              </li>\n              <li class=\"d-inline-block mr-2 mb-2\">\n                <div class=\"checkbox checkbox-info\">\n                  <input type=\"checkbox\" id=\"color-checkbox-6\" checked>\n                  <label for=\"color-checkbox-6\"><span>Info</span></label>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- Colored checkbox ends -->\n\n<!-- Size starts -->\n<section id=\"size-checkbox\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Sizes</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>Use <code>.checkbox.checkbox-sm</code> in the wrapper for small checkbox. Colored small checkbox can also be used.</p>\n            <ul class=\"list-unstyled mb-0\">\n              <li class=\"d-inline-block mr-2 mb-2\">\n                <div class=\"checkbox checkbox-sm\">\n                  <input type=\"checkbox\" id=\"size-sm\" checked>\n                  <label for=\"size-sm\"><span>Small</span></label>\n                </div>\n              </li>\n              <li class=\"d-inline-block mr-2 mb-2\">\n                <div class=\"checkbox\">\n                  <input type=\"checkbox\" id=\"size-default\">\n                  <label for=\"size-default\"><span>Default</span></label>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- Size ends -->\n","import { Component, OnInit, Injectable, ViewEncapsulation } from '@angular/core';\nimport { NgbDateStruct, NgbDatepickerI18n, NgbCalendar} from '@ng-bootstrap/ng-bootstrap';\n\nconst now = new Date();\nconst I18N_VALUES = {\n  en: {\n    weekdays: ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'],\n    months: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  },\n};\n\n// Range datepicker Start\nconst equals = (one: NgbDateStruct, two: NgbDateStruct) =>\n  one && two && two.year === one.year && two.month === one.month && two.day === one.day;\n\nconst before = (one: NgbDateStruct, two: NgbDateStruct) =>\n  !one || !two ? false : one.year === two.year ? one.month === two.month ? one.day === two.day\n    ? false : one.day < two.day : one.month < two.month : one.year < two.year;\n\nconst after = (one: NgbDateStruct, two: NgbDateStruct) =>\n  !one || !two ? false : one.year === two.year ? one.month === two.month ? one.day === two.day\n    ? false : one.day > two.day : one.month > two.month : one.year > two.year;\n// Range datepicker Ends\n\n@Component({\n  selector: 'app-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['/assets/sass/libs/datepicker.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DatepickerComponent implements OnInit {\n  // Variable declaration\n  d: any;\n  d2: any;\n  d3: any;\n  model: NgbDateStruct;\n  popupModel;\n  date: {year: number, month: number};\n  displayMonths = 2;\n  navigation = 'select';\n  disabledModel: NgbDateStruct = {year: now.getFullYear(), month: now.getMonth() + 1, day: now.getDate()};\n  disabled = true;\n  customModel: NgbDateStruct;\n\n  configModal;    // Global configuration of datepickers\n\n\n  // Range datepicker start\n  hoveredDate: NgbDateStruct;\n\n  fromDate: NgbDateStruct;\n  toDate: NgbDateStruct;\n\n  // Range datepicker starts\n  onDateChange(date: NgbDateStruct) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n    } else if (this.fromDate && !this.toDate && after(date, this.fromDate)) {\n      this.toDate = date;\n    } else {\n      this.toDate = null;\n      this.fromDate = date;\n    }\n  }\n\n  isHovered = date => this.fromDate && !this.toDate && this.hoveredDate && after(date, this.fromDate) && before(date, this.hoveredDate);\n  isInside = date => after(date, this.fromDate) && before(date, this.toDate);\n  isFrom = date => equals(date, this.fromDate);\n  isTo = date => equals(date, this.toDate);\n  // Range datepicker ends\n\n\n  // Selects today's date\n  selectToday() {\n    this.model = {year: now.getFullYear(), month: now.getMonth() + 1, day: now.getDate()};\n  }\n\n  // Custom Day View Starts\n  isWeekend(date: NgbDateStruct) {\n    const d = new Date(date.year, date.month - 1, date.day);\n    return d.getDay() === 0 || d.getDay() === 6;\n  }\n\n  isDisabled(date: NgbDateStruct, current: {month: number}) {\n    return date.month !== current.month;\n  }\n  // Custom Day View Ends\n\n  ngOnInit() {\n    this.selectToday();\n  }\n}\n","<section id=\"datepicker\">\n  <div class=\"row text-left\">\n    <div class=\"col-sm-12\">\n      <div class=\"content-header\">Datepicker</div>\n    </div>\n  </div>\n  <div class=\"row text-left\" matchHeight=\"card\">\n    <!--Simple datepicker starts-->\n    <div class=\"col-md-12 col-lg-6\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Simple datepicker</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <ngb-datepicker #dp [(ngModel)]=\"model\" (navigate)=\"date = $event.next\"></ngb-datepicker>\n\n            <div class=\"block mt-3 mb-3\">\n              <button class=\"btn btn-sm btn-outline-primary mr-1\" (click)=\"dp.navigateTo({year: 2013, month: 2})\">To\n                Feb 2013</button>\n              <button class=\"btn btn-sm btn-outline-primary mr-1\" (click)=\"dp.navigateTo()\">To current month</button>\n              <button class=\"btn btn-sm btn-outline-primary\" (click)=\"selectToday()\">Select Today</button>\n            </div>\n\n            <p>Month: {{ date.month }}.{{ date.year }}</p>\n            <p>Model: {{ model | json }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--Simple datepicker Ends-->\n\n    <!--Disabled/Enabled datepicker starts-->\n    <div class=\"col-md-12 col-lg-6\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Disabled datepicker</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <ngb-datepicker [(ngModel)]=\"disabledModel\" [disabled]=\"disabled\"></ngb-datepicker>\n\n            <div class=\"block mt-3\">\n              <button class=\"btn btn-sm btn-outline-{{disabled ? 'danger' : 'success'}}\" (click)=\"disabled = !disabled\">\n                {{ disabled ? \"disabled\" : \"enabled\"}}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--Disabled/Enabled datepicker ends-->\n  </div>\n  <div class=\"row text-left\" matchHeight=\"card\">\n    <!--Datepicker in a popup starts-->\n    <div class=\"col-md-12 col-lg-6\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Datepicker in a popup</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <form class=\"form-inline\">\n              <div class=\"form-group\">\n                <div class=\"input-group\">\n                  <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" [(ngModel)]=\"popupModel\" ngbDatepicker\n                    #d2=\"ngbDatepicker\">\n                  <div class=\"input-group-append\">\n                    <div class=\"input-group-text\" (click)=\"d2.toggle()\">\n                      <i class=\"fa fa-calendar\" style=\"cursor: pointer;\"></i>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n            <p class=\"mt-4\">Model: {{ popupModel | json }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--Datepicker in a popup ends-->\n\n    <!--Custom day view starts-->\n    <div class=\"col-md-12 col-lg-6\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Custom day view</h4>\n          <p>This datepicker uses a custom template to display days. All week-ends are displayed with an orange\n            background.</p>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <form class=\"form-inline\">\n              <div class=\"form-group\">\n                <div class=\"input-group\">\n                  <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" [(ngModel)]=\"model\" ngbDatepicker\n                    [dayTemplate]=\"customDay\" [markDisabled]=\"isDisabled\" #d3=\"ngbDatepicker\">\n                  <div class=\"input-group-append\">\n                    <div class=\"input-group-text\" (click)=\"d3.toggle()\">\n                      <i class=\"fa fa-calendar\" style=\"cursor: pointer;\"></i>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n\n            <ng-template #customDay let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\"\n              let-disabled=\"disabled\">\n              <span class=\"custom-day\" [class.weekend]=\"isWeekend(date)\" [class.bg-primary]=\"selected\"\n                [class.hidden]=\"date.month !== currentMonth\" [class.text-muted]=\"disabled\">\n                {{ date.day }}\n              </span>\n            </ng-template>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--Custom day view ends-->\n  </div>\n  <div class=\"row text-left\" matchHeight=\"card\">\n    <!--Multiple months datepickers starts-->\n    <div class=\"col-lg-12 col-xl-6\">\n      <div class=\"card overflow-auto\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Multiple months</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <ngb-datepicker [displayMonths]=\"displayMonths\" [navigation]=\"navigation\"></ngb-datepicker>\n\n            <p class=\"pt-3\">Inline</p>\n\n            <form class=\"form-inline\">\n              <div class=\"form-group\">\n                <div class=\"input-group\">\n                  <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" [displayMonths]=\"displayMonths\"\n                    [navigation]=\"navigation\" ngbDatepicker #d=\"ngbDatepicker\">\n                  <div class=\"input-group-append\">\n                    <div class=\"input-group-text\" (click)=\"d.toggle()\">\n                      <i class=\"fa fa-calendar\" style=\"cursor: pointer;\"></i>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n\n            <p class=\"pt-3\">Options</p>\n\n            <select class=\"custom-select\" [(ngModel)]=\"displayMonths\">\n              <option [ngValue]=\"1\">One month</option>\n              <option [ngValue]=\"2\">Two months</option>\n            </select>\n\n            <select class=\"custom-select mt-1\" [(ngModel)]=\"navigation\">\n              <option value=\"none\">Without navigation</option>\n              <option value=\"select\">With select boxes</option>\n              <option value=\"arrows\">Without select boxes</option>\n            </select>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--Multiple months datepickers ends-->\n\n    <!--Range selection datepickers starts-->\n    <div class=\"col-lg-12 col-xl-6\">\n      <div class=\"card overflow-auto\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Range selection</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <ngb-datepicker #dp1 ngModel (ngModelChange)=\"onDateChange($event)\" [displayMonths]=\"2\" [dayTemplate]=\"t\">\n            </ngb-datepicker>\n\n            <ng-template #t let-date=\"date\" let-focused=\"focused\">\n              <span class=\"custom-day\" [class.focused]=\"focused\"\n                [class.range]=\"isFrom(date) || isTo(date) || isInside(date) || isHovered(date)\"\n                [class.faded]=\"isHovered(date) || isInside(date)\" (mouseenter)=\"hoveredDate = date\"\n                (mouseleave)=\"hoveredDate = null\">\n                {{ date.day }}\n              </span>\n            </ng-template>\n\n            <hr>\n            <div class=\"row\">\n              <div class=\"col-12 col-md-6\">\n                <p>From: {{ fromDate | json }} </p>\n              </div>\n              <div class=\"col-12 col-md-6\">\n                <p>To: {{ toDate | json }} </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--Range selection datepickers ends-->\n  </div>\n</section>\n","import { Component, ElementRef, ViewChild, ViewEncapsulation, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nimport { QuillEditorComponent } from 'ngx-quill';\n\nimport { debounceTime,  distinctUntilChanged} from 'rxjs/operators';\n\nimport Quill from 'quill';\n\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.scss']\n})\nexport class EditorComponent implements OnInit {\n\n  //declarations\n  title = 'Quill works!';\n  hide = false;\n  isReadOnly = false;\n  form: FormGroup;\n\n  constructor(fb: FormBuilder) {\n    this.form = fb.group({\n      editor: ['test']\n    });\n  }\n  @ViewChild('editor', {static: true}) editor: QuillEditorComponent\n\n  ngOnInit() {\n    this.form\n      .controls\n      .editor\n      .valueChanges.pipe(\n        debounceTime(400),\n        distinctUntilChanged()\n      )\n      .subscribe(data => {\n        console.log('native fromControl value changes with debounce', data)\n      });\n\n    this.editor\n      .onContentChanged\n      .pipe(\n        debounceTime(400),\n        distinctUntilChanged()\n      )\n      .subscribe(data => {\n        console.log('view child + directly subscription', data)\n      });\n  }\n\n  //events starts\n  setFocus($event) {\n    $event.focus();\n  }\n\n  patchValue() {\n    this.form.controls['editor'].patchValue(`${this.form.controls['editor'].value} patched!`)\n  }\n\n  toggleReadOnly() {\n    this.isReadOnly = !this.isReadOnly;\n  }\n\n  logChange($event: any) {\n    //your code here\n  }\n\n  logSelection($event: any) {\n    //your code here\n  }\n  //events ends\n\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"content-header\">Quill Editor</div>\n    <p class=\"content-sub-header mb-1\">Quill is a free, open source WYSIWYG editor built for the modern web. With its\n      modular architecture and expressive API, it is completely customizable to fit any need.</p>\n  </div>\n</div>\n<section id=\"quill-editor\">\n  <div class=\"row\">\n    <!-- Default Quill Editor starts -->\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Default editor</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <div class=\"mx-auto\">\n                <div id=\"full-wrapper\">\n                  <div id=\"full-container\">\n                    <quill-editor (onEditorCreated)=\"setFocus($event)\"></quill-editor>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Default Quill Editor Ends -->\n\n    <!-- Reactive forms Quill Editor starts -->\n    <div class=\"col-12\">\n      <div class=\"card text-left\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Reactive Forms and patch value</h4>\n        </div>\n        <div class=\"card-body\">\n          <form [formGroup]=\"form\">\n            <div class=\"mb-2\">\n              <button type=\"button\" class=\"btn mr-1 btn-primary\" (click)=\"hide=!(!!hide)\">hide / show</button>\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"patchValue()\">patchValue</button>\n            </div>\n            <quill-editor #editor [style.display]=\"hide ? 'none' : 'block'\" formControlName=\"editor\"></quill-editor>\n            <p class=\"mt-2\">\n              Output : {{form.controls.editor.value}}\n            </p>\n          </form>\n        </div>\n      </div>\n    </div>\n    <!-- Reactive forms Quill Editor ends -->\n\n    <!-- Quill Editor without toolbar starts -->\n    <div class=\"col-12\">\n      <div class=\"card text-left\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Editor without toolbar + required and ngModule</h4>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"mb-2\">\n            <button (click)=\"toggleReadOnly()\" class=\"btn btn-primary\">Toggle ReadOnly</button>\n          </div>\n          <quill-editor [(ngModel)]=\"title\" [maxLength]=\"5\" [minLength]=\"3\" [required]=\"true\" [readOnly]=\"isReadOnly\"\n            [modules]=\"{toolbar: false}\" (onContentChanged)=\"logChange($event);\"\n            (onSelectionChanged)=\"logSelection($event);\"></quill-editor>\n          <p class=\"mt-2\">\n            isReadOnly : {{isReadOnly}} <br> Title : {{title}}\n          </p>\n        </div>\n      </div>\n    </div>\n    <!-- Quill Editor without toolbar ends -->\n  </div>\n</section>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-input-groups',\n  templateUrl: './input-groups.component.html',\n  styleUrls: ['./input-groups.component.scss']\n})\nexport class InputGroupsComponent {\n\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"content-header\">Form Input Groups</div>\n  </div>\n</div>\n\n<!-- input groups start -->\n<section id=\"input-groups\">\n  <div class=\"row match-height\">\n    <div class=\"col-xl-4 col-md-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Default Input group</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>Add <code>.input-group-prepend .input-group-text</code> class <b>before</b> <code>&lt;input&gt;</code>\n            </p>\n            <fieldset>\n              <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon1\">@</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Addon to Left\" aria-describedby=\"basic-addon1\">\n              </div>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-xl-4 col-md-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Input group with Right Addon</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>Add <code>.input-group-append .input-group-text</code> class <b>after</b> <code>&lt;input&gt;</code></p>\n            <fieldset>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Addon To Right\" aria-describedby=\"basic-addon2\">\n                <div class=\"input-group-append\">\n                  <span class=\"input-group-text\" id=\"basic-addon2\">@example.com</span>\n                </div>\n              </div>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-xl-4 col-md-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Input group Addon on both sides</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>You can use both at the same time.</p>\n            <fieldset>\n              <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">$</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Addon On Both Side\"\n                  aria-label=\"Amount (to the nearest dollar)\">\n                <div class=\"input-group-append\">\n                  <span class=\"input-group-text\">.00</span>\n                </div>\n              </div>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- <div class=\"col-xl-4 col-md-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Input group addon with Icon</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <fieldset>\n              <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon3\"><i class=\"ft-mail\"></i></span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Addon to Left\" aria-describedby=\"basic-addon3\">\n              </div>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-xl-4 col-md-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Input group addon with Right Icon</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <fieldset>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Addon To Right\" aria-describedby=\"basic-addon4\">\n                <div class=\"input-group-append\">\n                  <span class=\"input-group-text\" id=\"basic-addon4\"><i class=\"ft-user\"></i></span>\n                </div>\n              </div>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-xl-4 col-md-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Input group addon with icon both side</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <fieldset>\n              <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\"><i class=\"ft-phone\"></i></span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Addon On Both Side\" aria-label=\"Amount (to the nearest dollar)\">\n                <div class=\"input-group-append\">\n                  <span class=\"input-group-text\"><i class=\"ft-search\"></i></span>\n                </div>\n              </div>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    </div> -->\n    <div class=\"col-xl-4 col-md-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Input group addon with Spinner</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>Use <code>i.spinner</code> inside <code>.input-group-text</code>.</p>\n            <fieldset>\n              <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon5\"><i class=\"ft-rotate-cw spinner\"></i></span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Addon to Left\" aria-describedby=\"basic-addon5\">\n              </div>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-xl-4 col-md-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Input group addon with Right Spinner</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>Use <code>i.spinner</code> inside <code>.input-group-text</code>.</p>\n            <fieldset>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Addon To Right\" aria-describedby=\"basic-addon6\">\n                <div class=\"input-group-append\">\n                  <span class=\"input-group-text\" id=\"basic-addon6\"><i class=\"ft-refresh-ccw spinner\"></i></span>\n                </div>\n              </div>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-xl-4 col-md-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Input group addon with Spinner both side</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>You can use both at the same time.</p>\n            <fieldset>\n              <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\"><i class=\"ft-rotate-cw spinner\"></i></span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Addon On Both Side\"\n                  aria-label=\"Amount (to the nearest dollar)\">\n                <div class=\"input-group-append\">\n                  <span class=\"input-group-text\"><i class=\"spinner ft-refresh-cw\"></i></span>\n                </div>\n              </div>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- input groups end -->\n\n\n<!-- Input Groups With Checkbox start -->\n<section id=\"input-group-checkbox-radio\">\n  <div class=\"row match-height\">\n    <div class=\"col-md-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Input group with checkbox</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>Add <code>.input-group-text</code> <b>before</b> <code>&lt;input&gt;</code> and add checkbox inside.</p>\n            <fieldset>\n              <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                  <div class=\"input-group-text\" id=\"checkbox-addon1\">\n                    <div class=\"checkbox checkbox-sm\">\n                      <input type=\"checkbox\" id=\"checkboxInputGroup\" name=\"checkbox\">\n                      <label for=\"checkboxInputGroup\"></label>\n                    </div>\n                  </div>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Text input with checkbox \"\n                  aria-describedby=\"checkbox-addon1\" />\n              </div>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Input group with radio</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>Add <code>.input-group-text</code> <b>before</b> <code>&lt;input&gt;</code> and add radio inside.</p>\n            <fieldset>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Text input with radio \"\n                  aria-describedby=\"radio-addon1\" />\n                <div class=\"input-group-append\">\n                  <div class=\"input-group-text\" id=\"radio-addon1\">\n                    <div class=\"radio radio-sm\">\n                      <input type=\"radio\" id=\"radioInputGroup\" name=\"radio\">\n                      <label for=\"radioInputGroup\"></label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- Input Groups With Checkbox end -->\n\n\n<!--\t   Input Group Sizing\t -->\n<section id=\"input-group-sizing\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"content-header\">Input Group Sizes</div>\n    </div>\n  </div>\n  <div class=\"row match-height\">\n    <div class=\"col-md-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Large Input group</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>Add <code>.input-group.input-group-lg</code> for large addon.</p>\n            <fieldset>\n              <div class=\"input-group input-group-lg\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"sizing-addon1\">@</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Large Addon\" aria-describedby=\"sizing-addon1\">\n              </div>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Small Input group</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>Add <code>.input-group.input-group-sm</code> for small addon.</p>\n            <fieldset>\n              <div class=\"input-group input-group-sm\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Small Addon\" aria-describedby=\"sizing-addon3\">\n                <div class=\"input-group-append\">\n                  <span class=\"input-group-text\" id=\"sizing-addon3\">@example.com</span>\n                </div>\n              </div>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- Input Group Sizing end-->\n\n\n<!-- Input Group Buttons start -->\n<section id=\"input-group-buttons-dropdown\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"content-header\">Input Groups Buttons and Dropdowns</div>\n    </div>\n  </div>\n  <div class=\"row match-height\">\n    <div class=\"col-lg-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Input group Button On Left</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <fieldset>\n              <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                  <button class=\"btn btn-primary\" type=\"button\">Click Me!</button>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Button on left\">\n              </div>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-lg-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Input group Button On Right</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <fieldset>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Button on right\">\n                <div class=\"input-group-append\">\n                  <button class=\"btn btn-primary\" type=\"button\">Go</button>\n                </div>\n              </div>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-lg-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Input group Button On Both Side</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <fieldset>\n              <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                  <button class=\"btn btn-primary\" type=\"button\">Love it!</button>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Button on both side\" aria-label=\"Amount\">\n                <div class=\"input-group-append\">\n                  <button class=\"btn btn-primary\" type=\"button\">Hate it!</button>\n                </div>\n              </div>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-lg-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Input group Dropdown On Left</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <fieldset>\n              <div class=\"input-group\">\n                <div ngbDropdown class=\"input-group-prepend dropup\">\n                  <button type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                    aria-expanded=\"false\" ngbDropdownToggle>\n                    Action\n                  </button>\n                  <div class=\"dropdown-menu\" ngbDropdownMenu>\n                    <a ngbDropdownItem href=\"javascript:;\">Action</a>\n                    <a ngbDropdownItem href=\"javascript:;\">Another action</a>\n                    <a ngbDropdownItem href=\"javascript:;\">Something else here</a>\n                    <div role=\"separator\" class=\"dropdown-divider\"></div>\n                    <a ngbDropdownItem href=\"javascript:;\">Separated link</a>\n                  </div>\n\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Dropdown on left\">\n              </div>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-lg-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Input group Dropdown On Right</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <fieldset>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Dropdown on right\">\n                <div ngbDropdown class=\"input-group-append dropup\">\n                  <button type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\" aria-expanded=\"false\" ngbDropdownToggle>\n                    Action\n                  </button>\n                  <div class=\"dropdown-menu\" ngbDropdownMenu>\n                    <a ngbDropdownItem href=\"javascript:;\">Action</a>\n                    <a ngbDropdownItem href=\"javascript:;\">Another action</a>\n                    <a ngbDropdownItem href=\"javascript:;\">Something else here</a>\n                    <div role=\"separator\" class=\"dropdown-divider\"></div>\n                    <a ngbDropdownItem href=\"javascript:;\">Separated link</a>\n                  </div>\n                </div>\n              </div>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-lg-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Input group Dropdown On Both Side</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <fieldset>\n              <div class=\"input-group\">\n                <div ngbDropdown class=\"input-group-prepend dropup\">\n                  <button type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\" aria-expanded=\"false\" ngbDropdownToggle>\n                    <i class=\"fa fa-pencil\"></i>\n                  </button>\n                  <div class=\"dropdown-menu\" ngbDropdownMenu>\n                    <a ngbDropdownItem href=\"javascript:;\">Action</a>\n                    <a ngbDropdownItem href=\"javascript:;\">Another action</a>\n                    <a ngbDropdownItem href=\"javascript:;\">Something else here</a>\n                    <div role=\"separator\" class=\"dropdown-divider\"></div>\n                    <a ngbDropdownItem href=\"javascript:;\">Separated link</a>\n                  </div>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Dropdown on both side\" aria-label=\"Amount\">\n                <div ngbDropdown class=\"input-group-append dropup\">\n                  <button type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\" aria-expanded=\"false\" ngbDropdownToggle>\n                    Action\n                  </button>\n                  <div class=\"dropdown-menu\" ngbDropdownMenu>\n                    <a ngbDropdownItem href=\"javascript:;\">Action</a>\n                    <a ngbDropdownItem href=\"javascript:;\">Another action</a>\n                    <a ngbDropdownItem href=\"javascript:;\">Something else here</a>\n                    <div role=\"separator\" class=\"dropdown-divider\"></div>\n                    <a ngbDropdownItem href=\"javascript:;\">Separated link</a>\n                  </div>\n                </div>\n              </div>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- Buttons with Dropdown end -->\n","import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nexport class User {\n  public fname: string;\n  public lname: string;\n  public city: string;\n}\n\n@Component({\n  selector: 'app-inputs',\n  templateUrl: './inputs.component.html',\n  styleUrls: ['./inputs.component.scss']\n})\nexport class InputsComponent {\n\n  user: User;\n  model = new User();\n  submitted = false;\n\n  employeeForm = new FormGroup({\n    fname: new FormControl('Mark', [Validators.required]),\n    lname: new FormControl('Otto', [Validators.required]),\n    city: new FormControl('', [Validators.required])\n  });\n\n  constructor() {\n    this.model = {\n      fname: 'Mark',\n      lname: 'Otto',\n      city: ''\n    }\n  }\n\n  onSubmit(form) {\n    console.log(form.value)\n  }\n\n  get f() {\n    return this.employeeForm.controls;\n  }\n\n  onReactiveFormSubmit() {\n    this.submitted = true;\n    if (this.employeeForm.invalid) {\n      return;\n    }\n    console.log(this.employeeForm.value);\n  }\n}\n","<div class=\"row\">\n\t<div class=\"col-12\">\n\t\t<div class=\"content-header\">Inputs</div>\n\t</div>\n</div>\n<!-- Basic Inputs start -->\n<section id=\"basic-input\">\n\t<div class=\"row\">\n\t\t<div class=\"col-12\">\n\t\t\t<div class=\"card\">\n\t\t\t\t<div class=\"card-header\">\n\t\t\t\t\t<h4 class=\"card-title\">Basic</h4>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"card-content\">\n\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t\t\t\t<fieldset class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"basicInput\">Basic</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"basicInput\"  placeholder=\"Enter email\">\n\t\t\t\t\t\t\t\t</fieldset>\n\n\t\t\t\t\t\t\t\t<fieldset class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"helpInputTop\">Input text with help</label>\n\t\t\t\t\t\t\t\t\t<small class=\"text-muted\">eg.<i>someone@example.com</i></small>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"helpInputTop\">\n\t\t\t\t\t\t\t\t</fieldset>\n\n\t\t\t\t\t\t\t\t<fieldset class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"helperText\">With Helper Text</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"helperText\" class=\"form-control\" placeholder=\"Name\">\n\t\t\t\t\t\t\t\t\t<small class=\"text-muted\">Find helper text here for given textbox.</small>\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t\t\t\t<fieldset class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"disabledInput\">Disabled Input</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"disabledInput\" placeholder=\"Disabled Text\" disabled>\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t<fieldset class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"readonlyInput\">Readonly Input</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"readonlyInput\" readonly=\"readonly\" value=\"You can't update me :P\">\n\t\t\t\t\t\t\t\t</fieldset>\n\n\t\t\t\t\t\t\t\t<fieldset class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label>Static Text</label>\n\t\t\t\t\t\t\t\t\t<p class=\"form-control-static\" id=\"staticInput\">email@pixinvent.com</p>\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</section>\n<!-- Basic Inputs end -->\n\n<!-- Input Style start -->\n<section id=\"input-style\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h4 class=\"card-title\">Styles</h4>\n            </div>\n            <div class=\"card-content\">\n                <div class=\"card-body\">\n\t\t\t\t\t<p>Use <code>.round</code> or <code>.sqaure</code> along with <code>.form-control</code> for round/square bordered input.</p>\n                    <div class=\"row\">\n                        <div class=\"col-sm-6\">\n                            <fieldset class=\"form-group\">\n                                <label for=\"roundText\">Rounded Input</label>\n                                <input type=\"text\" id=\"roundText\" class=\"form-control round\" placeholder=\"Rounded Input\">\n                            </fieldset>\n                        </div>\n                        <div class=\"col-sm-6\">\n\t\t\t\t\t\t\t<fieldset class=\"form-group\">\n                                <label for=\"squareText\">Square Input</label>\n                                <input type=\"text\" id=\"squareText\" class=\"form-control square\" placeholder=\"Square Input\">\n                            </fieldset>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </div>\n</section>\n<!-- Input Style end -->\n\n<!-- Horizontal Input start -->\n<section id=\"horizontal-input\">\n\t<div class=\"row\">\n\t\t<div class=\"col-12\">\n\t\t\t<div class=\"card\">\n\t\t\t\t<div class=\"card-header\">\n\t\t\t\t\t<h4 class=\"card-title\">Horizontal Input</h4>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"card-content\">\n\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t<p>Add <code>.col-form-label</code> to your <code>&lt;label&gt;</code> so that they’re vertically centered with their associated form controls.</p>\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t\t\t\t<div class=\"form-group row align-items-center\">\n\t\t\t\t\t\t\t\t\t<div class=\"col-lg-2 col-3\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"first-name\" class=\"col-form-label\">First Name</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"col-lg-10 col-9\">\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"first-name\" class=\"form-control\" name=\"fname\" placeholder=\"First Name\">\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t\t\t\t<div class=\"form-group row align-items-center\">\n\t\t\t\t\t\t\t\t\t<div class=\"col-lg-2 col-3\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"last-name\" class=\"col-form-label\">Last Name</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"col-lg-10 col-9\">\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"last-name\" class=\"form-control\" name=\"fname\" placeholder=\"Last Name\">\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</section>\n<!-- Horizontal Input end -->\n\n<!-- Basic File Browser start -->\n<section id=\"input-file-browser\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h4 class=\"card-title\">File Input</h4>\n            </div>\n            <div class=\"card-content\">\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"col-md-6 col-12\">\n                            <fieldset class=\"form-group\">\n                                <label for=\"basicInputFile\">Simple File Input</label>\n                                <input type=\"file\" class=\"form-control-file\" id=\"basicInputFile\">\n                            </fieldset>\n                        </div>\n                        <div class=\"col-md-6 col-12\">\n                            <fieldset class=\"form-group\">\n                                <label for=\"inputGroupFile01\">With Browse button</label>\n                                <div class=\"custom-file\">\n                                    <input type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile01\">\n                                    <label class=\"custom-file-label\" for=\"inputGroupFile01\">Choose file</label>\n                                </div>\n                            </fieldset>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </div>\n</section>\n<!-- Basic File Browser end -->\n\n<!-- Floating Label Inputs start -->\n<!-- <section id=\"floating-label-input\">\n\t<div class=\"row\">\n\t\t<div class=\"col-12\">\n\t\t\t<div class=\"card\">\n\t\t\t\t<div class=\"card-header\">\n\t\t\t\t\t<h4 class=\"card-title\">Floating Label Inputs</h4>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"card-content\">\n\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t<p>For Flating Label Inputs, need to use <code>.form-label-group</code> class & add attribute <code>disabled</code> for disabled Floating Label Input.</p>\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col-md-4 col-sm-6\">\n\t\t\t\t\t\t\t\t<fieldset class=\"form-label-group\">\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"floating-label1\" placeholder=\"Label-placeholder\">\n\t\t\t\t\t\t\t\t\t<label for=\"floating-label1\">Label-placeholder</label>\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-md-4 col-sm-6\">\n\t\t\t\t\t\t\t\t<fieldset class=\"form-label-group form-group position-relative has-icon-left\">\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"iconLabelLeft\" placeholder=\"Icon Left, Default Input\">\n\t\t\t\t\t\t\t\t\t<div class=\"form-control-position\">\n\t\t\t\t\t\t\t\t\t\t<i class=\"bx bx-user\"></i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<label for=\"iconLabelLeft\">Icon Left, Default Input</label>\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-md-4 col-sm-6\">\n\t\t\t\t\t\t\t\t<fieldset class=\"form-label-group\">\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"floating-label-disable\" placeholder=\"Label-placeholder\" disabled>\n\t\t\t\t\t\t\t\t\t<label for=\"floating-label-disable\">Disabled-placeholder</label>\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n    </div>\n</section> -->\n<!-- Floating Label Inputs end -->\n\n<!-- Input with Icons start -->\n<section id=\"input-with-icons\">\n\t<div class=\"row match-height\">\n\t\t<div class=\"col-12\">\n\t\t\t<div class=\"card\">\n\t\t\t\t<div class=\"card-header\">\n\t\t\t\t\t<h4 class=\"card-title\">Input with Icons</h4>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"card-content\">\n\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t<p>Use <code>.position-relative</code> with <code>.form-group</code> and use <code>.has-icon-&#123;left/right&#125;</code> for icon on left/right side.</p>\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t\t\t\t<label>Left Icon</label>\n\t\t\t\t\t\t\t\t<fieldset class=\"form-group position-relative has-icon-left\">\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"iconLeft1\" placeholder=\"Icon Left, Default Input\">\n\t\t\t\t\t\t\t\t\t<div class=\"form-control-position\">\n\t\t\t\t\t\t\t\t\t\t<i class=\"ft-user\"></i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t\t\t\t<label>Right Icon</label>\n\t\t\t\t\t\t\t\t<fieldset class=\"form-group position-relative has-icon-right\">\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"iconLeft2\" placeholder=\"Icon Right, Default Input\">\n\t\t\t\t\t\t\t\t\t<div class=\"form-control-position\">\n\t\t\t\t\t\t\t\t\t\t<i class=\"ft-file\"></i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</section>\n<!-- Input with Icons end -->\n\n<!-- Input Sizing start -->\n<section id=\"input-sizing\">\n\t<div class=\"row match-height\">\n\t\t<div class=\"col-12\">\n\t\t\t<div class=\"card\">\n\t\t\t\t<div class=\"card-header\">\n\t\t\t\t\t<h4 class=\"card-title\">Sizes</h4>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"card-content\">\n\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t<p>Use <code>.form-control-&#123;lg/sm&#125;</code> for large/small input box.</p>\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col-md-4\">\n\t\t\t\t\t\t\t\t<fieldset class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"large-input\">Large</label>\n\t\t\t\t\t\t\t\t\t<input class=\"form-control form-control-lg\" type=\"text\" id=\"large-input\" placeholder=\"Large Input\">\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-md-4\">\n\t\t\t\t\t\t\t\t<fieldset class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"default-input\">Default</label>\n\t\t\t\t\t\t\t\t\t<input class=\"form-control\" type=\"text\" id=\"default-input\" placeholder=\"Default Input\">\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-md-4\">\n\t\t\t\t\t\t\t\t<fieldset class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"small-input\">Small</label>\n\t\t\t\t\t\t\t\t\t<input class=\"form-control form-control-sm\" type=\"text\" id=\"small-input\" placeholder=\"Small Input\">\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</section>\n<!-- Input Sizing end -->\n\n<!-- validations start -->\n<section id=\"input-validation\">\n\t<div class=\"row\">\n\t\t<div class=\"col-12\">\n\t\t\t<div class=\"card\">\n\t\t\t\t<div class=\"card-header\">\n\t\t\t\t\t<h4 class=\"card-title\">Validation States</h4>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"card-content\">\n\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t<p>You can indicate invalid and valid form fields with <code>.is-invalid</code> and <code>.is-valid</code>. Note that <code>.invalid-feedback</code> is also supported with these classes.</p>\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col-sm-6\">\n\t\t\t\t\t\t\t\t<div class=\"form-group m-0\">\n\t\t\t\t\t\t\t\t\t<label for=\"valid-state\">Valid State</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control is-valid\" id=\"valid-state\" placeholder=\"Valid\" value=\"Valid\" required>\n\t\t\t\t\t\t\t\t\t<div class=\"valid-feedback\">\n\t\t\t\t\t\t\t\t\t\t<i class=\"ft-circle\"></i>\n\t\t\t\t\t\t\t\t\t\t<span>This is valid state.</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-sm-6\">\n\t\t\t\t\t\t\t\t<div class=\"form-group m-0\">\n\t\t\t\t\t\t\t\t\t<label for=\"invalid-state\">Invalid State</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control is-invalid\" id=\"invalid-state\" placeholder=\"Invalid\" value=\"Invalid\" required>\n\t\t\t\t\t\t\t\t\t<div class=\"invalid-feedback\">\n\t\t\t\t\t\t\t\t\t\t<i class=\"ft-circle\"></i>\n\t\t\t\t\t\t\t\t\t\t<span>This is invalid state.</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</section>\n<!-- validations end -->\n\n<!-- Tooltip validations start -->\n<section id=\"tooltip-validation\">\n\t<div class=\"row\">\n\t\t<div class=\"col-12\">\n\t\t\t<div class=\"card\">\n\t\t\t\t<div class=\"card-header\">\n\t\t\t\t\t<h4 class=\"card-title\">Validation States with Tooltips (Template Driven Form)</h4>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"card-content\">\n\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t<p>Use <code>form.needs-validation</code> and swap <code>.&#123;valid/invalid&#125;-feedback</code> with <code>.&#123;valid/invalid&#125;-tooltip</code> to display validation feedback in a styled tooltip.</p>\n\t\t\t\t\t\t<form class=\"needs-validation\" #userForm=\"ngForm\" (ngSubmit)=\"userForm.form.valid && onSubmit(userForm)\">\n\t\t\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t\t\t<div class=\"col-md-4 mb-4 form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"validationTooltip01\">First name</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"fname\" class=\"form-control\" id=\"validationTooltip01\" placeholder=\"First name\" [(ngModel)]=\"model.fname\" #fname=\"ngModel\"\n                  [ngClass]=\"{ 'is-invalid': userForm.submitted && fname.invalid, 'is-valid': userForm.submitted &&  !fname.invalid }\" required>\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"userForm.submitted && !fname.errors?.required\" class=\"valid-tooltip\">Looks good!</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"col-md-4 mb-4 form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"validationTooltip02\">Last name</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"lname\" class=\"form-control\" id=\"validationTooltip02\" placeholder=\"Last name\"   [(ngModel)]=\"model.lname\" #lname=\"ngModel\"\n                  [ngClass]=\"{ 'is-invalid': userForm.submitted && lname.invalid, 'is-valid': userForm.submitted && !lname.invalid }\" required>\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"userForm.submitted && !lname.errors?.required\" class=\"valid-tooltip\">Looks good!</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"col-md-4 mb-4 form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"validationTooltip03\">City</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"city\" class=\"form-control\" id=\"validationTooltip03\" placeholder=\"City\"  [(ngModel)]=\"model.city\" #city=\"ngModel\"\n                  [ngClass]=\"{ 'is-invalid': userForm.submitted && city.invalid, 'is-valid': userForm.submitted && !city.invalid }\" required>\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"userForm.submitted && (city.invalid || city.errors?.required)\" class=\"invalid-tooltip\">Please provide a valid city.</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button class=\"btn btn-primary\" type=\"submit\">Submit</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n  </div>\n\n  <div class=\"row\">\n\t\t<div class=\"col-12\">\n\t\t\t<div class=\"card\">\n\t\t\t\t<div class=\"card-header\">\n\t\t\t\t\t<h4 class=\"card-title\">Validation States with Tooltips (Reactive Form)</h4>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"card-content\">\n\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t<p>Use <code>form.needs-validation</code> and swap <code>.&#123;valid/invalid&#125;-feedback</code> with <code>.&#123;valid/invalid&#125;-tooltip</code> to display validation feedback in a styled tooltip.</p>\n\t\t\t\t\t\t<form class=\"needs-validation\" [formGroup]=\"employeeForm\" (ngSubmit)=\"onReactiveFormSubmit()\">\n\t\t\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t\t\t<div class=\"col-md-4 mb-4 form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"validationTooltip04\">First name</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" formControlName=\"fname\" class=\"form-control\" id=\"validationTooltip04\" placeholder=\"First name\"\n                  [ngClass]=\"{ 'is-invalid': submitted && f.fname.invalid, 'is-valid': submitted &&  !f.fname.invalid }\" required>\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted && !f.fname.errors?.required\" class=\"valid-tooltip\">Looks good!</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"col-md-4 mb-4 form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"validationTooltip05\">Last name</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" formControlName=\"lname\" class=\"form-control\" id=\"validationTooltip05\" placeholder=\"Last name\"\n                  [ngClass]=\"{ 'is-invalid': submitted && f.lname.invalid, 'is-valid': submitted && !f.lname.invalid }\" required>\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted && !f.lname.errors?.required\" class=\"valid-tooltip\">Looks good!</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"col-md-4 mb-4 form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"validationTooltip06\">City</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" formControlName=\"city\" class=\"form-control\" id=\"validationTooltip06\" placeholder=\"City\"\n                  [ngClass]=\"{ 'is-invalid': submitted && f.city.invalid, 'is-valid': submitted && !f.city.invalid }\" required>\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted && (f.city.invalid || f.city.errors?.required)\" class=\"invalid-tooltip\">Please provide a valid city.</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button class=\"btn btn-primary\" type=\"submit\">Submit</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</section>\n<!-- Tooltip validations end -->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-radio',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss']\n})\nexport class RadioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"content-header\">Radios</div>\n  </div>\n</div>\n\n<!-- Basic Radios starts -->\n<section id=\"basic-radio\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Basic</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>Add <code>.radio</code> as a single wrapper and add <code>&lt;label&gt;</code> with <code>for</code> attribute to get better output.</p>\n            <ul class=\"list-unstyled mb-0\">\n              <li class=\"d-inline-block mr-2\">\n                <div class=\"radio\">\n                  <input type=\"radio\" name=\"basic-radio-1\" id=\"radio1\" checked>\n                  <label for=\"radio1\">Active</label>\n                </div>\n              </li>\n              <li class=\"d-inline-block mr-2\">\n                <div class=\"radio\">\n                  <input type=\"radio\" name=\"basic-radio-1\" id=\"radio2\">\n                  <label for=\"radio2\">Inactive</label>\n                </div>\n              </li>\n              <li class=\"d-inline-block mr-2\">\n                <div class=\"radio\">\n                  <input type=\"radio\" id=\"radio3\" disabled checked>\n                  <label for=\"radio3\">Active - Disabled</label>\n                </div>\n              </li>\n              <li class=\"d-inline-block\">\n                <div class=\"radio\">\n                  <input type=\"radio\" id=\"radio4\" disabled>\n                  <label for=\"radio3\">Inactive - Disabled</label>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- Basic Radios ends -->\n\n<!-- Custom Radios starts -->\n<section id=\"custom-buttons\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Custom</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>Add <code>.custom-control.custom-radio</code> as a single wrapper and add <code>.custom-control-label</code> for better output.</p>\n            <ul class=\"list-unstyled mb-0\">\n              <li class=\"d-inline-block mr-2\">\n                <fieldset>\n                  <div class=\"custom-control custom-radio\">\n                    <input type=\"radio\" class=\"custom-control-input\" name=\"custom-radio\" id=\"customRadio1\" checked=\"\">\n                    <label class=\"custom-control-label\" for=\"customRadio1\">Active</label>\n                  </div>\n                </fieldset>\n              </li>\n              <li class=\"d-inline-block mr-2\">\n                <fieldset>\n                  <div class=\"custom-control custom-radio\">\n                    <input type=\"radio\" class=\"custom-control-input\" name=\"custom-radio\" id=\"customRadio2\">\n                    <label class=\"custom-control-label\" for=\"customRadio2\">Inactive</label>\n                  </div>\n                </fieldset>\n              </li>\n              <li class=\"d-inline-block mr-2\">\n                <fieldset>\n                  <div class=\"custom-control custom-radio\">\n                    <input type=\"radio\" class=\"custom-control-input\" checked=\"\" id=\"customRadio3\" disabled=\"\">\n                    <label class=\"custom-control-label\" for=\"customRadio3\">Active - disabled</label>\n                  </div>\n                </fieldset>\n              </li>\n              <li class=\"d-inline-block\">\n                <fieldset>\n                  <div class=\"custom-control custom-radio\">\n                    <input type=\"radio\" class=\"custom-control-input\" id=\"customRadio4\" disabled=\"\">\n                    <label class=\"custom-control-label\" for=\"customRadio4\">Inactive - disabled</label>\n                  </div>\n                </fieldset>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- Custom Radios ends -->\n\n<!-- Colored Radios starts -->\n<section id=\"colored-radio\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Colored</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>Add <code>.radio.radio-&#123;color&#125;</code> in the wrapper for colored radio.</p>\n            <ul class=\"list-unstyled mb-0\">\n              <li class=\"d-inline-block mr-2\">\n                <div class=\"radio radio-primary\">\n                  <input type=\"radio\" name=\"color-radio\" id=\"color-radio-1\" checked>\n                  <label for=\"color-radio-1\">Primary</label>\n                </div>\n              </li>\n              <li class=\"d-inline-block mr-2\">\n                <div class=\"radio radio-secondary\">\n                  <input type=\"radio\" name=\"color-radio\" id=\"color-radio-2\">\n                  <label for=\"color-radio-2\">Secondary</label>\n                </div>\n              </li>\n              <li class=\"d-inline-block mr-2\">\n                <div class=\"radio radio-success\">\n                  <input type=\"radio\" name=\"color-radio\" id=\"color-radio-3\">\n                  <label for=\"color-radio-3\">Success</label>\n                </div>\n              </li>\n              <li class=\"d-inline-block mr-2\">\n                <div class=\"radio radio-danger\">\n                  <input type=\"radio\" name=\"color-radio\" id=\"color-radio-4\">\n                  <label for=\"color-radio-4\">Danger</label>\n                </div>\n              </li>\n              <li class=\"d-inline-block mr-2\">\n                <div class=\"radio radio-warning\">\n                  <input type=\"radio\" name=\"color-radio\" id=\"color-radio-5\">\n                  <label for=\"color-radio-5\">Warning</label>\n                </div>\n              </li>\n              <li class=\"d-inline-block mr-2\">\n                <div class=\"radio radio-info\">\n                  <input type=\"radio\" name=\"color-radio\" id=\"color-radio-6\">\n                  <label for=\"color-radio-6\">Info</label>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- Colored Radios ends -->\n\n<!-- Sizes starts -->\n<section id=\"size-radio\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Sizes</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>Use <code>.radio.radio-sm</code> in the wrapper for small radio. Colored small radio can also be used.</p>\n            <ul class=\"list-unstyled mb-0\">\n              <li class=\"d-inline-block align-top mr-2\">\n                <div class=\"radio radio-sm\">\n                  <input type=\"radio\" name=\"size-radio-1\" id=\"size-sm\" checked>\n                  <label for=\"size-sm\">Small</label>\n                </div>\n              </li>\n              <li class=\"d-inline-block\">\n                <div class=\"radio\">\n                  <input type=\"radio\" name=\"size-radio-1\" id=\"size-default\">\n                  <label for=\"size-default\">Default</label>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- Sizes ends -->\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { NgSelectModule, NgOption } from '@ng-select/ng-select';\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss', '/assets/sass/libs/select.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SelectComponent implements OnInit {\n\n\n  cities = [\n    { id: 1, name: 'Vilnius' },\n    { id: 2, name: 'Kaunas' },\n    { id: 3, name: 'Pavilnys', disabled: true },\n    { id: 4, name: 'Pabradė' },\n    { id: 5, name: 'Klaipėda' }\n  ];\n\n  cities2 = [\n    { id: 1, name: 'Vilnius' },\n    { id: 2, name: 'Kaunas' },\n    { id: 3, name: 'Pavilnys', disabled: true },\n    { id: 4, name: 'Pabradė' },\n    { id: 5, name: 'Klaipėda' }\n  ];\n\n  cities3 = [\n    { id: 1, name: 'Vilnius', avatar: '//www.gravatar.com/avatar/b0d8c6e5ea589e6fc3d3e08afb1873bb?d=retro&r=g&s=30 2x' },\n    { id: 2, name: 'Kaunas', avatar: '//www.gravatar.com/avatar/ddac2aa63ce82315b513be9dc93336e5?d=retro&r=g&s=15' },\n    { id: 3, name: 'Pavilnys', avatar: '//www.gravatar.com/avatar/6acb7abf486516ab7fb0a6efa372042b?d=retro&r=g&s=15' }\n  ];\n\n  cities4 = [];\n  cities5 = [];\n\n  users = [\n    { id: 'anjmao', name: 'Anjmao' },\n    { id: 'varnas', name: 'Tadeus Varnas' }\n  ];\n\n  selectedAccount = 'Adam'\n  accounts = [\n    { name: 'Adam', email: 'adam@email.com', age: 12, country: 'United States' },\n    { name: 'Samantha', email: 'samantha@email.com', age: 30, country: 'United States' },\n    { name: 'Amalie', email: 'amalie@email.com', age: 12, country: 'Argentina' },\n    { name: 'Estefanía', email: 'estefania@email.com', age: 21, country: 'Argentina' },\n    { name: 'Adrian', email: 'adrian@email.com', age: 21, country: 'Ecuador' },\n    { name: 'Wladimir', email: 'wladimir@email.com', age: 30, country: 'Ecuador' },\n    { name: 'Natasha', email: 'natasha@email.com', age: 54, country: 'Ecuador' },\n    { name: 'Nicole', email: 'nicole@email.com', age: 43, country: 'Colombia' },\n    { name: 'Michael', email: 'michael@email.com', age: 15, country: 'Colombia' },\n    { name: 'Nicolás', email: 'nicole@email.com', age: 43, country: 'Colombia' }\n  ];\n\n  selectedCity: any;\n  selectedCityIds: string[];\n  selectedCityName = 'Vilnius';\n  selectedCityId: number;\n  selectedCityId1: number;\n  selectedUserIds: number[];\n\n  constructor() {\n    this.create10kCities();\n  }\n\n  ngOnInit() {\n  }\n\n\n  addCustomUser = (term) => ({ id: term, name: term });\n\n  private create10kCities() {\n    this.cities4 = Array.from({ length: 10000 }, (value, key) => key)\n      .map(val => ({\n        id: val,\n        name: `city ${val}`\n      }));\n\n      this.cities5 = Array.from({ length: 10000 }, (value, key) => key)\n      .map(val => ({\n        id: val,\n        name: `city ${val}`\n      }));\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"content-header\">Select</div>\n  </div>\n</div>\n\n<!-- ng-select start -->\n<section>\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <div class=\"col-12 mb-2\">\n                <a href=\"https://ng-select.github.io/ng-select#/data-sources\" target=\"_blank\">For more information </a>\n              </div>\n              <div class=\"col-md-6 col-12\">\n                <h6>Basic Example</h6>\n                <p><code>Classic</code> example of basic ng-select control.</p>\n                <div class=\"form-group\">\n                  <ng-select [items]=\"cities\" bindLabel=\"name\" placeholder=\"Select city\" [(ngModel)]=\"selectedCity\">\n                  </ng-select>\n                  <p class=\"text-italic font-small-2 mt-1\">\n                    Selected city: {{selectedCity | json}}\n                  </p>\n                </div>\n              </div>\n              <div class=\"col-md-6 col-12\">\n                <h6>Multiselect with custom bindings</h6>\n                <p>Use <code>[multiple]=\"true\"</code> to Select multiple elements</p>\n                <div class=\"form-group\">\n                  <ng-select [items]=\"cities2\" bindLabel=\"name\" bindValue=\"id\" [multiple]=\"true\" [closeOnSelect]=\"false\"\n                    placeholder=\"Select cities\" [(ngModel)]=\"selectedCityIds\">\n                  </ng-select>\n                  <p class=\"text-italic font-small-2 mt-1\">\n                    Selected cities: {{selectedCityIds}}\n                  </p>\n                </div>\n              </div>\n              <div class=\"col-md-6 col-12\">\n                <h6>Custom tags</h6>\n                <p>By providing custom function to <code>[addTag]</code> you can modify result of new tag.</p>\n                <div class=\"form-group\">\n                  <div>\n                    <ng-select [items]=\"users\" bindLabel=\"name\" bindValue=\"id\" [addTag]=\"addCustomUser\"\n                      [multiple]=\"true\" placeholder=\"Select user or add custom tag\" [(ngModel)]=\"selectedUserIds\">\n                    </ng-select>\n                    <p class=\"text-italic font-small-2 mt-1\">\n                      Selected user: {{selectedUserIds}}\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-6 col-12\">\n                <h6>Custom templates</h6>\n                <p>Custom selected item label, header and footer using <code>ng-label-tmp</code>,\n                  <code>ng-header-tmp</code> and <code>ng-footer-tmp</code> </p>\n                <div class=\"form-group\">\n                  <ng-select [items]=\"cities3\" bindLabel=\"name\" bindValue=\"name\" placeholder=\"Select city\"\n                    [(ngModel)]=\"selectedCityName\">\n                    <ng-template ng-header-tmp>\n                      Custom header\n                    </ng-template>\n                    <ng-template ng-label-tmp let-item=\"item\">\n                      <img height=\"15\" width=\"15\" [src]=\"item.avatar\" />\n                      <b>{{item.name}}</b> is cool\n                    </ng-template>\n                    <ng-template ng-option-tmp let-item=\"item\" let-index=\"index\">\n                      <img height=\"15\" width=\"15\" [src]=\"item.avatar\" />\n                      <b>{{item.name}}</b>\n                    </ng-template>\n                    <ng-template ng-footer-tmp>\n                      Custom footer\n                    </ng-template>\n                  </ng-select>\n                  <p class=\"text-italic font-small-2 mt-1\">\n                    Selected city: {{selectedCityName}}\n                  </p>\n                </div>\n              </div>\n              <div class=\"col-md-6 col-12\">\n                <h6>Virtual scroll</h6>\n                <p>Use <code>[virtualScroll]=\"true\"</code> to use this feature.</p>\n                <div class=\"form-group\">\n                  <ng-select [items]=\"cities4\" [virtualScroll]=\"true\" bindLabel=\"name\" bindValue=\"id\"\n                    placeholder=\"Select city\" [(ngModel)]=\"selectedCityId\">\n                  </ng-select>\n                  <p class=\"text-italic font-small-2 mt-1\">\n                    Selected city ID: {{selectedCityId}}\n                  </p>\n                </div>\n              </div>\n              <div class=\"col-md-6 col-12\">\n                <h6>Grouping</h6>\n                <p>Group by item key using key name as a string to <code>groupBy</code> input</p>\n                <div class=\"form-group\">\n                  <ng-select [items]=\"accounts\" bindLabel=\"name\" bindValue=\"name\" groupBy=\"country\" [(ngModel)]=\"selectedAccount\">\n                  </ng-select>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- ng-select end -->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-switch',\n  templateUrl: './switch.component.html',\n  styleUrls: ['./switch.component.scss']\n})\nexport class SwitchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"content-header\">Switch</div>\n  </div>\n</div>\n\n<!-- Basic Switch starts -->\n<section id=\"basic-switch\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Basic</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <div class=\"custom-switch custom-control-inline mb-1 mb-xl-0\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"custom-switch-1\" checked>\n              <label class=\"custom-control-label mr-1\" for=\"custom-switch-1\">\n                <span>Active</span>\n              </label>\n            </div>\n            <div class=\"custom-switch custom-control-inline mb-1 mb-xl-0\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"custom-switch-2\">\n              <label class=\"custom-control-label mr-1\" for=\"custom-switch-2\">\n                <span>Inactive</span>\n              </label>\n            </div>\n            <div class=\"custom-switch custom-control-inline mb-1 mb-xl-0\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"custom-switch-3\" checked disabled>\n              <label class=\"custom-control-label mr-1\" for=\"custom-switch-3\">\n                <span>Active - disabled</span>\n              </label>\n            </div>\n            <div class=\"custom-switch custom-control-inline mb-1 mb-xl-0\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"custom-switch-4\" disabled>\n              <label class=\"custom-control-label mr-1\" for=\"custom-switch-4\">\n                <span>Inactive - disabled</span>\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- Basic Switch ends -->\n\n<!-- Colored Switch starts -->\n<section id=\"colored-switch\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Colored</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <div class=\"custom-switch custom-switch-primary custom-control-inline mb-1 mb-xl-0\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"color-switch-1\" checked>\n              <label class=\"custom-control-label mr-1\" for=\"color-switch-1\">\n                <span>Primary</span>\n              </label>\n            </div>\n            <div class=\"custom-switch custom-switch-secondary custom-control-inline mb-1 mb-xl-0\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"color-switch-2\" checked>\n              <label class=\"custom-control-label mr-1\" for=\"color-switch-2\">\n                <span>Secondary</span>\n              </label>\n            </div>\n            <div class=\"custom-switch custom-switch-success custom-control-inline mb-1 mb-xl-0\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"color-switch-3\" checked>\n              <label class=\"custom-control-label mr-1\" for=\"color-switch-3\">\n                <span>Success</span>\n              </label>\n            </div>\n            <div class=\"custom-switch custom-switch-danger custom-control-inline mb-1 mb-xl-0\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"color-switch-4\" checked>\n              <label class=\"custom-control-label mr-1\" for=\"color-switch-4\">\n                <span>Danger</span>\n              </label>\n            </div>\n            <div class=\"custom-switch custom-switch-warning custom-control-inline mb-1 mb-xl-0\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"color-switch-5\" checked>\n              <label class=\"custom-control-label mr-1\" for=\"color-switch-5\">\n                <span>Warning</span>\n              </label>\n            </div>\n            <div class=\"custom-switch custom-switch-info custom-control-inline mb-1 mb-xl-0\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"color-switch-6\" checked>\n              <label class=\"custom-control-label mr-1\" for=\"color-switch-6\">\n                <span>Info</span>\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- Colored Switch ends -->\n\n<div class=\"row\">\n  <div class=\"col-12\">\n    <h4 class=\"content-header\">Switchery</h4>\n  </div>\n</div>\n<!-- Basic Switch starts -->\n<section id=\"basic-switch\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Basic</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <div class=\"form-group custom-control-inline mb-1 mb-xl-0\">\n              <ui-switch checked class=\"switchery\"></ui-switch>\n              <label for=\"switchery\" class=\"pt-1 pl-1\">Active</label>\n            </div>\n            <div class=\"form-group custom-control-inline mb-1 mb-xl-0\">\n              <ui-switch class=\"switchery\"></ui-switch>\n              <label for=\"switchery\" class=\"pt-1 pl-1\">Inactive</label>\n            </div>\n            <div class=\"form-group custom-control-inline mb-1 mb-xl-0\">\n              <ui-switch checked class=\"switchery\" [disabled]=\"true\"></ui-switch>\n              <label for=\"switchery\" class=\"pt-1 pl-1\">Active - disabled</label>\n            </div>\n            <div class=\"form-group custom-control-inline mb-1 mb-xl-0\">\n              <ui-switch class=\"switchery\" [disabled]=\"true\"></ui-switch>\n              <label for=\"switchery\" class=\"pt-1 pl-1\">Inactive - disabled</label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- Basic Switch ends -->\n\n<!-- Colored Switch starts -->\n<section id=\"colored-switch\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Colored</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <div class=\"form-group custom-control-inline mb-1 mb-xl-0 switchery-primary\">\n              <ui-switch checked class=\"switchery\"></ui-switch>\n              <label for=\"switchery\" class=\"pt-1 pl-1\">Primary</label>\n            </div>\n            <div class=\"form-group custom-control-inline mb-1 mb-xl-0 switchery-secondary\">\n              <ui-switch checked class=\"switchery\"></ui-switch>\n              <label for=\"switchery\" class=\"pt-1 pl-1\">Secondary</label>\n            </div>\n            <div class=\"form-group custom-control-inline mb-1 mb-xl-0 switchery-info\">\n              <ui-switch checked class=\"switchery\"></ui-switch>\n              <label for=\"switchery\" class=\"pt-1 pl-1\">Info</label>\n            </div>\n            <div class=\"form-group custom-control-inline mb-1 mb-xl-0 switchery-success\">\n              <ui-switch checked class=\"switchery\"></ui-switch>\n              <label for=\"switchery\" class=\"pt-1 pl-1\">Success</label>\n            </div>\n            <div class=\"form-group custom-control-inline mb-1 mb-xl-0 switchery-warning\">\n              <ui-switch checked class=\"switchery\"></ui-switch>\n              <label for=\"switchery\" class=\"pt-1 pl-1\">Warning</label>\n            </div>\n            <div class=\"form-group custom-control-inline mb-1 mb-xl-0 switchery-danger\">\n              <ui-switch checked class=\"switchery\"></ui-switch>\n              <label for=\"switchery\" class=\"pt-1 pl-1\">Danger</label>\n            </div>\n\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- Colored Switch ends -->\n\n\n\n\n<section id=\"switchery-toggle\">\n  <!-- Styles -->\n  <div class=\"row match-height\">\n    <div class=\"col-md-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Styles</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>Add <code>size=\"[Large | Small]\"</code> for different sizes and <code>.switchery-colorName</code> for\n              different colors.</p>\n            <div class=\"form-group switchery-primary d-flex align-items-center\">\n              <ui-switch checked class=\"switchery\" size=\"large\"></ui-switch>\n              <label for=\"switchery\" class=\"ml-2\">Large</label>\n            </div>\n            <div class=\"form-group switchery-info d-flex align-items-center\">\n              <ui-switch checked class=\"switchery\"></ui-switch>\n              <label for=\"switchery\" class=\"ml-2\">Default</label>\n            </div>\n            <div class=\"form-group switchery-success d-flex align-items-center\">\n              <ui-switch checked class=\"switchery\" size=\"small\"></ui-switch>\n              <label for=\"switchery\" class=\"ml-2\">Small</label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Labels on Both Sides -->\n    <div class=\"col-md-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Reverse</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>Add <code>reverse</code> to reverse the switch position.</p>\n            <div class=\"form-group switchery-primary d-flex align-items-center\">\n              <ui-switch reverse class=\"switchery\"></ui-switch>\n              <label for=\"switchery\" class=\"ml-2\">Primary</label>\n            </div>\n            <div class=\"form-group switchery-info d-flex align-items-center\">\n              <ui-switch reverse class=\"switchery\"></ui-switch>\n              <label for=\"switchery\" class=\"ml-2\">Info</label>\n            </div>\n            <div class=\"form-group switchery-success d-flex align-items-center\">\n              <ui-switch reverse class=\"switchery\"></ui-switch>\n              <label for=\"switchery\" class=\"ml-2\">Success</label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-tags-input',\n  templateUrl: './tags-input.component.html',\n  styleUrls: ['./tags-input.component.scss', '/assets/sass/libs/input-tags.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TagsInputComponent {\n\n  form: FormGroup;\n\n  constructor(private http: HttpClient) {\n    this.form = new FormBuilder().group({\n      chips: [['chip'], []]\n    });\n  }\n\n  disabled = true;\n\n  items = ['Javascript', 'Typescript'];\n  items1 = ['Javascript', 'Typescript'];\n  items2 = ['Javascript', 'Typescript'];\n  items3 = ['Javascript', 'Typescript'];\n  items4 = ['Javascript', 'Typescript'];\n\n  inputText = 'text';\n\n  itemsAsObjects = [{ id: 0, name: 'Angular', readonly: true }, { id: 1, name: 'React' }];\n\n  autocompleteItems = ['Item1', 'item2', 'item3'];\n\n  autocompleteItemsAsObjects = [\n    { value: 'Item1', id: 1, extra: 1 },\n    { value: 'item2', id: 2, extra: 1 },\n    { value: 'item3', id: 3, extra: 1 }\n  ];\n\n  dragAndDropExample = ['C#', 'Java'];\n\n  dragAndDropObjects = [{ display: 'Javascript', value: 'Javascript' }, { display: 'Typescript', value: 'Typescript' }];\n  dragAndDropStrings = ['CoffeScript', 'Scala.js'];\n\n\n\n  public requestAutocompleteItems = (text: string): Observable<any> => {\n    const url = `https://api.github.com/search/repositories?q=${text}`;\n    return this.http\n      .get<any>(url)\n      .pipe(map(items => items.map(item => item.full_name)));\n  }\n\n  public requestAutocompleteItemsFake = (text: string): Observable<string[]> => {\n    return of([\n      'item1', 'item2', 'item3'\n    ]);\n  };\n\n  public options = {\n    readonly: undefined,\n    placeholder: '+ Tag'\n  };\n\n  public onAdd(item) {\n    console.log('tag added: value is ' + item);\n  }\n\n  public onRemove(item) {\n    console.log('tag removed: value is ' + item);\n  }\n\n  public onSelect(item) {\n    console.log('tag selected: value is ' + item);\n  }\n\n  public onFocus(item) {\n    console.log('input focused: current value is ' + item);\n  }\n\n  public onTextChange(text) {\n    console.log('text changed: value is ' + text);\n  }\n\n  public onBlur(item) {\n    console.log('input blurred: current value is ' + item);\n  }\n\n  public onTagEdited(item) {\n    console.log('tag edited: current value is ' + item);\n  }\n\n  public onValidationError(item) {\n    console.log('invalid tag ' + item);\n  }\n\n\n  public transform(value: string): Observable<object> {\n    const item = { display: `@${value}`, value: `@${value}` };\n    return of(item);\n  }\n\n  private startsWithAt(control: FormControl) {\n    if (control.value.charAt(0) !== '@') {\n      return {\n        'startsWithAt@': true\n      };\n    }\n\n    return null;\n  }\n\n  private endsWith$(control: FormControl) {\n    if (control.value.charAt(control.value.length - 1) !== '$') {\n      return {\n        'endsWith$': true\n      };\n    }\n\n    return null;\n  }\n\n  private validateAsync(control: FormControl): Promise<any> {\n    return new Promise(resolve => {\n      const value = control.value;\n      const result: any = isNaN(value) ? {\n        isNan: true\n      } : null;\n\n      setTimeout(() => {\n        resolve(result);\n      }, 1);\n    });\n  }\n\n  public asyncErrorMessages = {\n    isNan: 'Please only add numbers'\n  };\n\n  public validators = [this.startsWithAt, this.endsWith$];\n\n  public asyncValidators = [this.validateAsync];\n\n  public errorMessages = {\n    'startsWithAt@': 'Your items need to start with \\'@\\'',\n    'endsWith$': 'Your items need to end with \\'$\\''\n  };\n\n  public onAdding(tag): Observable<any> {\n    const confirm = window.confirm('Do you really want to add this tag?');\n    return of(tag)\n      .pipe(filter(() => confirm));\n  }\n\n  public onRemoving(tag): Observable<any> {\n    const confirm = window.confirm('Do you really want to remove this tag?');\n    return of(tag)\n      .pipe(filter(() => confirm));\n  }\n\n  public asyncOnAdding(tag): Observable<any> {\n    const confirm = window.confirm('Do you really want to add this tag?');\n    return of(tag)\n      .pipe(filter(() => confirm));\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <h4 class=\"content-header\">Input Tags</h4>\n  </div>\n</div>\n\n<!-- Tagging start -->\n<section class=\"tagging-tags\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-content\">\n          <div class=\"row\">\n            <div class=\"col-xl-6 col-12\">\n              <div class=\"card-body\">\n                <fieldset>\n                  <label>Simple Input with two items</label>\n                  <div class=\"form-group\">\n                    <tag-input [(ngModel)]=\"items\" (onSelect)=\"onSelect($event)\" [modelAsStrings]=\"true\">\n                    </tag-input>\n                    <p class=\"text-muted small my-1\">By default close char is <code>x</code>.\n                  </div>\n                </fieldset>\n                <fieldset>\n                  <label>Simple Input with not removable items</label>\n                  <div class=\"form-group\">\n                    <tag-input [ngModel]=\"items1\" [removable]=\"false\"></tag-input>\n                    <p class=\"text-muted small my-1\"> you can make tag non-removable by removing <code>x</code> using\n                      <code>[removable]=\"false\"</code> </p>\n                  </div>\n                </fieldset>\n                <fieldset>\n                  <label>Editable items</label>\n                  <div class=\"form-group\">\n                    <tag-input [(ngModel)]=\"items2\" [editable]=\"true\" (onTagEdited)=\"onTagEdited($event)\">\n                    </tag-input>\n                    <p class=\"text-muted small my-1\">you can create editable tag by using\n                      <code>[editable]=\"true\"</code> property</p>\n                  </div>\n                </fieldset>\n                <fieldset>\n                  <label>Special Tag</label>\n                  <div class=\"form-group\">\n                    <tag-input [ngModel]=\"['@item$']\" [errorMessages]=\"errorMessages\" [validators]=\"validators\">\n                    </tag-input>\n                    <p class=\"text-muted small my-1\">An input which requires all tags to start with <code> '@'</code>\n                      and end with <code>'$'</code></p>\n                  </div>\n                </fieldset>\n                <fieldset>\n                  <label>Transform tag</label>\n                  <div class=\"form-group\">\n                    <tag-input [ngModel]=\"['@item']\" [onAdding]=\"transform\">\n                    </tag-input>\n                    <p class=\"text-muted small my-1\">An input which will transform the value of all added tags\n                      prepending <code>'@'</code> to the tag using <code>[onAdding]=\"transform\"</code> </p>\n                  </div>\n                </fieldset>\n                <fieldset>\n                  <label>Tags accepting only items from an autocomplete</label>\n                  <div class=\"form-group\">\n                    <tag-input [ngModel]=\"['@item']\" [onlyFromAutocomplete]=\"true\">\n                      <tag-input-dropdown [showDropdownIfEmpty]=\"true\" [focusFirstElement]=\"true\" [displayBy]=\"'value'\"\n                        [identifyBy]=\"'id'\" [autocompleteItems]=\"autocompleteItemsAsObjects\">\n                        <ng-template let-item=\"item\" let-index=\"index\">\n                          ({{ index }}) {{ item.id }}: {{ item.value }}\n                        </ng-template>\n                      </tag-input-dropdown>\n                    </tag-input>\n                    <p class=\"text-muted small my-1\">You can customize this component to allow only Tags accepting\n                      only items from an autocomplete</p>\n                  </div>\n                </fieldset>\n              </div>\n            </div>\n            <div class=\"col-xl-6 col-12\">\n              <div class=\"card-body\">\n                <fieldset>\n                  <label>Autocomplete items using onAdding</label>\n                  <div class=\"form-group\">\n                    <tag-input [(ngModel)]=\"items4\" [onlyFromAutocomplete]=\"true\" [onAdding]=\"asyncOnAdding\">\n                      <tag-input-dropdown [autocompleteItems]=\"autocompleteItemsAsObjects\" [displayBy]=\"'value'\"\n                        [identifyBy]=\"'id'\">\n                      </tag-input-dropdown>\n                    </tag-input>\n                    <p class=\"text-muted small my-1\">You can autocomplete items using\n                      <code>[onAdding]=\"asyncOnAdding\"</code><strong> eg. 'item1'</strong></p>\n                  </div>\n                </fieldset>\n                <fieldset>\n                  <label>keyboard</label>\n                  <div class=\"form-group\">\n                    <tag-input [ngModel]=\"['@item']\" [inputClass]=\"'myinput'\" [inputId]=\"'myinputId'\"\n                      [separatorKeyCodes]=\"[32, 188]\">\n                    </tag-input>\n                    <p class=\"text-muted small my-1\">An input which allows adding items by pressing the key\n                      <code>\"space\"</code> of your keyboard</p>\n                  </div>\n                </fieldset>\n                <fieldset>\n                  <label>Tags with Bootstrap theme</label>\n                  <div class=\"form-group\">\n                    <tag-input [theme]=\"'bootstrap'\" [ngModel]=\"['@item']\" name=\"items\">\n                    </tag-input>\n                    <p class=\"text-muted small my-1\">You can apply bootstrap theme to your tag using\n                      <code>[theme]=\"'bootstrap'\"</code> </p>\n                  </div>\n                </fieldset>\n                <fieldset>\n                  <label>Max tag limit</label>\n                  <div class=\"form-group\">\n                    <tag-input [ngModel]=\"['Javascript', 'Typescript']\" [maxItems]=\"3\" [ripple]=\"false\"\n                      placeholder=\"Insert a new item\">\n                    </tag-input>\n                    <p class=\"text-muted small my-1\">Input tag that allows specific number of tags using\n                      <code>[maxItems]</code> </p>\n                  </div>\n                </fieldset>\n                <fieldset>\n                  <label>Drag and drop</label>\n                  <div class=\"form-group\">\n                    <tag-input [(ngModel)]=\"dragAndDropExample\" [modelAsStrings]=\"true\" [dragZone]=\"'zone1'\"\n                      [editable]=\"true\">\n                    </tag-input>\n                    <p class=\"text-muted small my-1\">You can use this advanced feature with <code>[dragZone]</code>\n                    </p>\n                  </div>\n                </fieldset>\n                <fieldset>\n                  <label>Confirm adding and removing tags with Observables</label>\n                  <div class=\"form-group\">\n                    <tag-input [ngModel]=\"['item1']\" [dragZone]=\"'zone1'\" [modelAsStrings]=\"true\"\n                      [onRemoving]=\"onRemoving\" [onAdding]=\"onAdding\">\n                    </tag-input>\n                    <p class=\"text-muted small my-1\">You can implement this special feature with\n                      <code>[onRemoving]</code> and <code>[onAdding]</code> </p>\n                  </div>\n                </fieldset>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- Tagging end -->\n","import { Component } from '@angular/core';\nimport { NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-timepicker',\n  templateUrl: './timepicker.component.html',\n  styleUrls: ['./timepicker.component.scss']\n})\nexport class TimepickerComponent {\n  // Variable Declaration\n  meridian = true;\n  time: NgbTimeStruct = { hour: 13, minute: 30, second: 30 };\n  meridianTime: NgbTimeStruct = { hour: 13, minute: 30, second: 30 };\n  secondsTime: NgbTimeStruct = { hour: 13, minute: 30, second: 30 };\n  spinnersTime: NgbTimeStruct = { hour: 13, minute: 30, second: 30 };\n  stepsTime: NgbTimeStruct = { hour: 13, minute: 30, second: 30 };\n  validationTime: NgbTimeStruct = { hour: 13, minute: 30, second: 30 };\n  seconds = true;\n  spinners = true;\n  hourStep = 1;\n  minuteStep = 15;\n  secondStep = 30;\n\n\n  ctrl = new FormControl('', (control: FormControl) => {\n    const value = control.value;\n\n    if (!value) {\n      return null;\n    }\n\n    if (value.hour < 12) {\n      return { tooEarly: true };\n    }\n    if (value.hour > 13) {\n      return { tooLate: true };\n    }\n\n    return null;\n  });\n\n  // Using for Meridian\n  toggleMeridian() {\n    this.meridian = !this.meridian;\n  }\n\n  // Using for Seconds  \n  toggleSeconds() {\n    this.seconds = !this.seconds;\n  }\n\n  // Using for Spinners\n  toggleSpinners() {\n    this.spinners = !this.spinners;\n  }\n}\n","<!--Timepicker Starts-->\n<section id=\"timepicker\">\n  <div class=\"row text-left\">\n    <div class=\"col-sm-12\">\n      <div class=\"content-header\">Timepicker</div>\n    </div>\n  </div>\n  <div class=\"row text-left\" matchHeight =\"card\">\n    <!--Basic Timepicker Starts-->\n    <div class=\"col-md-4 col-lg-4\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Basic Timepicker</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <ngb-timepicker [(ngModel)]=\"time\"></ngb-timepicker>\n            <button class=\"btn mb-3 mt-3\" style=\"opacity: 0;\">&nbsp;</button>\n            <hr>\n            <p>Selected time: {{time | json}}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--Basic Timepicker Ends-->\n\n    <!--Meridian Timepicker Starts-->\n    <div class=\"col-md-4 col-lg-4\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Meridian</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <ngb-timepicker [(ngModel)]=\"meridianTime\" [meridian]=\"meridian\"></ngb-timepicker>\n            <button class=\"btn btn-outline-{{meridian ? 'success' : 'danger'}} mb-3 mt-3\" (click)=\"toggleMeridian()\">\n              Meridian - {{meridian ? \"ON\" : \"OFF\"}}\n          </button>\n            <hr>\n            <p>Selected time: {{meridianTime | json}}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--Meridian Timepicker Ends-->\n\n    <!--Seconds Timepicker Starts-->\n    <div class=\"col-md-4 col-lg-4\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Seconds</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <ngb-timepicker [(ngModel)]=\"secondsTime\" [seconds]=\"seconds\"></ngb-timepicker>\n            <button class=\"btn btn-outline-{{seconds ? 'success' : 'danger'}} mb-3 mt-3\" (click)=\"toggleSeconds()\">\n              Seconds - {{seconds ? \"ON\" : \"OFF\"}}\n          </button>\n            <hr>\n            <p>Selected time: {{secondsTime | json}}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--Seconds Timepicker Ends-->\n  </div>\n  <div class=\"row text-left\" matchHeight =\"card\">\n    <!--Spinners Timepicker Starts-->\n    <div class=\"col-md-4 col-lg-4\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Spinners</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <ngb-timepicker [(ngModel)]=\"spinnersTime\" [spinners]=\"spinners\"></ngb-timepicker>\n\n            <button class=\"m-t-1 btn btn-outline-{{spinners ? 'success' : 'danger'}} mb-3 mt-3\" (click)=\"toggleSpinners()\">\n              Spinners - {{spinners ? \"ON\" : \"OFF\"}}\n          </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--Spinners Timepicker Ends-->\n\n    <!--Custom steps for Timepicker Starts-->\n    <div class=\"col-md-4 col-lg-4\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Custom steps</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <ngb-timepicker [(ngModel)]=\"stepsTime\" [seconds]=\"true\" [hourStep]=\"hourStep\" [minuteStep]=\"minuteStep\" [secondStep]=\"secondStep\"></ngb-timepicker>\n\n            <div class=\"row\">\n              <div class=\"col-sm-3\">\n                <label for=\"changeHourStep\">Hour Step</label>\n                <input type=\"number\" class=\"form-control form-control-sm\" [(ngModel)]=\"hourStep\" />\n              </div>\n              <div class=\"col-sm-3\">\n                <label for=\"changeMinuteStep\">Minute Step</label>\n                <input type=\"number\" class=\"form-control form-control-sm\" [(ngModel)]=\"minuteStep\" />\n              </div>\n              <div class=\"col-sm-4\">\n                <label for=\"changeSecondStep\">Second Step</label>\n                <input type=\"number\" class=\"form-control form-control-sm\" [(ngModel)]=\"secondStep\" />\n              </div>\n            </div>\n            <hr>\n            <p>Selected time: {{stepsTime | json}}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--Custom steps for Timepicker Ends-->\n\n    <!--Timepicker Custom validation Starts-->\n    <div class=\"col-md-4 col-lg-4\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Custom validation</h4>\n          <p>Illustrates custom validation, you have to select time between 12:00 and 13:59</p>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <div class=\"form-group\" [class.has-success]=\"ctrl.valid\" [class.has-danger]=\"!ctrl.valid\">\n              <ngb-timepicker [(ngModel)]=\"validationTime\" [formControl]=\"ctrl\" required></ngb-timepicker>\n              <div class=\"form-control-feedback\">\n                <div *ngIf=\"ctrl.valid\">Great choice</div>\n                <div *ngIf=\"ctrl.errors && ctrl.errors['required']\">Select some time during lunchtime</div>\n                <div *ngIf=\"ctrl.errors && ctrl.errors['tooLate']\">Oh no, it's way too late</div>\n                <div *ngIf=\"ctrl.errors && ctrl.errors['tooEarly']\">It's a bit too early</div>\n              </div>\n            </div>\n            <hr>\n            <p>Selected time: {{validationTime | json}}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--Timepicker Custom validation Ends-->\n  </div>\n</section>\n<!--Timepicker Starts-->","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ValidationFormsComponent } from \"./validation/validation-forms.component\";\nimport { InputsComponent } from './elements/inputs/inputs.component';\nimport { InputGroupsComponent } from './elements/input-groups/input-groups.component';\nimport { ArchwizardComponent } from './archwizard/archwizard.component';\nimport { RadioComponent } from './elements/radio/radio.component';\nimport { CheckboxComponent } from './elements/checkbox/checkbox.component';\nimport { SwitchComponent } from './elements/switch/switch.component';\nimport { DatepickerComponent } from './elements/datepicker/datepicker.component';\nimport { TimepickerComponent } from './elements/timepicker/timepicker.component';\nimport { LayoutComponent } from './layout/layout.component';\nimport { EditorComponent } from './elements/editor/editor.component';\nimport { TagsInputComponent } from './elements/tags-input/tags-input.component';\nimport { SelectComponent } from './elements/select/select.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: 'inputs',\n        component: InputsComponent,\n        data: {\n          title: 'Inputs'\n        }\n      },\n      {\n        path: 'input-groups',\n        component: InputGroupsComponent,\n        data: {\n          title: 'Input Groups'\n        }\n      },\n      {\n        path: 'radio',\n        component: RadioComponent,\n        data: {\n          title: 'Radio'\n        }\n      },\n      {\n        path: 'checkbox',\n        component: CheckboxComponent,\n        data: {\n          title: 'Checkbox'\n        }\n      },\n      {\n        path: 'switch',\n        component: SwitchComponent,\n        data: {\n          title: 'Switch'\n        }\n      },\n      {\n        path: 'datepicker',\n        component: DatepickerComponent,\n        data: {\n          title: 'Datepicker'\n        }\n      },\n      {\n        path: 'timepicker',\n        component: TimepickerComponent,\n        data: {\n          title: 'Timepicker'\n        }\n      },\n      {\n        path: 'editor',\n        component: EditorComponent,\n        data: {\n          title: 'Quill Editor'\n        }\n      },\n      {\n        path: 'tags',\n        component: TagsInputComponent,\n        data: {\n          title: 'Tags'\n        }\n      },\n      {\n        path: 'switch',\n        component: SwitchComponent,\n        data: {\n          title: 'Switch'\n        }\n      },\n      {\n        path: 'select',\n        component: SelectComponent,\n        data: {\n          title: 'Select'\n        }\n      },\n      {\n        path: 'layout',\n        component: LayoutComponent,\n        data: {\n          title: 'Layout'\n        }\n      },\n      {\n        path: 'validation',\n        component: ValidationFormsComponent,\n        data: {\n          title: 'Validation Forms'\n        }\n      },\n      {\n        path: 'archwizard',\n        component: ArchwizardComponent,\n        data: {\n          title: 'Angular Wizard Forms'\n        }\n      }\n\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FormsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { FormsRoutingModule } from \"./forms-routing.module\";\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CustomFormsModule } from 'ngx-custom-validators';\nimport { ArchwizardModule } from 'angular-archwizard';\nimport { UiSwitchModule } from 'ngx-ui-switch';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { TagInputModule } from 'ngx-chips';\nimport { QuillModule } from 'ngx-quill'\nimport { MatchHeightModule } from \"../shared/directives/match-height.directive\";\n\n\nimport { ValidationFormsComponent } from \"./validation/validation-forms.component\";\nimport { InputsComponent } from './elements/inputs/inputs.component';\nimport { InputGroupsComponent } from './elements/input-groups/input-groups.component';\nimport { ArchwizardComponent } from './archwizard/archwizard.component';\nimport { RadioComponent } from './elements/radio/radio.component';\nimport { CheckboxComponent } from './elements/checkbox/checkbox.component';\nimport { SwitchComponent } from './elements/switch/switch.component';\nimport { LayoutComponent } from './layout/layout.component';\nimport { DatepickerComponent } from './elements/datepicker/datepicker.component';\nimport { TimepickerComponent } from './elements/timepicker/timepicker.component';\nimport { TagsInputComponent } from './elements/tags-input/tags-input.component';\nimport { EditorComponent } from './elements/editor/editor.component';\nimport { SelectComponent } from './elements/select/select.component';\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsRoutingModule,\n        ReactiveFormsModule,\n        FormsModule,\n        HttpClientModule,\n        ArchwizardModule,\n        CustomFormsModule,\n        MatchHeightModule,\n        NgbModule,\n        UiSwitchModule,\n        QuillModule.forRoot(),\n        NgSelectModule,\n        TagInputModule\n    ],\n    declarations: [\n        ValidationFormsComponent,\n        InputsComponent,\n        InputGroupsComponent,\n        ArchwizardComponent,\n        RadioComponent,\n        CheckboxComponent,\n        SwitchComponent,\n        LayoutComponent,\n        DatepickerComponent,\n        TimepickerComponent,\n        TagsInputComponent,\n        EditorComponent,\n        SelectComponent,\n    ]\n\n})\nexport class FormModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"content-header\">Form Layouts</div>\n  </div>\n</div>\n<!-- Basic Form & Hidden Label Layouts starts -->\n<section id=\"basic-hidden-label-form-layouts\">\n  <div class=\"row match-height\">\n    <!-- Basic Form starts -->\n    <div class=\"col-lg-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Basic Form</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>This is the most basic and default form having inputs, labels and buttons.</p>\n            <form>\n              <div class=\"form-row\">\n                <div class=\"col-md-6 col-12\">\n                  <div class=\"form-group mb-2\">\n                    <label for=\"basic-form-1\">First Name</label>\n                    <input type=\"text\" id=\"basic-form-1\" class=\"form-control\" name=\"fname\">\n                  </div>\n                </div>\n                <div class=\"col-md-6 col-12\">\n                  <div class=\"form-group mb-2\">\n                    <label for=\"basic-form-2\">Last Name</label>\n                    <input type=\"text\" id=\"basic-form-2\" class=\"form-control\" name=\"lname\">\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-row\">\n                <div class=\"col-md-6 col-12\">\n                  <div class=\"form-group mb-2\">\n                    <label for=\"basic-form-3\">E-mail</label>\n                    <input type=\"text\" id=\"basic-form-3\" class=\"form-control\" name=\"email\">\n                  </div>\n                </div>\n                <div class=\"col-md-6 col-12\">\n                  <div class=\"form-group mb-2\">\n                    <label for=\"basic-form-4\">Contact Number</label>\n                    <input type=\"number\" id=\"basic-form-4\" class=\"form-control\" name=\"phone\">\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"basic-form-5\">Company</label>\n                <input type=\"text\" id=\"basic-form-5\" class=\"form-control\" name=\"company\">\n              </div>\n              <div class=\"form-row\">\n                <div class=\"col-md-6 col-12\">\n                  <div class=\"form-group mb-2\">\n                    <label for=\"basic-form-6\">Interested in</label>\n                    <select id=\"basic-form-6\" name=\"interested\" class=\"form-control\">\n                      <option value=\"none\" selected disabled>Interested in</option>\n                      <option value=\"design\">Design</option>\n                      <option value=\"development\">Development</option>\n                      <option value=\"illustration\">Illustration</option>\n                      <option value=\"branding\">Branding</option>\n                      <option value=\"video\">Video</option>\n                    </select>\n                  </div>\n                </div>\n                <div class=\"col-md-6 col-12\">\n                  <div class=\"form-group mb-2\">\n                    <label for=\"basic-form-7\">Budget</label>\n                    <select id=\"basic-form-7\" name=\"budget\" class=\"form-control\">\n                      <option value=\"0\" selected disabled>Budget</option>\n                      <option value=\"less than $5000\">less than $5000</option>\n                      <option value=\"$5000 - $10000\">$5000 - $10000</option>\n                      <option value=\"$10000 - $20000\">$10000 - $20000</option>\n                      <option value=\"more than $20000\">more than $20000</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"basic-form-8\">Select File</label>\n                <input type=\"file\" class=\"form-control-file\" id=\"basic-form-8\">\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"basic-form-9\">About Project</label>\n                <textarea id=\"basic-form-9\" rows=\"4\" class=\"form-control\" name=\"comment\"></textarea>\n              </div>\n              <button type=\"button\" class=\"btn btn-primary mr-2\"><i class=\"ft-check-square mr-1\"></i>Save</button>\n              <button type=\"button\" class=\"btn btn-secondary\"><i class=\"ft-x mr-1\"></i>Cancel</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Basic Form ends -->\n    <!-- Hidden Label starts -->\n    <div class=\"col-lg-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Hidden Label Form</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>Use <code>label.sr-only</code> to hide a label and <code>input.round</code> for round inputs. You may add <code>placeholder</code> attribute.</p>\n            <form>\n              <div class=\"form-group\">\n                <label class=\"sr-only\" for=\"hidden-label-form-1\">Company Name</label>\n                <input type=\"text\" id=\"hidden-label-form-1\" class=\"form-control round\" name=\"cname\" placeholder=\"Company Name\">\n              </div>\n              <div class=\"form-group\">\n                <label class=\"sr-only\" for=\"hidden-label-form-2\">Employee Name</label>\n                <input type=\"text\" id=\"hidden-label-form-2\" class=\"form-control round\" name=\"ename\" placeholder=\"Employee Name\">\n              </div>\n              <div class=\"form-group\">\n                <label class=\"sr-only\" for=\"hidden-label-form-3\">Employee ID</label>\n                <input type=\"number\" id=\"hidden-label-form-3\" class=\"form-control round\" name=\"eid\" placeholder=\"Employee ID\">\n              </div>\n              <div class=\"form-group position-relative\">\n                <label class=\"sr-only\" for=\"hidden-label-form-4\">Date</label>\n                <input type=\"text\" id=\"hidden-label-form-4\" class=\"form-control pickadate round\" placeholder=\"Joining Date\">\n              </div>\n              <div class=\"form-group\">\n                <label class=\"sr-only\" for=\"hidden-label-form-5\">Supervisor Name</label>\n                <input type=\"text\" id=\"hidden-label-form-5\" class=\"form-control round\" name=\"sname\" placeholder=\"Supervisor Name\">\n              </div>\n              <div class=\"form-group\">\n                <label class=\"sr-only\" for=\"hidden-label-form-6\">Details</label>\n                <textarea id=\"hidden-label-form-6\" rows=\"4\" class=\"form-control round\" name=\"comment2\" placeholder=\"Details\"></textarea>\n              </div>\n              <div class=\"form-group\">\n                <label class=\"sr-only\" for=\"hidden-label-form-7\">Signature</label>\n                <input type=\"text\" id=\"hidden-label-form-7\" class=\"form-control round\" name=\"sign\" placeholder=\"Signature\">\n              </div>\n              <button type=\"button\" class=\"btn btn-primary mr-2\"><i class=\"ft-check-square mr-1\"></i>Save</button>\n              <button type=\"button\" class=\"btn btn-secondary\"><i class=\"ft-x mr-1\"></i>Cancel</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Hidden Label ends -->\n  </div>\n</section>\n<!-- Basic Form & Hidden Label Layouts ends -->\n\n<!-- Horizontal Form Layout starts -->\n<section id=\"horizontal-form-layout\">\n  <div class=\"row match-height\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Horizontal Form</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>Use <code>label.col-form-label</code> for proper padding to a label. You can align label to right side by using <code>.text-right</code>. Use <code>input.square</code> for square inputs.</p>\n            <form>\n              <div class=\"row\">\n                <div class=\"col-md-6 col-12\">\n                  <div class=\"form-group row\">\n                    <label class=\"col-md-3 col-form-label\" for=\"horizontal-form-1\">First Name</label>\n                    <div class=\"col-md-9\">\n                      <input type=\"text\" class=\"form-control square\" id=\"horizontal-form-1\" name=\"first-name\">\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-6 col-12\">\n                  <div class=\"form-group row\">\n                    <label class=\"col-md-3 col-form-label\" for=\"horizontal-form-2\">Last Name</label>\n                    <div class=\"col-md-9\">\n                      <input type=\"text\" class=\"form-control square\" id=\"horizontal-form-2\" name=\"last-name\">\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row mb-md-3\">\n                <div class=\"col-md-6 col-12\">\n                  <div class=\"form-group row\">\n                    <label class=\"col-md-3 col-form-label\" for=\"horizontal-form-3\">Username</label>\n                    <div class=\"col-md-9\">\n                      <input type=\"text\" class=\"form-control square\" id=\"horizontal-form-3\" name=\"username\">\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-6 col-12\">\n                  <div class=\"form-group row\">\n                    <label class=\"col-md-3 col-form-label\" for=\"horizontal-form-4\">Nick Name</label>\n                    <div class=\"col-md-9\">\n                      <input type=\"text\" class=\"form-control square\" id=\"horizontal-form-4\" name=\"nick-name\">\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-6 col-12\">\n                  <div class=\"form-group row\">\n                    <label class=\"col-md-3 col-form-label\" for=\"horizontal-form-5\">Email</label>\n                    <div class=\"col-md-9\">\n                      <input type=\"email\" class=\"form-control square\" id=\"horizontal-form-5\" name=\"e-mail\">\n                    </div>\n                  </div>\n                  <div class=\"form-group row\">\n                    <label class=\"col-md-3 col-form-label\" for=\"horizontal-form-6\">Website</label>\n                    <div class=\"col-md-9\">\n                      <input type=\"text\" class=\"form-control square\" id=\"horizontal-form-6\" name=\"website\">\n                    </div>\n                  </div>\n                  <div class=\"form-group row\">\n                    <label class=\"col-md-3 col-form-label\" for=\"horizontal-form-7\">Contact Number</label>\n                    <div class=\"col-md-9\">\n                      <input type=\"number\" class=\"form-control square\" id=\"horizontal-form-7\" name=\"phone-number\">\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-6 col-12\">\n                  <div class=\"form-group row\">\n                    <label class=\"col-md-3 col-form-label\" for=\"horizontal-form-9\">About Project</label>\n                    <div class=\"col-md-9\">\n                      <textarea id=\"horizontal-form-9\" rows=\"6\" class=\"form-control square\" name=\"comment3\"></textarea>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <button type=\"button\" class=\"btn btn-primary mr-2\"><i class=\"ft-check-square mr-1\"></i>Save</button>\n              <button type=\"button\" class=\"btn btn-secondary\"><i class=\"ft-x mr-1\"></i>Cancel</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- Horizontal Form Layout ends -->\n\n<!-- Form Action Form Layout starts -->\n<section id=\"action-form-layout\">\n  <div class=\"row match-height\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Form Actions</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>You can use form actions on top & bottom and can also align them inside the form.</p>\n            <form>\n              <button type=\"button\" class=\"btn btn-primary mb-2 mr-2\"><i class=\"ft-check-square mr-1\"></i>Save</button>\n              <button type=\"button\" class=\"btn btn-secondary mb-2\"><i class=\"ft-x mr-1\"></i>Cancel</button>\n              <div class=\"form-group\">\n                <label for=\"form-action-1\">Issue Title</label>\n                <input type=\"text\" id=\"form-action-1\" class=\"form-control\" name=\"issue-title\">\n              </div>\n              <div class=\"form-group\">\n                <label for=\"form-action-2\">Opened By</label>\n                <input type=\"text\" id=\"form-action-2\" class=\"form-control\" name=\"opened-by\">\n              </div>\n              <div class=\"form-row\">\n                <div class=\"col-md-6 col-12\">\n                  <div class=\"form-group position-relative\">\n                    <label for=\"form-action-3\">Issue Opened</label>\n                    <input type=\"text\" id=\"form-action-3\" class=\"form-control pickadate\" placeholder=\"Opened Date\" name=\"date-opened\">\n                  </div>\n                </div>\n                <div class=\"col-md-6 col-12\">\n                  <div class=\"form-group position-relative\">\n                    <label for=\"form-action-4\">Issue Closed</label>\n                    <input type=\"text\" id=\"form-action-4\" class=\"form-control pickadate\" placeholder=\"Closed Date\" name=\"date-closed\">\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"form-action-5\">Priority</label>\n                <select id=\"form-action-5\" name=\"priority\" class=\"form-control\">\n                  <option value=\"Low\">Low</option>\n                  <option value=\"Medium\">Medium</option>\n                  <option value=\"High\">High</option>\n                </select>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"form-action-6\">Status</label>\n                <select id=\"form-action-6\" name=\"status\" class=\"form-control\">\n                  <option value=\"Not started\">Not started</option>\n                  <option value=\"Started\">Started</option>\n                  <option value=\"Started but not fixed\">Started but not fixed</option>\n                  <option value=\"Fixed\">Fixed</option>\n                </select>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"form-action-7\">Comment</label>\n                <textarea id=\"form-action-7\" rows=\"4\" class=\"form-control\" name=\"comment4\"></textarea>\n              </div>\n              <button type=\"button\" class=\"btn btn-primary mr-2\"><i class=\"ft-check-square mr-1\"></i>Save</button>\n              <button type=\"button\" class=\"btn btn-secondary\"><i class=\"ft-x mr-1\"></i>Cancel</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- Form Action Form Layout ends -->\n\n<!-- Bordered & Striped Row Form Layout starts -->\n<section id=\"bordered-striped-form-layout\">\n  <div class=\"row match-height\">\n    <!-- Bordered Form Layout starts -->\n    <div class=\"col-lg-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Bordered Form</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>Use <code>form.form-bordered .form-group</code> for bordered form and <code>label.label-control</code> for proper padding to a label.</p>\n            <form class=\"form-bordered\">\n              <div class=\"form-group row\">\n                <label class=\"col-md-3 label-control\" for=\"bordered-form-1\">Employee Name</label>\n                <div class=\"col-md-9\">\n                  <div class=\"position-relative has-icon-left\">\n                    <input type=\"text\" id=\"bordered-form-1\" class=\"form-control\" name=\"employeename\">\n                    <div class=\"form-control-position\">\n                      <i class=\"ft-user\"></i>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group row\">\n                <label class=\"col-md-3 label-control\" for=\"bordered-form-2\">Project Name</label>\n                <div class=\"col-md-9\">\n                  <div class=\"position-relative has-icon-left\">\n                    <input type=\"text\" id=\"bordered-form-2\" class=\"form-control\" name=\"projectname\">\n                    <div class=\"form-control-position\">\n                      <i class=\"ft-briefcase\"></i>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group row\">\n                <label class=\"col-md-3 label-control\" for=\"bordered-form-3\">Rate Per Hour</label>\n                <div class=\"col-md-9\">\n                  <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                      <span class=\"input-group-text\">$</span>\n                    </div>\n                    <input type=\"text\" id=\"bordered-form-3\" class=\"form-control\" aria-label=\"Amount (to the nearest dollar)\" name=\"rateperhour\">\n                    <div class=\"input-group-append\">\n                      <span class=\"input-group-text\">.00</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group row\">\n                <label class=\"col-md-3 label-control\" for=\"bordered-form-4\">Time</label>\n                <div class=\"col-md-9\">\n                  <div class=\"position-relative has-icon-left\">\n                    <input type=\"text\" id=\"bordered-form-4\" class=\"form-control pickatime\" name=\"time\">\n                    <div class=\"form-control-position\">\n                      <i class=\"ft-clock\"></i>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group row last mb-3\">\n                <label class=\"col-md-3 label-control\" for=\"bordered-form-6\">Notes</label>\n                <div class=\"col-md-9\">\n                  <div class=\"position-relative has-icon-left\">\n                    <textarea id=\"bordered-form-6\" rows=\"4\" class=\"form-control\" name=\"notes\"></textarea>\n                    <div class=\"form-control-position\">\n                      <i class=\"ft-file\"></i>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <button type=\"button\" class=\"btn btn-primary mr-2\"><i class=\"ft-check-square mr-1\"></i>Save</button>\n              <button type=\"button\" class=\"btn btn-secondary\"><i class=\"ft-x mr-1\"></i>Cancel</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Bordered Form Layout ends -->\n    <!-- Striped Row Form Layout starts -->\n    <div class=\"col-lg-6 col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title\">Striped Row</h4>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <p>Use <code>form.striped-rows .form-group</code> for striped form and <code>label.label-control</code> for proper padding to a label. You can use bordered and striped both at the same time.</p>\n            <form class=\"striped-rows\">\n              <div class=\"form-group row\">\n                <label class=\"col-md-3 label-control\" for=\"striped-form-1\">Full Name</label>\n                <div class=\"col-md-9\">\n                  <input type=\"text\" id=\"striped-form-1\" class=\"form-control\" name=\"fullname\" placeholder=\"Full Name\">\n                </div>\n              </div>\n              <div class=\"form-group row\">\n                <label class=\"col-md-3 label-control\" for=\"striped-form-2\">Title</label>\n                <div class=\"col-md-9\">\n                  <input type=\"text\" id=\"striped-form-2\" class=\"form-control\" name=\"title\" placeholder=\"Title\">\n                </div>\n              </div>\n              <div class=\"form-group row\">\n                <label class=\"col-md-3 label-control\" for=\"striped-form-3\">Company</label>\n                <div class=\"col-md-9\">\n                  <input type=\"text\" id=\"striped-form-3\" class=\"form-control\" name=\"company3\" placeholder=\"Company\">\n                </div>\n              </div>\n              <div class=\"form-group row\">\n                <label class=\"col-md-3 label-control\" for=\"striped-form-4\">Email</label>\n                <div class=\"col-md-9\">\n                  <input type=\"email\" id=\"striped-form-4\" class=\"form-control\" name=\"email2\" placeholder=\"E-mail\">\n                </div>\n              </div>\n              <div class=\"form-group row\">\n                <label class=\"col-md-3 label-control\" for=\"striped-form-5\">Contact Number</label>\n                <div class=\"col-md-9\">\n                  <input type=\"number\" id=\"striped-form-5\" class=\"form-control\" name=\"contact\" placeholder=\"Contact Number\">\n                </div>\n              </div>\n              <div class=\"form-group row last mb-3\">\n                <label class=\"col-md-3 label-control\">Existing Customer</label>\n                <div class=\"col-md-9\">\n                  <div class=\"input-group col-md-9\">\n                    <div class=\"radio d-inline-block mr-2 mb-1\">\n                      <input type=\"radio\" id=\"striped-form-6\" name=\"striped-radio\">\n                      <label for=\"striped-form-6\">Yes</label>\n                    </div>\n                    <div class=\"radio d-inline-block\">\n                      <input type=\"radio\" id=\"striped-form-7\" checked name=\"striped-radio\">\n                      <label for=\"striped-form-7\">No</label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <button type=\"button\" class=\"btn btn-primary mr-2\"><i class=\"ft-check-square mr-1\"></i>Save</button>\n              <button type=\"button\" class=\"btn btn-secondary\"><i class=\"ft-x mr-1\"></i>Cancel</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Striped Row Form Layout ends -->\n  </div>\n</section>\n<!-- Bordered & Striped Row Form Layout ends -->\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators, NgForm } from '@angular/forms';\n\nexport class User {\n  public fname: string;\n  public lname: string;\n  public city: string;\n}\n\n@Component({\n  selector: 'app-validation-forms',\n  templateUrl: './validation-forms.component.html',\n  styleUrls: ['./validation-forms.component.scss']\n})\n\nexport class ValidationFormsComponent implements OnInit {\n  @ViewChild('vform') validationForm: FormGroup;\n  user: User;\n  model = new User();\n  submitted = false;\n\n  employeeForm = new FormGroup({\n    fname: new FormControl('Mark', [Validators.required]),\n    lname: new FormControl('Otto', [Validators.required]),\n    city: new FormControl('', [Validators.required])\n  });\n\n  constructor() {\n    this.model = {\n      fname: 'Mark',\n      lname: 'Otto',\n      city: ''\n    }\n  }\n\n  ngOnInit() {\n\n  }\n\n  onSubmit(form) {\n    console.log(form.value)\n  }\n\n  get f() {\n    return this.employeeForm.controls;\n  }\n\n  onReactiveFormSubmit() {\n    this.submitted = true;\n    if (this.employeeForm.invalid) {\n      return;\n    }\n    console.log(this.employeeForm.value);\n  }\n\n  onCustomFormSubmit() {\n    this.validationForm.reset();\n  }\n\n\n\n\n}\n","<div class=\"row text-left\">\n  <div class=\"col-sm-12\">\n    <div class=\"content-header\">Form Validation</div>\n  </div>\n</div>\n\n\n<section id=\"tooltip-validation\">\n\t<div class=\"row\">\n\t\t<div class=\"col-12\">\n\t\t\t<div class=\"card\">\n\t\t\t\t<div class=\"card-header\">\n\t\t\t\t\t<h4 class=\"card-title\">Validation States with Tooltips (Template Driven Form)</h4>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"card-content\">\n\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t<p>Use <code>form.needs-validation</code> and swap <code>.&#123;valid/invalid&#125;-feedback</code> with <code>.&#123;valid/invalid&#125;-tooltip</code> to display validation feedback in a styled tooltip.</p>\n\t\t\t\t\t\t<form class=\"needs-validation\" #userForm=\"ngForm\" (ngSubmit)=\"userForm.form.valid && onSubmit(userForm)\">\n\t\t\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t\t\t<div class=\"col-md-4 mb-4 form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"validationTooltip01\">First name</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"fname\" class=\"form-control\" id=\"validationTooltip01\" placeholder=\"First name\" [(ngModel)]=\"model.fname\" #fname=\"ngModel\"\n                  [ngClass]=\"{ 'is-invalid': userForm.submitted && fname.invalid, 'is-valid': userForm.submitted &&  !fname.invalid }\" required>\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"userForm.submitted && !fname.errors?.required\" class=\"valid-tooltip\">Looks good!</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"col-md-4 mb-4 form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"validationTooltip02\">Last name</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"lname\" class=\"form-control\" id=\"validationTooltip02\" placeholder=\"Last name\"   [(ngModel)]=\"model.lname\" #lname=\"ngModel\"\n                  [ngClass]=\"{ 'is-invalid': userForm.submitted && lname.invalid, 'is-valid': userForm.submitted && !lname.invalid }\" required>\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"userForm.submitted && !lname.errors?.required\" class=\"valid-tooltip\">Looks good!</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"col-md-4 mb-4 form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"validationTooltip03\">City</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"city\" class=\"form-control\" id=\"validationTooltip03\" placeholder=\"City\"  [(ngModel)]=\"model.city\" #city=\"ngModel\"\n                  [ngClass]=\"{ 'is-invalid': userForm.submitted && city.invalid, 'is-valid': userForm.submitted && !city.invalid }\" required>\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"userForm.submitted && (city.invalid || city.errors?.required)\" class=\"invalid-tooltip\">Please provide a valid city.</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button class=\"btn btn-primary\" type=\"submit\">Submit</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n  </div>\n\n  <div class=\"row\">\n\t\t<div class=\"col-12\">\n\t\t\t<div class=\"card\">\n\t\t\t\t<div class=\"card-header\">\n\t\t\t\t\t<h4 class=\"card-title\">Validation States with Tooltips (Reactive Form)</h4>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"card-content\">\n\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t<p>Use <code>form.needs-validation</code> and swap <code>.&#123;valid/invalid&#125;-feedback</code> with <code>.&#123;valid/invalid&#125;-tooltip</code> to display validation feedback in a styled tooltip.</p>\n\t\t\t\t\t\t<form class=\"needs-validation\" [formGroup]=\"employeeForm\" (ngSubmit)=\"onReactiveFormSubmit()\">\n\t\t\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t\t\t<div class=\"col-md-4 mb-4 form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"validationTooltip04\">First name</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" formControlName=\"fname\" class=\"form-control\" id=\"validationTooltip04\" placeholder=\"First name\"\n                  [ngClass]=\"{ 'is-invalid': submitted && f.fname.invalid, 'is-valid': submitted &&  !f.fname.invalid }\" required>\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted && !f.fname.errors?.required\" class=\"valid-tooltip\">Looks good!</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"col-md-4 mb-4 form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"validationTooltip05\">Last name</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" formControlName=\"lname\" class=\"form-control\" id=\"validationTooltip05\" placeholder=\"Last name\"\n                  [ngClass]=\"{ 'is-invalid': submitted && f.lname.invalid, 'is-valid': submitted && !f.lname.invalid }\" required>\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted && !f.lname.errors?.required\" class=\"valid-tooltip\">Looks good!</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"col-md-4 mb-4 form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"validationTooltip06\">City</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" formControlName=\"city\" class=\"form-control\" id=\"validationTooltip06\" placeholder=\"City\"\n                  [ngClass]=\"{ 'is-invalid': submitted && f.city.invalid, 'is-valid': submitted && !f.city.invalid }\" required>\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted && (f.city.invalid || f.city.errors?.required)\" class=\"invalid-tooltip\">Please provide a valid city.</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button class=\"btn btn-primary\" type=\"submit\">Submit</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</section>\n\n<!-- Custom Form Validaton Starts -->\n<div class=\"row text-left\">\n  <div class=\"col-sm-12\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h4 class=\"card-title\">Custom Validations</h4>\n      </div>\n      <div class=\"card-content\">\n        <div class=\"card-body\">\n          <form (ngSubmit)=\"onCustomFormSubmit()\" #vform=\"ngForm\">\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <div class=\"form-group mb-2\">\n                <label for=\"required\">required</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"required\" #required=\"ngModel\" required placeholder=\"required\" />\n                <small class=\"form-text text-muted danger\" *ngIf=\"required.errors?.required\">required error</small>\n\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"minlength\">minlength</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"minlength\" #minlength=\"ngModel\" placeholder=\"minlength 5\"\n                  minlength=\"5\" />\n                <small class=\"form-text text-muted danger\" *ngIf=\"minlength.errors?.minlength\">minlength error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"maxlength\">maxlength</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"maxlength\" #maxlength=\"ngModel\" placeholder=\"maxlength 5\"\n                  maxlength=\"5\" />\n                <small class=\"form-text text-muted danger\" *ngIf=\"maxlength.errors?.maxlength\">required error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"rangelength\">rangelength</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"rangelength\" #rangelength=\"ngModel\" placeholder=\"rangeLength [5, 9]\"\n                  [rangeLength]=\"[5, 9]\" />\n                <small class=\"form-text text-muted danger\" *ngIf=\"rangelength.errors?.rangeLength\">rangelength error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"pattern\">pattern</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"pattern\" #pattern=\"ngModel\" placeholder=\"[a-z]{6}\"\n                  pattern=\"[a-z]{6}\" />\n                <small class=\"form-text text-muted danger\" *ngIf=\"pattern.errors?.pattern\">pattern error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"base64\">base64</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"base64\" #base64=\"ngModel\" placeholder=\"base64\"\n                  base64 />\n                <small class=\"form-text text-muted danger\" *ngIf=\"base64.errors?.base64\">base64 error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"creditCard\">creditCard</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"creditCard\" #creditCard=\"ngModel\" placeholder=\"creditCard\"\n                  creditCard />\n                <small class=\"form-text text-muted danger\" *ngIf=\"creditCard.errors?.creditCard\">creditCard error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"date\">date</label>\n                <input type=\"date\" class=\"form-control\" ngModel name=\"date\" #date=\"ngModel\" placeholder=\"date\" date />\n                <small class=\"form-text text-muted danger\" *ngIf=\"date.errors?.date\">date error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"dateISO\">dateISO</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"dateISO\" #dateISO=\"ngModel\" placeholder=\"dateISO\"\n                  dateISO />\n                <small class=\"form-text text-muted danger\" *ngIf=\"dateISO.errors?.dateISO\">dateISO error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"maxDate\">maxDate</label>\n                <input type=\"date\" class=\"form-control\" ngModel name=\"maxDate\" #maxDate=\"ngModel\" placeholder=\"maxDate 2019-11-11\"\n                  maxDate=\"2019-11-11\" />\n                <small class=\"form-text text-muted danger\" *ngIf=\"maxDate.errors?.maxDate\">maxDate error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"minDate\">minDate</label>\n                <input type=\"date\" class=\"form-control\" ngModel name=\"minDate\" #minDate=\"ngModel\" placeholder=\"minDate 2019-11-11\"\n                  minDate=\"2019-11-11\" />\n                <small class=\"form-text text-muted danger\" *ngIf=\"minDate.errors?.minDate\">minDate error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"digits\">digits</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"digits\" #digits=\"ngModel\" placeholder=\"digits\"\n                  digits />\n                <small class=\"form-text text-muted danger\" *ngIf=\"digits.errors?.digits\">digits error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"email\">email</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"email\" #email=\"ngModel\" placeholder=\"email\" email />\n                <small class=\"form-text text-muted danger\" *ngIf=\"email.errors?.email\">email error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"equal\">equal</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"equal\" #equal=\"ngModel\" placeholder=\"equal to apex\"\n                  equal=\"apex\" />\n                <small class=\"form-text text-muted danger\" *ngIf=\"equal.errors?.equal\">equal error</small>\n              </div>\n            </div>\n            <div class=\"col-md-6\">\n              <div class=\"form-group mb-2\">\n                <label for=\"notEqual\">notEqual</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"notEqual\" #notEqual=\"ngModel\" placeholder=\"not equal to apex\"\n                  notEqual=\"apex\" />\n                <small class=\"form-text text-muted danger\" *ngIf=\"notEqual.errors?.notEqual\">notEqual error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"password\">equalTo</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"password\" #password=\"ngModel\" placeholder=\"password\"\n                  required />\n                <small class=\"form-text text-muted danger\" *ngIf=\"password.errors?.required\">required error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <input type=\"text\" class=\"form-control\" ngModel name=\"equalTo\" #equalTo=\"ngModel\" placeholder=\"confirm password\"\n                  [equalTo]=\"password\" />\n                <small class=\"form-text text-muted danger\" *ngIf=\"equalTo.errors?.equalTo\">equalTo error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"oldPassword\">notEqualTo</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"oldPassword\" #oldPassword=\"ngModel\" placeholder=\"password\"\n                  required />\n                <small class=\"form-text text-muted danger\" *ngIf=\"oldPassword.errors?.required\">required error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <input type=\"text\" class=\"form-control\" ngModel name=\"notEqualTo\" #notEqualTo=\"ngModel\" placeholder=\"confirm password\"\n                  [notEqualTo]=\"oldPassword\" />\n                <small class=\"form-text text-muted danger\" *ngIf=\"notEqualTo.errors?.notEqualTo\">notEqualTo error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"gt\">gt</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"gt\" #gt=\"ngModel\" placeholder=\"gt 20\" gt=\"20\" />\n                <small class=\"form-text text-muted danger\" *ngIf=\"gt.errors?.gt\">gt error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"lt\">lt</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"lt\" #lt=\"ngModel\" placeholder=\"lt 10\" lt=\"10\" />\n                <small class=\"form-text text-muted danger\" *ngIf=\"lt.errors?.lt\">lt error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"json\">json</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"json\" #json=\"ngModel\" placeholder=\"json\" json />\n                <small class=\"form-text text-muted danger\" *ngIf=\"json.errors?.json\">json error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"max\">max</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"max\" #max=\"ngModel\" placeholder=\"max 10\" max=\"10\" />\n                <small class=\"form-text text-muted danger\" *ngIf=\"max.errors?.max\">max error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"min\">min</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"min\" #min=\"ngModel\" placeholder=\"min 10\" min=\"10\" />\n                <small class=\"form-text text-muted danger\" *ngIf=\"min.errors?.min\">min error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"number\">number</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"number\" #number=\"ngModel\" placeholder=\"number\"\n                  number />\n                <small class=\"form-text text-muted danger\" *ngIf=\"number.errors?.number\">number error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"phone\">phone</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"phone\" #phone=\"ngModel\" placeholder=\"phone\" phone />\n                <small class=\"form-text text-muted danger\" *ngIf=\"phone.errors?.phone\">phone error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"url\">url</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"url\" #url=\"ngModel\" placeholder=\"url\" url />\n                <small class=\"form-text text-muted danger\" *ngIf=\"url.errors?.url\">url error</small>\n              </div>\n              <div class=\"form-group mb-2\">\n                <label for=\"uuid\">uuid</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"uuid\" #uuid=\"ngModel\" placeholder=\"uuid\" uuid />\n                <small class=\"form-text text-muted danger\" *ngIf=\"uuid.errors?.uuid\">uuid error</small>\n              </div>\n            </div>\n          </div>\n        </form>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Custom Form Validaton Ends -->\n","import {\n    Directive, ElementRef, AfterViewInit,\n    Input, HostListener, NgModule\n} from '@angular/core';\n\n@Directive({\n    selector: '[matchHeight]'\n})\nexport class MatchHeightDirective implements AfterViewInit {\n    // class name to match height\n    @Input()\n    matchHeight : string;\n\n    constructor(private el: ElementRef) {\n    }\n\n    ngAfterViewInit() {\n        // call our matchHeight function here\n        setTimeout(() => { this.matchHeights(this.el.nativeElement, this.matchHeight )}, 300);\n    }\n\n    matchHeights(parent: HTMLElement, className: string) {\n        // match height logic here\n\n        if (!parent) return;\n\n        // step 1: find all the child elements with the selected class name\n        const children = parent.getElementsByClassName(className);\n\n        if (!children) return;\n\n        //Pixinvent - Match hight - fix --- comment below code\n        Array.from(children).forEach((x: HTMLElement) => {\n            x.style.height = 'initial';\n        });\n\n        // step 2a: get all the child elements heights\n        const itemHeights = Array.from(children)\n            .map(x => x.getBoundingClientRect().height);\n\n        // step 2b: find out the tallest\n        const maxHeight = itemHeights.reduce((prev, curr) => {\n            return curr > prev ? curr : prev;\n        }, 0);\n\n        // step 3: update all the child elements to the tallest height\n        Array.from(children)\n            .forEach((x: HTMLElement) => x.style.height = `${maxHeight}px`);\n    }\n\n    @HostListener('window:resize')\n    onResize() {\n        // call our matchHeight function here\n        this.matchHeights(this.el.nativeElement, this.matchHeight );\n    }\n}\n\n@NgModule({\n    declarations: [MatchHeightDirective],\n    exports: [MatchHeightDirective]\n})\n\nexport class MatchHeightModule { }"],"sourceRoot":"webpack:///"}